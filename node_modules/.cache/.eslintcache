[{"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\staff\\DeleteDialog.js":"1","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\product\\Product.jsx":"2","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\MPO\\MPO.jsx":"3","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\Inventory\\Inventory.jsx":"4","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\index.js":"5","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\App.js":"6","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MO.jsx":"7","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MOForm.jsx":"8","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\common\\Navbar.js":"9","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOMForm.jsx":"10","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\ProductForm.jsx":"11","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\Product.jsx":"12","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOM.jsx":"13","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\MPO\\MPO.jsx":"14","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\Inventory\\Inventory.jsx":"15","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\ProductList.js":"16","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MOList.jsx":"17","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\staff\\DeleteDialog.js":"18","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\misc\\api.js":"19","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\common\\Pagination.jsx":"20","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOMList.jsx":"21","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\Inventory\\InventoryList.jsx":"22","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\MPO\\MPOList.jsx":"23"},{"size":558,"mtime":1673598564485,"results":"24","hashOfConfig":"25"},{"size":4212,"mtime":1673676567041,"results":"26","hashOfConfig":"25"},{"size":4456,"mtime":1673678169712,"results":"27","hashOfConfig":"25"},{"size":4223,"mtime":1673678404603,"results":"28","hashOfConfig":"25"},{"size":360,"mtime":1673541757870,"results":"29","hashOfConfig":"30"},{"size":2138,"mtime":1673682525379,"results":"31","hashOfConfig":"30"},{"size":4531,"mtime":1673682372005,"results":"32","hashOfConfig":"30"},{"size":6523,"mtime":1673679198061,"results":"33","hashOfConfig":"30"},{"size":2479,"mtime":1673677486047,"results":"34","hashOfConfig":"30"},{"size":5797,"mtime":1673682302899,"results":"35","hashOfConfig":"30"},{"size":5063,"mtime":1673658609003,"results":"36","hashOfConfig":"30"},{"size":4212,"mtime":1673676567041,"results":"37","hashOfConfig":"30"},{"size":4223,"mtime":1673680209423,"results":"38","hashOfConfig":"30"},{"size":4456,"mtime":1673678169712,"results":"39","hashOfConfig":"30"},{"size":4223,"mtime":1673678404603,"results":"40","hashOfConfig":"30"},{"size":2326,"mtime":1673669063900,"results":"41","hashOfConfig":"30"},{"size":3965,"mtime":1673682350735,"results":"42","hashOfConfig":"30"},{"size":558,"mtime":1673598564485,"results":"43","hashOfConfig":"30"},{"size":99,"mtime":1673553767385,"results":"44","hashOfConfig":"30"},{"size":627,"mtime":1673670057022,"results":"45","hashOfConfig":"30"},{"size":2899,"mtime":1673661868126,"results":"46","hashOfConfig":"30"},{"size":2261,"mtime":1673679342934,"results":"47","hashOfConfig":"30"},{"size":3122,"mtime":1673678966691,"results":"48","hashOfConfig":"30"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"76lwun",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k0qr5v",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\staff\\DeleteDialog.js",[],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\product\\Product.jsx",["134","135","136","137","138"],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\MPO\\MPO.jsx",["139","140"],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\src\\components\\Inventory\\Inventory.jsx",["141","142","143"],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\index.js",[],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\App.js",["144","145"],[],"import React, { useState, useEffect } from \"react\"\nimport { Route } from 'react-router-dom'\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js'\nimport { Security, SecureRoute, LoginCallback } from '@okta/okta-react'\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './components/common/Navbar'\n\nimport Product from \"./components/product/Product\";\nimport ProductForm from \"./components/product/ProductForm\";\nimport BOMForm from \"./components/BOM/BOMForm\";\nimport MO from \"./MO/MO\";\nimport MPO from \"./components/MPO/MPO\";\nimport BOM from \"./components/BOM/BOM\";\nimport MOForm from \"./MO/MOForm\";\nimport Inventory from \"./components/Inventory/Inventory\";\n\nfunction App() {\n\n  const oktaAuth = new OktaAuth({\n    issuer: `https://dev-27044634.okta.com/oauth2/default`,\n    clientId: `0oa7xj2om73nhXae15d7`,\n    redirectUri: `${window.location.origin}/implicit/callback`\n  })\n\n  const history = useHistory();\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\n    history.replace(toRelativeUrl(originalUri || '/', window.location.origin));\n  };\n  \n  return (\n    <Security oktaAuth={oktaAuth} restoreOriginalUri={restoreOriginalUri} >\n      <div className=\"App\"> \n        <Navbar />\n\n        <SecureRoute path='/customer' exact component={Product} />\n        <SecureRoute path='/products' exact component={Product} />\n        <SecureRoute path='/add-product' component={ProductForm} />\n        <SecureRoute path='/add-bom' component={BOMForm} />\n        <SecureRoute path='/update-product' component={ProductForm} />\n        <SecureRoute path='/mo' component={MO} />\n        <SecureRoute path='/mpo' component={MPO} />\n        <SecureRoute path='/bom' component={BOM} />\n        <SecureRoute path='/add-bom' component={BOMForm} />\n        <SecureRoute path='/update-bom' component={BOMForm} />\n        <SecureRoute path='/add-mo' component={MOForm} />\n        <SecureRoute path='/update-mo' component={MOForm} />\n        <SecureRoute path='/inventory' component={Inventory} />\n        <Route path='/implicit/callback' component={LoginCallback} />\n      </div>\n    </Security>\n  )\n}\n\nexport default App\n","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MO.jsx",["146","147","148"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport DeleteDialog from '../components/staff/DeleteDialog'\r\nimport M from 'materialize-css'\r\nimport { Link } from 'react-router-dom'\r\nimport MOList from './MOList'\r\nimport API from '../components/misc/api'\r\n\r\nclass MO extends Component {\r\n    state = {\r\n        MO: [],\r\n        code: '',\r\n        page: 1,\r\n        totalPage: 1\r\n    }\r\n\r\n    deleteModal = null\r\n\r\n\r\n    showDialog = (code) => {\r\n        this.code = code\r\n        this.deleteModal.open()\r\n    }\r\n\r\n    async componentDidMount() {\r\n    \r\n        this.getProducts(1)\r\n        this.deleteModal = M.Modal.init(document.getElementById('deleteModal'))\r\n    }\r\n    getProducts = async (page) => {\r\n        API.get(`mo`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.oktaAuth.authStateManager._authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(response => {\r\n                let pageNum = new URLSearchParams(window.location.search).get('page');\r\n                let keyword = new URLSearchParams(window.location.search).get('keyword');\r\n                if (pageNum == null) {\r\n                    pageNum = 1;\r\n                }\r\n                let pageData = new Object()\r\n                if (keyword != null) {\r\n                    let filter = response.data.filter(item =>\r\n                        item.client.includes(keyword)\r\n                    )\r\n                    pageData = filter.slice((pageNum * 2) - 2, pageNum * 2)\r\n                } else {\r\n                    pageData = response.data.slice((pageNum * 2) - 2, pageNum * 2)\r\n                }\r\n                console.log(this.props.oktaAuth.authStateManager._authState.accessToken.accessToken)\r\n                this.setState({\r\n                    MO: pageData,\r\n                    page: pageNum,\r\n                    totalPage: (pageData.length / 3) + 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteProduct = async () => {\r\n        API.delete(`mo/${this.code}`, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n          }\r\n        })\r\n          .then(() => {\r\n            window.location.reload(false);\r\n          })    \r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n    }\r\n\r\n    setToDone = async (code) => {\r\n        API.put(`mo/${code}`, {\r\n            headers: {\r\n              'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            }\r\n          })\r\n            .then(() => {\r\n            })    \r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n      }\r\n\r\n      searchKeyword = () => {\r\n        window.location.replace(window.location.pathname + '?keyword=' + document.getElementById('search').value + \"&page=1\")\r\n    }\r\n    render() {\r\n        const currentPage = this.state.page\r\n        const previousPage = currentPage - 1\r\n        let pageNum = new URLSearchParams(window.location.search).get('page');\r\n        const nextPage = previousPage  + 2;\r\n        const minPage = currentPage > 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const maxPage = currentPage< this.state.totalPage + 1? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const keyword = new URLSearchParams(window.location.search).get('keyword');\r\n        const url = keyword == null ? window.location.pathname + '?page=' : window.location.pathname + '?keyword=' + keyword + '&page='\r\n        return (\r\n            <div>\r\n                <MOList mos={this.state.MO} showDialog={this.showDialog} setToDone={this.setToDone}/>\r\n                <input class=\"w3-input w3-border w3-white\" id=\"search\" type=\"text\"  />\r\n                <button className='w3-green w3-xlarge w3-padding w3-center w3-margin' onClick={this.searchKeyword}>Search</button>\r\n                <div class=\"w3-bar w3-large w3-container w3-center\">\r\n                    <a href={url + previousPage} class=\"w3-button\" style={minPage}>{previousPage}</a>\r\n                    <a href={url + currentPage} class=\"w3-button w3-green\">{currentPage}</a>\r\n                    <a href={url + nextPage} style={maxPage} class=\"w3-button   \">{nextPage}</a>\r\n                </div>\r\n                <DeleteDialog deleteObject={this.deleteProduct}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(MO)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MOForm.jsx",["149","150","151","152","153","154","155","156","157","158","159"],[],"import React, { Component, useState } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../components/misc/api'\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nclass MOForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            client: '',\r\n            endDate: '',\r\n            deliveryDate: '',\r\n            components: [''],\r\n            quantity: [0]\r\n        }\r\n    }\r\n\r\n\r\n    addCategory = () => {\r\n        let buf = this.state.components\r\n        let buf2 = this.state.quantity\r\n        buf.push('')\r\n        buf2.push(0)\r\n        this.setState(\r\n            {\r\n                components: buf,\r\n                quantity: buf2\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    removeCategory = (index) => {\r\n        let num = this.state.categories.length\r\n        if (num > 1) {\r\n            let buf = [...this.state.categories];\r\n            buf.splice(index, 1)\r\n            this.setState(\r\n                {\r\n                    categories: buf\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleComponents = (index, e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...this.state.components];\r\n        list[index] = value;\r\n        this.setState(\r\n            {\r\n                components: list\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handleQuantity = (index, e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...this.state.quantity];\r\n        list[index] = value;\r\n        this.setState(\r\n            {\r\n                quantity: list\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    saveProduct = async (event) => {\r\n        var obj = new Object()\r\n        obj.endDate = this.state.endDate\r\n        obj.deliveryDate = this.state.deliveryDate\r\n        obj.productDetails = new Object()\r\n        obj.client = this.state.client\r\n        event.preventDefault()\r\n        for (let i = 0; i < this.state.components.length; i++) {\r\n            let key = this.state.components[i]\r\n            let num = this.state.quantity[i]\r\n            obj.productDetails[key] = parseInt(num)\r\n        }\r\n        console.log(JSON.stringify(obj))\r\n\r\n        let method = 'POST'\r\n        let url = 'http://localhost:8080/api/mo'\r\n        API.request({\r\n            method: method,\r\n            url: url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            },\r\n            data: JSON.stringify(obj)\r\n        })\r\n            .then(() => {\r\n                window.location.replace('/bom');\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const checkPath = this.props.match.path.localeCompare(\"/add-mo\")\r\n        const showCode = checkPath == 0 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const msg = checkPath == 0 ? \"Add new Manufacturing Order\" : \"Update Manufacturing Order\"\r\n\r\n        let product = { ...this.state }\r\n        product.code = checkPath == 1 ? new URLSearchParams(this.props.location.search).get('title') : ''\r\n\r\n\r\n        return (\r\n            <div id=\"form\" action=\"javascript:void(0);\" onSubmit={this.saveProduct}>\r\n                <form class=\"w3-container\" style={{ margin: \"250px\" }} onsubmit=\"return false\">\r\n                    <h1 className='w3-margin w3-text-black w3-xxxlarge'>{msg}</h1>\r\n                    <div className='w3-row'>\r\n                        <div>\r\n                            <label class=\"w3-text-black w3-xlarge\"><b>Client </b></label>\r\n                            <input class=\"w3-input w3-border w3-white\" id=\"client\" onChange={this.handleChange} value={this.state.client} type=\"text\" required />\r\n                        </div>\r\n                        <div>\r\n                            <label class=\"w3-text-black w3-xlarge\"><b>End Date </b></label>\r\n                            <input class=\"w3-input w3-border w3-white\" id=\"endDate\" onChange={this.handleChange} value={this.state.endDate} type=\"date\" required />\r\n                        </div>\r\n                        <div>\r\n                            <label class=\"w3-text-black w3-xlarge\"><b>Delivery Date </b></label>\r\n                            <input class=\"w3-input w3-border w3-white\" id=\"deliveryDate\" onChange={this.handleChange} value={this.state.deliveryDate} type=\"date\" required />\r\n                        </div>\r\n                        {\r\n                            this.state.components.map((component, index) => (\r\n                                <div className='w3-col'>\r\n                                    <label class=\"w3-text-black w3-xlarge\"><b>Component</b></label>\r\n\r\n                                    <input class=\"w3-input w3-border w3-white w3-left\" value={component} required type='text' id={index} onChange={(evnt) => this.handleComponents(index, evnt)}></input>\r\n                                </div>\r\n                            ))}\r\n                        {\r\n                            this.state.quantity.map((value, index) => (\r\n                                <div>\r\n                                    <label class=\"w3-text-black w3-xlarge\"><b>Quantity</b></label>\r\n                                    <input class=\"w3-input w3-border w3-white w3-left\" value={value} required min={1} type='number' id={index} onChange={(evnt) => this.handleQuantity(index, evnt)}></input>\r\n                                    <div>\r\n                                        <button class=\"w3-button w3-red\" type=\"button\" onClick={() => this.removeCategory({ index })}> X</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <button class=\"w3-button w3-green w3-large w3-margin\" type=\"button\" onClick={this.addCategory}> Add Component <i class=\"fa fa-plus\"></i></button>\r\n                    </div>\r\n                    <Link exact to='/mo' className='w3-button w3-red w3-padding w3-large'>Cancel</Link>\r\n                    <button class=\"w3-btn w3-teal w3-large w3-bordered w3-margin\" type='submit'>Submit</button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(MOForm)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\common\\Navbar.js",["160","161","162"],[],"import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { withOktaAuth } from '@okta/okta-react'\nimport M from 'materialize-css'\nimport 'w3-css/w3.css'\n\nclass Navbar extends Component {\n  state = {\n    authenticated: false,\n    user: null\n  }\n\n  async componentDidMount() { \n    this.checkAuthentication()\n\n    \n  }\n\n  async componentDidUpdate() {\n    this.checkAuthentication()\n  }\n\n  checkAuthentication = async () => {\n    if (this.props.authState) {\n      const authenticated = await this.props.authState.isAuthenticated\n      if (authenticated !== this.state.authenticated) {\n        const user = await this.props.oktaAuth.getUser()\n        this.setState({ authenticated, user })\n      } \n    }\n  }\n\n  logHandleLogInOut = async () => {\n    this.state.authenticated ? this.props.oktaAuth.signOut('/') : this.props.oktaAuth.signInWithRedirect('/')\n  }\n\n  render() {\n    const linkVisibility = this.state.authenticated ? { \"display\": \"block\" } : { \"display\": \"none\" }\n    const username = this.state.authenticated && this.state.user.preferred_username\n    const logInOut = this.state.authenticated ? \"Sign Out\" : \"Sign In\"\n\n    return (\n      <div className=\"w3-top\" id=\"navBar\">\n        <div className=\"w3-bar w3- w3-card\">\n          <p className=\"w3-padding-large w3-bar-item w3-left w3-cursive w3-wide w3-large w3-margin w3-hide-small\"> PHUONG HAI</p>\n          <Link exact to=\"/\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" id='loginBtn' onClick={this.logHandleLogInOut}>{logInOut}</Link>\n          <Link exact to=\"/products\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" style={linkVisibility}>Products</Link>\n          <Link exact to=\"/mo\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" style={linkVisibility}>Manufacturing Order</Link>\n          <Link exact to=\"/bom\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" style={linkVisibility}>Bill Of Material</Link>\n          <Link exact to=\"/mpo\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" style={linkVisibility}>Material Purchase Order</Link>\n          <Link exact to=\"/inventory\" className=\"w3-padding-large w3-button w3-bar-item w3-right w3-large w3-margin right\" style={linkVisibility}>Inventory</Link>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withOktaAuth(Navbar)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOMForm.jsx",["163","164","165","166","167","168","169","170","171","172"],[],"import React, { Component, useState } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../misc/api'\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nclass BOMForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data : {},\r\n            title: '',\r\n            components: [''],\r\n            quantity: [0]\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n       this.getData()\r\n    }\r\n\r\n\r\n    addCategory = () => {\r\n        let buf = this.state.components\r\n        let buf2 = this.state.quantity\r\n        buf.push('')\r\n        buf2.push(0)\r\n        this.setState(\r\n            {\r\n                components: buf,\r\n                quantity: buf2\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    removeCategory = (index) => {\r\n        let num = this.state.categories.length\r\n        if (num > 1) {\r\n            let buf = [...this.state.categories];\r\n            buf.splice(index, 1)\r\n            this.setState(\r\n                {\r\n                    categories: buf\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleComponents = (index, e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...this.state.components];\r\n        list[index] = value;\r\n        this.setState(\r\n            {\r\n                components: list\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handleQuantity = (index, e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...this.state.quantity];\r\n        list[index] = value;\r\n        this.setState(\r\n            {\r\n                quantity: list\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n\r\n    saveProduct = async (event) => {\r\n        var obj = new Object()\r\n        obj.title = this.state.title\r\n        obj.components = new Object()\r\n        event.preventDefault()\r\n        for (let i = 0; i < this.state.components.length; i++) {\r\n            let key = this.state.components[i]\r\n            let num = this.state.quantity[i]\r\n            obj.components[key] = parseInt(num)\r\n        }\r\n        console.log(JSON.stringify(obj))\r\n\r\n        let method = 'POST'\r\n        let url = 'http://localhost:8080/api/bom'\r\n        API.request({\r\n            method: method,\r\n            url: url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            },\r\n            data: JSON.stringify(obj)\r\n        })\r\n            .then(() => {\r\n                window.location.replace('/bom');\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const checkPath = this.props.match.path.localeCompare(\"/add-bom\")\r\n        const showCode = checkPath == 0 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const msg = checkPath == 0 ? \"Add new Bill Of Material\" : \"Update Bill Of Material\"\r\n\r\n        let product = { ...this.state }\r\n        product.code = checkPath == 1 ? new URLSearchParams(this.props.location.search).get('title') : ''\r\n\r\n        return (\r\n            <div id=\"form\" action=\"javascript:void(0);\" onSubmit={this.saveProduct}>\r\n                <form class=\"w3-container\" style={{ margin: \"250px\" }} onsubmit=\"return false\">\r\n                    <h1 className='w3-margin w3-text-black w3-xxxlarge'>{msg}</h1>\r\n                    <div className='w3-row'>\r\n\r\n                        <div style={showCode}>\r\n                            <label class=\"w3-text-black w3-xlarge\"><b>Title </b></label>\r\n                            <input class=\"w3-input w3-border w3-white\" id=\"title\" onChange={this.handleChange} value={this.state.title} type=\"text\" required />\r\n                        </div>\r\n                        {\r\n                            this.state.components.map((component, index) => (\r\n                                <div className='w3-col'>\r\n                                    <label class=\"w3-text-black w3-xlarge\"><b>Component</b></label>\r\n\r\n                                    <input class=\"w3-input w3-border w3-white w3-left\" value={component} required type='text' id={index} onChange={(evnt) => this.handleComponents(index, evnt)}></input>\r\n                                </div>\r\n                            ))}\r\n                        {\r\n                            this.state.quantity.map((value, index) => (\r\n                                <div>\r\n                                    <label class=\"w3-text-black w3-xlarge\"><b>Quantity</b></label>\r\n                                    <input class=\"w3-input w3-border w3-white w3-left\" value={value} required min={1} type='number' id={index} onChange={(evnt) => this.handleQuantity(index, evnt)}></input>\r\n                                    <div>\r\n                                        <button class=\"w3-button w3-red\" type=\"button\" onClick={() => this.removeCategory({ index })}> X</button>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <button class=\"w3-button w3-green w3-large w3-margin\" type=\"button\" onClick={this.addCategory}> Add Component <i class=\"fa fa-plus\"></i></button>\r\n                    </div>\r\n                    <Link exact to='/bom' className='w3-button w3-red w3-padding w3-large'>Cancel</Link>\r\n                    <button class=\"w3-btn w3-teal w3-large w3-bordered w3-margin\" type='submit'>Submit</button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(BOMForm)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\ProductForm.jsx",["173","174","175","176","177","178","179"],[],"import React, { Component, useState } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../misc/api'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Product from './Product';\r\n\r\nclass ProductForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            code: '',\r\n            name: '',\r\n            description: '',\r\n            categories: ['']\r\n        }\r\n    }\r\n\r\n\r\n\r\n    addCategory = () => {\r\n        let buf = this.state.categories\r\n        buf.push('')\r\n        this.setState(\r\n            {\r\n                categories: buf\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    removeCategory = (index) => {\r\n        let num = this.state.categories.length\r\n        if (num > 1) {\r\n            let buf = [...this.state.categories];\r\n            buf.splice(index, 1)\r\n            this.setState(\r\n                {\r\n                    categories: buf\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    handleCategory = (index, e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const list = [...this.state.categories];\r\n        list[index] = value;\r\n        this.setState(\r\n            {\r\n                categories: list\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        this.setState({\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    saveProduct = async (event) => {\r\n        event.preventDefault()\r\n        const product = this.state\r\n\r\n        let method = 'POST'\r\n        let url = 'http://localhost:8080/api/products'\r\n\r\n        console.log(product)\r\n        API.request({\r\n            method: method,\r\n            url: url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            },\r\n            data: JSON.stringify(product)\r\n        })\r\n            .then(() => {\r\n                window.location.replace('/products');\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const checkPath = this.props.match.path.localeCompare(\"/add-product\")\r\n        const showCode = checkPath == 0 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const msg = checkPath == 0 ? \"Add new product\" : \"Update Product\"\r\n\r\n        let product = { ...this.state }\r\n        product.code = checkPath == 1 ? new URLSearchParams(this.props.location.search).get('code') : ''\r\n\r\n\r\n        return (\r\n            <div id=\"form\">\r\n                <form class=\"w3-container\" style={{ margin: \"250px\" }} onsubmit=\"return false\">\r\n                    <h1 className='w3-margin w3-text-black w3-xxxlarge'>{msg}</h1>\r\n                    <div style={showCode}>\r\n                        <label class=\"w3-text-black w3-xlarge\"><b>Code </b></label>\r\n                        <input class=\"w3-input w3-border w3-text-black\" id=\"code\" onChange={this.handleChange} value={this.state.code} type=\"text\" required />\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"w3-text-black w3-xlarge\"><b>Name </b></label>\r\n                        <input class=\"w3-input w3-border w3-white\" id=\"name\" onChange={this.handleChange} value={this.state.name} type=\"text\" required />\r\n                    </div>\r\n                    <div>\r\n                        <label class=\"w3-text-black w3-xlarge\"><b>Description</b></label>\r\n                        <input class=\"w3-input w3-border w3-white\" id=\"description\" onChange={this.handleChange} value={this.state.description} type=\"text\" required />\r\n                    </div>\r\n                    <div className='w3-container'>\r\n                        <label class=\"w3-text-black w3-xlarge\"><b>Category</b></label>\r\n                    </div>\r\n                    <div id='categoryList'>\r\n\r\n                    </div>\r\n\r\n                    {\r\n                        this.state.categories.map((category, index) => (\r\n                            <div>\r\n                                <input class=\"w3-input w3-border w3-white w3-left\" value={category} required type='text' id={index} onChange={(evnt) => this.handleCategory(index, evnt)}></input>\r\n                                <button class=\"w3-button w3-red\" type=\"button\" onClick={() => this.removeCategory({ index })}> X</button>\r\n                            </div>\r\n                        ))}\r\n\r\n\r\n                    <div>\r\n                        <button class=\"w3-button w3-green w3-large w3-margin\" type=\"button\" onClick={this.addCategory}> Add Category <i class=\"fa fa-plus\"></i></button>\r\n                    </div>\r\n                    <Link exact to='/products' className='w3-button w3-red w3-padding w3-large'>Cancel</Link>\r\n                    <button class=\"w3-btn w3-teal w3-large w3-bordered w3-margin\" onClick={this.saveProduct}>Submit</button>\r\n\r\n                </form>            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(ProductForm)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\Product.jsx",["180","181","182","183","184"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../misc/api'\r\nimport ProductList from './ProductList'\r\nimport DeleteDialog from '../staff/DeleteDialog'\r\nimport M from 'materialize-css'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport qs from 'qs';\r\nimport Pagination from '../common/Pagination'\r\n\r\n\r\nclass Product extends Component {\r\n    state = {\r\n        product: [],\r\n        code: '',\r\n        page: 1,\r\n        totalPage: 1\r\n    }\r\n\r\n    deleteModal = null\r\n\r\n\r\n    showDialog = (code) => {\r\n        this.code = code\r\n        this.deleteModal.open()\r\n    }\r\n\r\n    searchKeyword = () => {\r\n        window.location.replace(window.location.pathname + '?keyword=' + document.getElementById('search').value + \"&page=1\")\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.getProducts()\r\n        this.deleteModal = M.Modal.init(document.getElementById('deleteModal'))\r\n    }\r\n    getProducts = async (page) => {\r\n        API.get(`products`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.oktaAuth.authStateManager._authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(response => {\r\n\r\n                let pageNum = new URLSearchParams(window.location.search).get('page');\r\n                let keyword = new URLSearchParams(window.location.search).get('keyword');\r\n                if (pageNum == null) {\r\n                    pageNum = 1;\r\n                }\r\n                let pageData = new Object()\r\n                if (keyword != null) {\r\n                    let filter = response.data.filter(item =>\r\n                        item.name.toLowerCase().includes(keyword)\r\n                    )\r\n                    pageData = filter.slice((pageNum * 2) - 2, pageNum * 2)\r\n                } else {\r\n                    pageData = response.data.slice((pageNum * 2) - 2, pageNum * 2)\r\n                }\r\n                console.log(this.props.oktaAuth.authStateManager._authState.accessToken.accessToken)\r\n                this.setState({\r\n                    product: pageData,\r\n                    page: pageNum,\r\n                    totalPage: (pageData.length / 3) + 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteProduct = async () => {\r\n        window.location.reload(false);\r\n        API.delete(`products/${this.code}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(() => {\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const currentPage = this.state.page\r\n        const previousPage = currentPage - 1\r\n        const nextPage = currentPage % 10 + 1;\r\n        const minPage = currentPage > 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const maxPage = currentPage< this.state.totalPage ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const keyword = new URLSearchParams(window.location.search).get('keyword');\r\n        const url = keyword == null ? window.location.pathname + '?page=' : window.location.pathname + '?keyword=' + keyword + '&page='\r\n        return (\r\n            <div>\r\n                <ProductList products={this.state.product} showDialog={this.showDialog} />\r\n                 <input class=\"w3-input w3-border w3-white\" id=\"search\" type=\"text\"  />\r\n                <button className='w3-green w3-xlarge w3-padding w3-center w3-margin' onClick={this.searchKeyword}>Search</button>\r\n                <div class=\"w3-bar w3-large w3-container w3-center\">\r\n                    <a href={url + previousPage} class=\"w3-button\" style={minPage}>{previousPage}</a>\r\n                    <a href={url + currentPage} class=\"w3-button w3-green\">{currentPage}</a>\r\n                    <a href={url + nextPage} style={maxPage} class=\"w3-button   \">{nextPage}</a>\r\n                </div>\r\n                <DeleteDialog deleteObject={this.deleteProduct} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(Product)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOM.jsx",["185","186","187"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../misc/api'\r\nimport DeleteDialog from '../staff/DeleteDialog'\r\nimport M from 'materialize-css'\r\nimport { Link } from 'react-router-dom'\r\nimport BOMForm from './BOMForm'\r\nimport BOMList from './BOMList'\r\n\r\n\r\nclass BOM extends Component {\r\n    state = {\r\n        BOM: [],\r\n        code: '',\r\n        page: 1,\r\n        totalPage: 1\r\n    }\r\n\r\n    deleteModal = null\r\n\r\n\r\n    showDialog = (code) => {\r\n        this.code = code\r\n        this.deleteModal.open()\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n        this.getProducts(1)\r\n        this.deleteModal = M.Modal.init(document.getElementById('deleteModal'))\r\n    }\r\n\r\n    \r\n    getProducts = async (page) => {\r\n        API.get(`bom`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.oktaAuth.authStateManager._authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(response => {\r\n                let pageNum = new URLSearchParams(window.location.search).get('page');\r\n                let keyword = new URLSearchParams(window.location.search).get('keyword');\r\n                if (pageNum == null) {\r\n                    pageNum = 1;\r\n                }\r\n                let pageData = new Object()\r\n                if (keyword != null) {\r\n                    let filter = response.data.filter(item =>\r\n                        item.title.toLowerCase().includes(keyword)\r\n                    )\r\n                    pageData = filter.slice((pageNum * 2) - 2, pageNum * 2)\r\n                } else {\r\n                    pageData = response.data.slice((pageNum * 2) - 2, pageNum * 2)\r\n                }\r\n                console.log(this.props.oktaAuth.authStateManager._authState.accessToken.accessToken)\r\n                this.setState({\r\n                    BOM: pageData,\r\n                    page: pageNum,\r\n                    totalPage: pageData.length / 2 + 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteProduct = async () => {\r\n        console.log(this.code)\r\n        API.delete(`bom/${this.code}`, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n          }\r\n        })\r\n          .then(() => {\r\n            window.location.reload(false);\r\n          })    \r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n    }\r\n    searchKeyword = () => {\r\n        window.location.replace(window.location.pathname + '?keyword=' + document.getElementById('search').value + \"&page=1\")\r\n    }\r\n\r\n    render() {\r\n        const currentPage = this.state.page\r\n        const previousPage = currentPage - 1\r\n        const nextPage = currentPage % 10 + 1;\r\n        const minPage = currentPage > 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const maxPage = currentPage< this.state.totalPage + 1? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const keyword = new URLSearchParams(window.location.search).get('keyword');\r\n        const url = keyword == null ? window.location.pathname + '?page=' : window.location.pathname + '?keyword=' + keyword + '&page='\r\n        console.log(nextPage)\r\n        console.log(this.state.BOM)\r\n        return (\r\n            <div>\r\n                <BOMList products={this.state.BOM} showDialog={this.showDialog} />\r\n                <input class=\"w3-input w3-border w3-white\" id=\"search\" type=\"text\"  />\r\n                <button className='w3-green w3-xlarge w3-padding w3-center w3-margin' onClick={this.searchKeyword}>Search</button>\r\n                <div class=\"w3-bar w3-large w3-container w3-center\">\r\n                    <a href={url + previousPage} class=\"w3-button\" style={minPage}>{previousPage}</a>\r\n                    <a href={url + currentPage} class=\"w3-button w3-green\">{currentPage}</a>\r\n                    <a href={url + nextPage} style={maxPage} class=\"w3-button   \">{nextPage}</a>\r\n                </div>\r\n                <DeleteDialog deleteObject={this.deleteProduct }/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(BOM)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\MPO\\MPO.jsx",["188","189"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport DeleteDialog from '../staff/DeleteDialog'\r\nimport M from 'materialize-css'\r\nimport { Link } from 'react-router-dom'\r\nimport MPOList from './MPOList'\r\nimport API from '../misc/api'\r\n\r\n\r\nclass MPO extends Component {\r\n    state = {\r\n        MPO: [],\r\n        code: '',\r\n        page: 1,\r\n        totalPage: 1\r\n    }\r\n\r\n    deleteModal = null\r\n\r\n\r\n    showDialog = (code) => {\r\n        this.code = code\r\n        this.deleteModal.open()\r\n    }\r\n\r\n    setToDone = async (code) => {\r\n        API.put(`mpo/${code}`, {\r\n            headers: {\r\n              'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n            }\r\n          })\r\n            .then(() => {\r\n            })    \r\n            .catch(error => {\r\n              console.log(error)\r\n            })\r\n      }\r\n\r\n    async componentDidMount() {\r\n    \r\n        this.getProducts(1)\r\n        this.deleteModal = M.Modal.init(document.getElementById('deleteModal'))\r\n    }\r\n    getProducts = async (page) => {\r\n        API.get(`mpo`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.oktaAuth.authStateManager._authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(response => {\r\n                let pageNum = new URLSearchParams(window.location.search).get('page');\r\n                let keyword = new URLSearchParams(window.location.search).get('keyword');\r\n                if (pageNum == null) {\r\n                    pageNum = 1;\r\n                }\r\n                let pageData = new Object()\r\n                if (keyword != null) {\r\n                    let filter = response.data.filter(item =>\r\n                        item.name.toLowerCase().includes(keyword)\r\n                    )\r\n                    pageData = filter.slice((pageNum * 2) - 2, pageNum * 2)\r\n                } else {\r\n                    pageData = response.data.slice((pageNum * 2) - 2, pageNum * 2)\r\n                }\r\n                console.log(this.props.oktaAuth.authStateManager._authState.accessToken.accessToken)\r\n                this.setState({\r\n                    MPO: pageData,\r\n                    page: pageNum,\r\n                    totalPage: (pageData.length / 3) + 1\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteProduct = async () => {\r\n        API.delete(`mo/${this.code}`, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n          }\r\n        })\r\n          .then(() => {\r\n            window.location.reload(false);\r\n          })    \r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n    }\r\n\r\n    searchKeyword = () => {\r\n        window.location.replace(window.location.pathname + '?keyword=' + document.getElementById('search').value + \"&page=1\")\r\n    }\r\n    render() {\r\n        const currentPage = this.state.page\r\n        const previousPage = currentPage - 1\r\n        const nextPage = currentPage % 10 + 1;\r\n        const minPage = currentPage > 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const maxPage = currentPage< this.state.totalPage ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const keyword = new URLSearchParams(window.location.search).get('keyword');\r\n        const url = keyword == null ? window.location.pathname + '?page=' : window.location.pathname + '?keyword=' + keyword + '&page='\r\n        return (\r\n            \r\n            <div>\r\n                <MPOList mos={this.state.MPO} showDialog={this.showDialog} setToDone={this.setToDone}/>\r\n                <input class=\"w3-input w3-border w3-white\" id=\"search\" type=\"text\"  />\r\n                <button className='w3-green w3-xlarge w3-padding w3-center w3-margin' onClick={this.searchKeyword}>Search</button>\r\n                <div class=\"w3-bar w3-large w3-container\" >\r\n                    <a href={url + previousPage} class=\"w3-button\" style={minPage}>{previousPage}</a>\r\n                    <a href={url + currentPage} class=\"w3-button w3-green\">{currentPage}</a>\r\n                    <a href={url + nextPage} style={maxPage} class=\"w3-button   \">{nextPage}</a>\r\n                </div>\r\n                <DeleteDialog deleteObject={this.deleteProduct}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(MPO)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\Inventory\\Inventory.jsx",["190","191","192"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport DeleteDialog from '../staff/DeleteDialog'\r\nimport M from 'materialize-css'\r\nimport { Link } from 'react-router-dom'\r\nimport MPOList from './InventoryList'\r\nimport API from '../misc/api'\r\nimport InventoryList from './InventoryList'\r\n\r\n\r\nclass Inventory extends Component {\r\n    state = {\r\n        inventory: [],\r\n        code: '',\r\n        page: 1,\r\n        totalPage: 1\r\n    }\r\n\r\n    deleteModal = null\r\n\r\n\r\n    showDialog = (code) => {\r\n        this.code = code\r\n        this.deleteModal.open()\r\n    }\r\n\r\n    async componentDidMount() {\r\n    \r\n        this.getProducts()\r\n        this.deleteModal = M.Modal.init(document.getElementById('deleteModal'))\r\n    }\r\n    getProducts = async (page) => {\r\n        API.get(`inventory`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + await this.props.oktaAuth.authStateManager._authState.accessToken.accessToken\r\n            }\r\n        })\r\n            .then(response => {\r\n                let pageNum = new URLSearchParams(window.location.search).get('page');\r\n                let keyword = new URLSearchParams(window.location.search).get('keyword');\r\n                if (pageNum == null) {\r\n                    pageNum = 1;\r\n                }\r\n                let pageData = new Object()\r\n                if (keyword != null) {\r\n                    let filter = response.data.filter(item =>\r\n                        item.code.toLowerCase().includes(keyword)\r\n                    )\r\n                    pageData = filter.slice((pageNum * 2) - 2, pageNum * 2)\r\n                } else {\r\n                    pageData = response.data.slice((pageNum * 2) - 2, pageNum * 2)\r\n                }\r\n                console.log(this.props.oktaAuth.authStateManager._authState.accessToken.accessToken)\r\n                this.setState({\r\n                    inventory: pageData,\r\n                    page: pageNum,\r\n                    totalPage: (pageData.length / 3) + 1\r\n                })\r\n                console.log(this.state.inventory)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteProduct = async () => {\r\n        API.delete(`inventory/${this.code}`, {\r\n          headers: {\r\n            'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\r\n          }\r\n        })\r\n          .then(() => {\r\n            window.location.reload(false);\r\n          })    \r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n    }\r\n\r\n    searchKeyword = () => {\r\n        window.location.replace(window.location.pathname + '?keyword=' + document.getElementById('search').value + \"&page=1\")\r\n    }\r\n    render() {\r\n        const currentPage = this.state.page\r\n        const previousPage = currentPage - 1\r\n        const nextPage = currentPage % 10 + 1;\r\n        const minPage = currentPage > 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const maxPage = currentPage< this.state.totalPage ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n        const keyword = new URLSearchParams(window.location.search).get('keyword');\r\n        const url = keyword == null ? window.location.pathname + '?page=' : window.location.pathname + '?keyword=' + keyword + '&page='\r\n        return (\r\n            \r\n            <div>\r\n                <InventoryList mos={this.state.inventory} showDialog={this.showDialog}/>\r\n                <input class=\"w3-input w3-border w3-white\" id=\"search\" type=\"text\"  />\r\n                <button className='w3-green w3-xlarge w3-padding w3-center w3-margin' onClick={this.searchKeyword}>Search</button>\r\n                <div class=\"w3-bar w3-large w3-container\" >\r\n                    <a href={url + previousPage} class=\"w3-button\" style={minPage}>{previousPage}</a>\r\n                    <a href={url + currentPage} class=\"w3-button w3-green\">{currentPage}</a>\r\n                    <a href={url + nextPage} style={maxPage} class=\"w3-button   \">{nextPage}</a>\r\n                </div>\r\n                <DeleteDialog deleteObject={this.deleteProduct}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withOktaAuth(Inventory)","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\product\\ProductList.js",["193","194","195"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport API from '../misc/api'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction ProductList({products, showDialog}) {\r\n\r\n        return (\r\n            <div className='content'>\r\n            <div className='w3-container' style={{ \"margin-top\": \"200px\" }}>\r\n                <div class=\"w3-responsive\">\r\n                    <table class=\"w3-table w3-striped w3-bordered w3-xlarge\">\r\n                        <tr className='w3-green'>\r\n                            <th>\r\n                                Code\r\n                            </th>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Description\r\n                            </th>\r\n                            <th>\r\n                            </th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                        {products.map(product =>\r\n                            <tr>\r\n                                <th>\r\n                                    {product.code}\r\n                                </th>\r\n                                <th>\r\n                                    {product.name}\r\n                                </th>\r\n                                <th>\r\n                                    {product.description}\r\n                                </th>\r\n                                <th>\r\n                                    <Link exact to={'/update-product?code=' + product.code} key={product.code} className='w3-button w3-card w3-green'>Update</Link>\r\n                                    \r\n                                    <button key={product.code} className='w3-button w3-card w3-red' onClick={() => showDialog(product.code)}>Delete</button>\r\n                                </th>\r\n                                <th></th>\r\n                            </tr>\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Link exact to={'/add-product'} className=\"w3-button w3-black w3-xlarge w3-padding w3-right\">Add Product</Link>\r\n\r\n        </div>\r\n            );\r\n    }\r\n\r\n\r\nexport default ProductList","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\MO\\MOList.jsx",["196","197"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction MOList({ mos, showDialog, setToDone }) {\r\n    return (\r\n        <div className='content'>\r\n            <div className='w3-container' style={{ margin: \"200px\" }}>\r\n                <div class=\"w3-responsive\">\r\n                    <table class=\"w3-table w3-striped w3-bordered w3-xlarge\">\r\n                        <tr className='w3-green'>\r\n                            <th>\r\n                                Client\r\n                            </th>\r\n                            <th>\r\n                                Start Date\r\n                            </th>\r\n                            <th>\r\n                                Delivery Date\r\n                            </th>\r\n                            <th>\r\n                                End Date\r\n                            </th>\r\n                            <th>\r\n                                Status\r\n                            </th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                        {mos.map(product => {\r\n                            const linkVisibility = product.done ? { \"display\": \"none\" } : { \"display\": \"block\" }\r\n                            const isDone = product.done ? \"Done\": \"pending\"\r\n                            const compo = Object.keys(product.productDetails)\r\n                            const num = Object.values(product.productDetails)\r\n                            return (\r\n                                <tr>\r\n                                    <th>\r\n                                        {product.client}\r\n                                    </th>\r\n                                    <th>\r\n                                        {product.startDate}\r\n                                    </th>\r\n                                    <th>\r\n                                        {product.deliveryDate}\r\n                                    </th>\r\n                                    <th>\r\n                                        {product.endDate}\r\n                                    </th>\r\n                                    <th>\r\n                                        {isDone}\r\n                                    </th>\r\n                                    <th>\r\n                                        <button key={product.id} onClick={() => setToDone(product.id)} className='w3-button w3-card w3-green' style={linkVisibility}>Set To Done </button>\r\n\r\n                                        <button key={product.id} className='w3-button w3-card w3-red' onClick={() => showDialog(product.id)}>Delete</button>\r\n                                    </th>\r\n                                    <th></th>\r\n                                    <tr className='w3-xlarge'>\r\n                                        Component List\r\n                                    </tr>\r\n                                    {compo.map((comp, i) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <th>\r\n                                                    {comp}\r\n                                                </th>\r\n                                                {num[i]}\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Link exact to={'/add-mo'} className=\"w3-button w3-black w3-xlarge w3-padding w3-right\" style={{ \"margin-right\": \"200px\" }}>New Manufactoring Order</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MOList","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\staff\\DeleteDialog.js",[],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\misc\\api.js",[],[],"C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\common\\Pagination.jsx",["198","199","200","201"],[],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Pagination(page, totalPage, url) {\r\n    const previousPage = page - 1\r\n    const nextPage = page + 1\r\n    const minPage = page == 1 ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n    const maxPage = page == totalPage ? { \"display\": \"block\" } : { \"display\": \"none\" }\r\n\r\n    return (\r\n        <div class=\"w3-bar\">\r\n            <Link className='w3-button'>{previousPage}</Link>\r\n            <Link className='w3-button'>{page}</Link>\r\n            <Link className='w3-button'>{nextPage}</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\BOM\\BOMList.jsx",["202","203"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction BOMList({ products, showDialog, setToDone }) {\r\n    return (\r\n        <div className='content'>\r\n            <div className='w3-container' style={{ \"margin-top\": \"200px\", \"margin-left\": \"200px\" }}>\r\n                <div class=\"w3-responsive\">\r\n                    <table class=\"w3-table w3-striped w3-bordered w3-xlarge\">\r\n                        <tr className='w3-green'>\r\n                            <th>\r\n                                Bill Of Material\r\n                            </th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                        {products.map(product => {\r\n                            const compo = Object.keys(product.components)\r\n                            const num = Object.values(product.components)\r\n                            return (\r\n                                <div>\r\n                                    <tr>\r\n                                        <th>\r\n                                            Bill Of Material For: {product.title}\r\n                                        </th>\r\n                                        <th>\r\n                                            <Link exact to={'/update-bom?title=' + product.title} className='w3-button w3-card w3-green'>Update</Link>\r\n                                            <button key={product.title} className='w3-button w3-card w3-red' onClick={() => showDialog(product.title)}>Delete</button>\r\n                                        </th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                    <tr className='w3-xlarge'>\r\n                                        Component List\r\n                                    </tr>\r\n                                    {compo.map((comp, i) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <th>\r\n                                                    {comp}\r\n                                                </th>\r\n                                                {num[i]}\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Link exact to={'/add-bom'} className=\"w3-button w3-black w3-xlarge w3-padding w3-right\" style={{ \"margin-right\": \"200px\" }}>New Bill Of Material</Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BOMList","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\Inventory\\InventoryList.jsx",["204","205","206"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction InventoryList({ mos, showDialog, setToDone }) {\r\n    console.log(mos)\r\n    return (\r\n        <div className='content'>\r\n            <div className='w3-container' style={{ \"margin-top\": \"200px\" }}>\r\n                <div class=\"w3-responsive\">\r\n                    <table class=\"w3-table w3-striped w3-bordered w3-xlarge\">\r\n                        <tr className='w3-green'>\r\n                            <th>\r\n                                Name\r\n                            </th>\r\n                            <th>\r\n                                Begin\r\n                            </th>\r\n                            <th>\r\n                                Total In\r\n                            </th>\r\n                            <th>\r\n                                Total Out\r\n                            </th>\r\n                            <th>\r\n                                Available\r\n                            </th>\r\n\r\n                        </tr>\r\n                        {mos.map((product, index) => {\r\n\r\n                            return (\r\n                                <tr>\r\n                                    <th>\r\n                                        {product.name}\r\n                                    </th>\r\n                                    <th>\r\n                                        {product.begin}\r\n                                    </th>\r\n                                    <th>\r\n                                        {product.totalIn}\r\n                                    </th>\r\n                                    {product.totalOut}\r\n\r\n                                    <th>\r\n                                        {product.available}\r\n                                    </th>\r\n                                    <th>\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n\r\n\r\n                            )\r\n                        }\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default InventoryList","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\src\\components\\MPO\\MPOList.jsx",["207","208","209"],[],"import React, { Component } from 'react'\r\nimport { withOktaAuth } from '@okta/okta-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction MPOList({ mos, showDialog, setToDone }) {\r\n    return (\r\n        <div className='content'>\r\n            <div className='w3-container' style={{ \"margin-top\": \"200px\" }}>\r\n                <div class=\"w3-responsive\">\r\n                    <table class=\"w3-table w3-striped w3-bordered w3-xlarge\">\r\n                        <tr className='w3-green'>\r\n                            <th>\r\n                            Material Orders\r\n                            </th>\r\n                            <th>\r\n                            \r\n                            </th>\r\n                            <th>\r\n\r\n                            </th>\r\n                        \r\n                  \r\n                        </tr>\r\n                        {mos.map((product, index) => {\r\n                            const linkVisibility = product.done ? { \"display\": \"none\" } : { \"display\": \"block\" }\r\n                            const isDone = product.done ? \"Done\" : \"pending\"\r\n                            const compo = Object.keys(product.components)\r\n                            const num = Object.values(product.components)\r\n                            return (\r\n                                <div>\r\n                                    <tr>\r\n                                        <th>\r\n                                        </th>\r\n                                        <th>\r\n                                            {product.date}\r\n                                        </th>\r\n\r\n                                        <th>\r\n                                            {isDone}\r\n                                        </th>\r\n                                        <th>\r\n                                            <button key={product.id} onClick={() => setToDone(product.id)} className='w3-button w3-card w3-green' style={linkVisibility}>Set To Done </button>\r\n                                        </th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                    <tr className='w3-xlarge'>\r\n                                        Component List\r\n                                    </tr>\r\n                                    {compo.map((comp, i) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <th>\r\n                                                    {comp}\r\n                                                </th>\r\n                                                {num[i]}\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default MPOList",{"ruleId":"210","severity":1,"message":"211","line":7,"column":10,"nodeType":"212","messageId":"213","endLine":7,"endColumn":14},{"ruleId":"210","severity":1,"message":"214","line":7,"column":16,"nodeType":"212","messageId":"213","endLine":7,"endColumn":25},{"ruleId":"210","severity":1,"message":"215","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":10},{"ruleId":"210","severity":1,"message":"216","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":50,"column":32,"nodeType":"219","messageId":"220","endLine":50,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":56,"column":32,"nodeType":"219","messageId":"220","endLine":56,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"210","severity":1,"message":"221","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":44,"column":32,"nodeType":"219","messageId":"220","endLine":44,"endColumn":44},{"ruleId":"210","severity":1,"message":"222","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"223","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":42,"column":32,"nodeType":"219","messageId":"220","endLine":42,"endColumn":44},{"ruleId":"210","severity":1,"message":"224","line":96,"column":13,"nodeType":"212","messageId":"213","endLine":96,"endColumn":20},{"ruleId":"210","severity":1,"message":"222","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"214","line":4,"column":16,"nodeType":"212","messageId":"213","endLine":4,"endColumn":25},{"ruleId":"210","severity":1,"message":"225","line":48,"column":17,"nodeType":"212","messageId":"213","endLine":48,"endColumn":21},{"ruleId":"210","severity":1,"message":"225","line":61,"column":17,"nodeType":"212","messageId":"213","endLine":61,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":81,"column":19,"nodeType":"219","messageId":"220","endLine":81,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":84,"column":30,"nodeType":"219","messageId":"220","endLine":84,"endColumn":42},{"ruleId":"210","severity":1,"message":"226","line":116,"column":15,"nodeType":"212","messageId":"213","endLine":116,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":116,"column":36,"nodeType":"229","messageId":"230","endLine":116,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":117,"column":31,"nodeType":"229","messageId":"230","endLine":117,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":120,"column":34,"nodeType":"229","messageId":"230","endLine":120,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":124,"column":35,"nodeType":"233","messageId":"234","endLine":124,"endColumn":56},{"ruleId":"210","severity":1,"message":"235","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":23},{"ruleId":"210","severity":1,"message":"236","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":9},{"ruleId":"210","severity":1,"message":"237","line":39,"column":11,"nodeType":"212","messageId":"213","endLine":39,"endColumn":19},{"ruleId":"210","severity":1,"message":"222","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"214","line":4,"column":16,"nodeType":"212","messageId":"213","endLine":4,"endColumn":25},{"ruleId":"210","severity":1,"message":"225","line":51,"column":17,"nodeType":"212","messageId":"213","endLine":51,"endColumn":21},{"ruleId":"210","severity":1,"message":"225","line":64,"column":17,"nodeType":"212","messageId":"213","endLine":64,"endColumn":21},{"ruleId":"217","severity":1,"message":"218","line":85,"column":19,"nodeType":"219","messageId":"220","endLine":85,"endColumn":31},{"ruleId":"217","severity":1,"message":"218","line":87,"column":26,"nodeType":"219","messageId":"220","endLine":87,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":118,"column":36,"nodeType":"229","messageId":"230","endLine":118,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":119,"column":31,"nodeType":"229","messageId":"230","endLine":119,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":122,"column":34,"nodeType":"229","messageId":"230","endLine":122,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":125,"column":35,"nodeType":"233","messageId":"234","endLine":125,"endColumn":56},{"ruleId":"210","severity":1,"message":"222","line":1,"column":28,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"214","line":4,"column":16,"nodeType":"212","messageId":"213","endLine":4,"endColumn":25},{"ruleId":"210","severity":1,"message":"238","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":15},{"ruleId":"210","severity":1,"message":"225","line":46,"column":17,"nodeType":"212","messageId":"213","endLine":46,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":93,"column":36,"nodeType":"229","messageId":"230","endLine":93,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":94,"column":31,"nodeType":"229","messageId":"230","endLine":94,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":97,"column":34,"nodeType":"229","messageId":"230","endLine":97,"endColumn":36},{"ruleId":"210","severity":1,"message":"211","line":7,"column":10,"nodeType":"212","messageId":"213","endLine":7,"endColumn":14},{"ruleId":"210","severity":1,"message":"214","line":7,"column":16,"nodeType":"212","messageId":"213","endLine":7,"endColumn":25},{"ruleId":"210","severity":1,"message":"215","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":10},{"ruleId":"210","severity":1,"message":"216","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":18},{"ruleId":"217","severity":1,"message":"218","line":50,"column":32,"nodeType":"219","messageId":"220","endLine":50,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":6,"column":10,"nodeType":"212","messageId":"213","endLine":6,"endColumn":14},{"ruleId":"210","severity":1,"message":"239","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":46,"column":32,"nodeType":"219","messageId":"220","endLine":46,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"217","severity":1,"message":"218","line":56,"column":32,"nodeType":"219","messageId":"220","endLine":56,"endColumn":44},{"ruleId":"210","severity":1,"message":"211","line":5,"column":10,"nodeType":"212","messageId":"213","endLine":5,"endColumn":14},{"ruleId":"210","severity":1,"message":"221","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":44,"column":32,"nodeType":"219","messageId":"220","endLine":44,"endColumn":44},{"ruleId":"210","severity":1,"message":"240","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"241","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"242","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":11},{"ruleId":"210","severity":1,"message":"240","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"241","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"243","line":8,"column":11,"nodeType":"212","messageId":"213","endLine":8,"endColumn":18},{"ruleId":"227","severity":1,"message":"228","line":8,"column":26,"nodeType":"229","messageId":"230","endLine":8,"endColumn":28},{"ruleId":"210","severity":1,"message":"244","line":9,"column":11,"nodeType":"212","messageId":"213","endLine":9,"endColumn":18},{"ruleId":"227","severity":1,"message":"228","line":9,"column":26,"nodeType":"229","messageId":"230","endLine":9,"endColumn":28},{"ruleId":"210","severity":1,"message":"240","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"241","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"240","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"241","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},{"ruleId":"210","severity":1,"message":"240","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"241","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'qs' is defined but never used.","'Pagination' is defined but never used.","no-new-object","The object literal notation {} is preferable.","NewExpression","preferLiteral","'MPOList' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'pageNum' is assigned a value but never used.","'name' is assigned a value but never used.","'showCode' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'NavLink' is defined but never used.","'M' is defined but never used.","'username' is assigned a value but never used.","'Product' is defined but never used.","'BOMForm' is defined but never used.","'Component' is defined but never used.","'withOktaAuth' is defined but never used.","'API' is defined but never used.","'minPage' is assigned a value but never used.","'maxPage' is assigned a value but never used."]