{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction hasTokensInHash(hash) {\n  return /((id|access)_token=)/i.test(hash);\n}\n\nfunction hasAuthorizationCode(hashOrSearch) {\n  return /(code=)/i.test(hashOrSearch);\n}\n\nfunction hasInteractionCode(hashOrSearch) {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nfunction hasErrorInUrl(hashOrSearch) {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nfunction isRedirectUri(uri, sdk) {\n  var authParams = sdk.options;\n\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nfunction isCodeFlow(options) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nfunction getHashOrSearch(options) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\nfunction isLoginRedirect(sdk) {\n  if (!isRedirectUri(window.location.href, sdk)) {\n    return false;\n  }\n\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode = hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  return hasTokensInHash(window.location.hash);\n}\n\nfunction isInteractionRequired(sdk, hashOrSearch) {\n  if (!hashOrSearch) {\n    if (!isLoginRedirect(sdk)) {\n      return false;\n    }\n\n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}\n\nexport { getHashOrSearch, hasAuthorizationCode, hasErrorInUrl, hasInteractionCode, hasTokensInHash, isCodeFlow, isInteractionRequired, isLoginRedirect, isRedirectUri };","map":{"version":3,"mappings":";;;;;;;;;;;AAgBM,SAAUA,eAAV,CAA0BC,IAA1B,EAAsC;EAC1C,OAAO,wBAAwBC,IAAxB,CAA6BD,IAA7B,CAAP;AACD;;AAGK,SAAUE,oBAAV,CAA+BC,YAA/B,EAAmD;EACvD,OAAO,WAAWF,IAAX,CAAgBE,YAAhB,CAAP;AACD;;AAGK,SAAUC,kBAAV,CAA6BD,YAA7B,EAAiD;EACrD,OAAO,uBAAuBF,IAAvB,CAA4BE,YAA5B,CAAP;AACD;;AAEK,SAAUE,aAAV,CAAwBF,YAAxB,EAA4C;EAChD,OAAO,YAAYF,IAAZ,CAAiBE,YAAjB,KAAkC,uBAAuBF,IAAvB,CAA4BE,YAA5B,CAAzC;AACD;;AAEe,uBAAcG,GAAd,EAA2BC,GAA3B,EAAwD;EACtE,IAAIC,UAAU,GAAGD,GAAG,CAACE,OAArB;;EACA,IAAI,CAACH,GAAD,IAAQ,CAACE,UAAU,CAACE,WAAxB,EAAqC;IACnC,OAAO,KAAP;EACD;;EACD,OAAOJ,GAAG,CAACK,OAAJ,CAAYH,UAAU,CAACE,WAAvB,MAAwC,CAA/C;AACD;;AAEK,SAAUE,UAAV,CAAqBH,OAArB,EAA6C;EACjD,OAAOA,OAAO,CAACI,IAAR,IAAgBJ,OAAO,CAACK,YAAR,KAAyB,MAAzC,IAAmDL,OAAO,CAACM,YAAR,KAAyB,OAAnF;AACD;;AAEK,SAAUC,eAAV,CAA0BP,OAA1B,EAAkD;EACtD,IAAIQ,QAAQ,GAAGL,UAAU,CAACH,OAAD,CAAzB;EACA,IAAIS,QAAQ,GAAGD,QAAQ,IAAIR,OAAO,CAACM,YAAR,KAAyB,UAApD;EACA,OAAOG,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,MAAnB,GAA4BF,MAAM,CAACC,QAAP,CAAgBpB,IAA3D;AACD;;AAMK,SAAUsB,eAAV,CAA2Bf,GAA3B,EAAwD;EAE5D,IAAI,CAACgB,aAAa,CAACJ,MAAM,CAACC,QAAP,CAAgBI,IAAjB,EAAuBjB,GAAvB,CAAlB,EAA8C;IAC5C,OAAO,KAAP;EACD;;EAGD,IAAIU,QAAQ,GAAGL,UAAU,CAACL,GAAG,CAACE,OAAL,CAAzB;EACA,IAAIN,YAAY,GAAGa,eAAe,CAACT,GAAG,CAACE,OAAL,CAAlC;;EAEA,IAAIJ,aAAa,CAACF,YAAD,CAAjB,EAAiC;IAC/B,OAAO,IAAP;EACD;;EAED,IAAIc,QAAJ,EAAc;IACZ,IAAIQ,OAAO,GAAIvB,oBAAoB,CAACC,YAAD,CAApB,IAAsCC,kBAAkB,CAACD,YAAD,CAAvE;IACA,OAAOsB,OAAP;EACD;;EAGD,OAAO1B,eAAe,CAACoB,MAAM,CAACC,QAAP,CAAgBpB,IAAjB,CAAtB;AACD;;AAMe,+BAAuBO,GAAvB,EAAsDJ,YAAtD,EAA2E;EACzF,IAAI,CAACA,YAAL,EAAmB;IAEjB,IAAI,CAACmB,eAAe,CAACf,GAAD,CAApB,EAA0B;MACxB,OAAO,KAAP;IACD;;IAEDJ,YAAY,GAAGa,eAAe,CAACT,GAAG,CAACE,OAAL,CAA9B;EACD;;EACD,OAAO,gCAAgCR,IAAhC,CAAqCE,YAArC,CAAP;AACF","names":["hasTokensInHash","hash","test","hasAuthorizationCode","hashOrSearch","hasInteractionCode","hasErrorInUrl","uri","sdk","authParams","options","redirectUri","indexOf","isCodeFlow","pkce","responseType","responseMode","getHashOrSearch","codeFlow","useQuery","window","location","search","isLoginRedirect","isRedirectUri","href","hasCode"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\oidc\\util\\loginRedirect.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOptionsInterface, OktaAuthOptions } from '../../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOptionsInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function getHashOrSearch(options: OktaAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOptionsInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOptionsInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}"]},"metadata":{},"sourceType":"module"}