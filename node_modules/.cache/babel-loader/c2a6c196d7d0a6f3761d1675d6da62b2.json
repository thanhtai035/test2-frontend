{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction getAllValues(idxRemediation) {\n  var _a;\n\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _a.map(r => r.name);\n}\n\nfunction getRequiredValues(idxRemediation) {\n  var _a;\n\n  return (_a = idxRemediation.value) === null || _a === void 0 ? void 0 : _a.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name);\n    }\n\n    return required;\n  }, []);\n}\n\nfunction titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nfunction getAuthenticatorFromRemediation(remediation) {\n  return remediation.value.find(_ref => {\n    let {\n      name\n    } = _ref;\n    return name === 'authenticator';\n  });\n}\n\nexport { getAllValues, getAuthenticatorFromRemediation, getRequiredValues, titleCase };","map":{"version":3,"mappings":";;;;;;;;;;;AAcM,SAAUA,YAAV,CAAuBC,cAAvB,EAAqD;;;EACzD,OAAO,oBAAc,CAACC,KAAf,MAAoB,IAApB,IAAoBC,aAApB,GAAoB,MAApB,GAAoBA,GAAEC,GAAF,CAAMC,CAAC,IAAIA,CAAC,CAACC,IAAb,CAA3B;AACD;;AAEK,SAAUC,iBAAV,CAA4BN,cAA5B,EAA0D;;;EAC9D,OAAO,oBAAc,CAACC,KAAf,MAAsB,IAAtB,IAAsBC,aAAtB,GAAsB,MAAtB,GAAsBA,UAAO,CAACK,QAAD,EAAWC,GAAX,KAAkB;IACpD,IAAIA,GAAG,CAACD,QAAR,EAAkB;MAChBA,QAAQ,CAACE,IAAT,CAAcD,GAAG,CAACH,IAAlB;IACD;;IACD,OAAOE,QAAP;EACD,CAL4B,EAK1B,EAL0B,CAA7B;AAMD;;AAEK,SAAUG,SAAV,CAAoBC,GAApB,EAA+B;EACnC,OAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,SAAJ,CAAc,CAAd,CAArC;AACD;;AAEK,SAAUC,+BAAV,CACJC,WADI,EACuB;EAG3B,OAAOA,WAAW,CAACf,KAAZ,CAAmBgB,IAAnB,CAAwB;IAAA,IAAC;MAAEZ;IAAF,CAAD;IAAA,OAAcA,IAAI,KAAK,eAAvB;EAAA,CAAxB,CAAP;AACF","names":["getAllValues","idxRemediation","value","_a","map","r","name","getRequiredValues","required","cur","push","titleCase","str","charAt","toUpperCase","substring","getAuthenticatorFromRemediation","remediation","find"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\util.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n"]},"metadata":{},"sourceType":"module"}