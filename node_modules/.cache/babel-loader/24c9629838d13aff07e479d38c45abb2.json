{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nvar VerificationCodeAuthenticator = /*#__PURE__*/function (_Authenticator) {\n  _inherits(VerificationCodeAuthenticator, _Authenticator);\n\n  var _super = _createSuper(VerificationCodeAuthenticator);\n\n  function VerificationCodeAuthenticator() {\n    _classCallCheck(this, VerificationCodeAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(VerificationCodeAuthenticator, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      return !!(values.credentials || values.verificationCode || values.otp);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var credentials = values.credentials,\n          verificationCode = values.verificationCode,\n          otp = values.otp;\n\n      if (!credentials && !verificationCode && !otp) {\n        return;\n      }\n\n      return credentials || {\n        passcode: verificationCode || otp\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs(idxRemediationValue) {\n      var _a;\n\n      return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n        name: 'verificationCode',\n        type: 'string',\n        required: idxRemediationValue.required\n      });\n    }\n  }]);\n\n  return VerificationCodeAuthenticator;\n}(Authenticator);\n\nexport { VerificationCodeAuthenticator };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IAeaA,6B;;;;;;;;;;;;;WACX,mBAAUC,MAAV,EAAwC;MACtC,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAP,IAAqBD,MAAM,CAACE,gBAA5B,IAAgDF,MAAM,CAACG,GAAzD,CAAR;IACD;;;WAED,wBAAeH,MAAf,EAAqB;MACnB,IAAQC,WAAR,GAA+CD,MAA/C,CAAQC,WAAR;MAAA,IAAqBC,gBAArB,GAA+CF,MAA/C,CAAqBE,gBAArB;MAAA,IAAuCC,GAAvC,GAA+CH,MAA/C,CAAuCG,GAAvC;;MACA,IAAI,CAACF,WAAD,IAAgB,CAACC,gBAAjB,IAAqC,CAACC,GAA1C,EAA+C;QAC7C;MACD;;MACD,OAAOF,WAAW,IAAI;QAAEG,QAAQ,EAAEF,gBAAgB,IAAIC;MAAhC,CAAtB;IACD;;;WAED,mBAAUE,mBAAV,EAA6B;;;MAC3B,OACKC,yDAAmB,CAACC,IAApB,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwB,MAAxB,GAAwBA,GAAEC,KAAF,CAAQ,CAAR,CAAxB,GACH;QAAAC,IAAI,EAAE,kBAAN;QACAC,IAAI,EAAE,QADN;QAEAC,QAAQ,EAAEP,mBAAmB,CAACO;MAF9B,CADG,CADL;IAMD;;;;EApBgDC,a","names":["VerificationCodeAuthenticator","values","credentials","verificationCode","otp","passcode","idxRemediationValue","Object","form","_a","value","name","type","required","Authenticator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\authenticator\\VerificationCodeAuthenticator.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}