{"ast":null,"code":"/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport * as React from 'react';\nimport { AuthSdkError, toRelativeUrl } from '@okta/okta-auth-js';\nimport { compare } from 'compare-versions';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport * as ReactRouterDom from 'react-router-dom';\nvar OktaContext = /*#__PURE__*/React.createContext(null);\n\nvar useOktaAuth = function useOktaAuth() {\n  return React.useContext(OktaContext);\n};\n\nvar OktaError = function OktaError(_ref) {\n  var error = _ref.error;\n\n  if (error.name && error.message) {\n    return /*#__PURE__*/React.createElement(\"p\", null, error.name, \": \", error.message);\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", null, \"Error: \", error.toString());\n};\n\nvar Security = function Security(_ref) {\n  var oktaAuth = _ref.oktaAuth,\n      restoreOriginalUri = _ref.restoreOriginalUri,\n      onAuthRequired = _ref.onAuthRequired,\n      children = _ref.children;\n\n  var _React$useState = React.useState(function () {\n    if (!oktaAuth) {\n      return null;\n    }\n\n    return oktaAuth.authStateManager.getAuthState();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      authState = _React$useState2[0],\n      setAuthState = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n\n    oktaAuth.options.restoreOriginalUri = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(oktaAuth, originalUri) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                restoreOriginalUri(oktaAuth, originalUri);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }, []);\n  React.useEffect(function () {\n    if (!oktaAuth) {\n      return;\n    }\n\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(\"@okta/okta-react\".concat(\"/\", \"6.6.0\"));\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    var currentAuthState = oktaAuth.authStateManager.getAuthState();\n\n    if (currentAuthState !== authState) {\n      setAuthState(currentAuthState);\n    }\n\n    var handler = function handler(authState) {\n      setAuthState(authState);\n    };\n\n    oktaAuth.authStateManager.subscribe(handler);\n    oktaAuth.start();\n    return function () {\n      oktaAuth.authStateManager.unsubscribe(handler);\n    };\n  }, [oktaAuth]);\n\n  if (!oktaAuth) {\n    var err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return /*#__PURE__*/React.createElement(OktaError, {\n      error: err\n    });\n  }\n\n  if (!restoreOriginalUri) {\n    var _err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n\n    return /*#__PURE__*/React.createElement(OktaError, {\n      error: _err\n    });\n  }\n\n  if (!oktaAuth._oktaUserAgent) {\n    console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n  } else {\n    var isAuthJsSupported = compare(oktaAuth._oktaUserAgent.getVersion(), {\n      \"minSupportedVersion\": \"5.3.1\"\n    }.minSupportedVersion, '>=');\n\n    if (!isAuthJsSupported) {\n      var _err2 = new AuthSdkError(\"\\n        Passed in oktaAuth is not compatible with the SDK,\\n        minimum supported okta-auth-js version is \".concat({\n        \"minSupportedVersion\": \"5.3.1\"\n      }.minSupportedVersion, \".\\n      \"));\n\n      return /*#__PURE__*/React.createElement(OktaError, {\n        error: _err2\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(OktaContext.Provider, {\n    value: {\n      oktaAuth: oktaAuth,\n      authState: authState,\n      _onAuthRequired: onAuthRequired\n    }\n  }, children);\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar withOktaAuth = function withOktaAuth(ComponentToWrap) {\n  var WrappedComponent = function WrappedComponent(props) {\n    var oktaAuthProps = useOktaAuth();\n    return /*#__PURE__*/React.createElement(ComponentToWrap, _objectSpread$1(_objectSpread$1({}, oktaAuthProps), props));\n  };\n\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nvar LoginCallback = function LoginCallback(_ref) {\n  var errorComponent = _ref.errorComponent,\n      _ref$loadingElement = _ref.loadingElement,\n      loadingElement = _ref$loadingElement === void 0 ? null : _ref$loadingElement,\n      onAuthResume = _ref.onAuthResume;\n\n  var _useOktaAuth = useOktaAuth(),\n      oktaAuth = _useOktaAuth.oktaAuth,\n      authState = _useOktaAuth.authState;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      callbackError = _React$useState2[0],\n      setCallbackError = _React$useState2[1];\n\n  var ErrorReporter = errorComponent || OktaError;\n  React.useEffect(function () {\n    var isInteractionRequired = oktaAuth.idx.isInteractionRequired || oktaAuth.isInteractionRequired.bind(oktaAuth);\n\n    if (onAuthResume && isInteractionRequired()) {\n      onAuthResume();\n      return;\n    }\n\n    oktaAuth.handleLoginRedirect()[\"catch\"](function (e) {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n  var authError = authState === null || authState === void 0 ? void 0 : authState.error;\n  var displayError = callbackError || authError;\n\n  if (displayError) {\n    return /*#__PURE__*/React.createElement(ErrorReporter, {\n      error: displayError\n    });\n  }\n\n  return loadingElement;\n};\n\nvar _excluded = [\"onAuthRequired\", \"errorComponent\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar useMatch;\n\nif ('useRouteMatch' in ReactRouterDom) {\n  useMatch = ReactRouterDom['useRouteMatch' in ReactRouterDom ? 'useRouteMatch' : ''];\n} else {\n  useMatch = function useMatch() {\n    throw new AuthSdkError('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the \"samples\" folder for how to implement your own custom SecureRoute Component.');\n  };\n}\n\nvar SecureRoute = function SecureRoute(_ref) {\n  var onAuthRequired = _ref.onAuthRequired,\n      errorComponent = _ref.errorComponent,\n      routeProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useOktaAuth = useOktaAuth(),\n      oktaAuth = _useOktaAuth.oktaAuth,\n      authState = _useOktaAuth.authState,\n      _onAuthRequired = _useOktaAuth._onAuthRequired;\n\n  var match = useMatch(routeProps);\n  var pendingLogin = React.useRef(false);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      handleLoginError = _React$useState2[0],\n      setHandleLoginError = _React$useState2[1];\n\n  var ErrorReporter = errorComponent || OktaError;\n  React.useEffect(function () {\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var originalUri, onAuthRequiredFn;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!pendingLogin.current) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                pendingLogin.current = true;\n                originalUri = toRelativeUrl(window.location.href, window.location.origin);\n                oktaAuth.setOriginalUri(originalUri);\n                onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n\n                if (!onAuthRequiredFn) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 9;\n                return onAuthRequiredFn(oktaAuth);\n\n              case 9:\n                _context.next = 13;\n                break;\n\n              case 11:\n                _context.next = 13;\n                return oktaAuth.signInWithRedirect();\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleLogin() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    if (!authState.isAuthenticated) {\n      handleLogin()[\"catch\"](function (err) {\n        setHandleLoginError(err);\n      });\n    }\n  }, [authState, oktaAuth, match, onAuthRequired, _onAuthRequired]);\n\n  if (handleLoginError) {\n    return /*#__PURE__*/React.createElement(ErrorReporter, {\n      error: handleLoginError\n    });\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ReactRouterDom.Route, _objectSpread({}, routeProps));\n};\n\nexport { LoginCallback, OktaContext, SecureRoute, Security, useOktaAuth, withOktaAuth };","map":{"version":3,"mappings":"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","names":["OktaContext","OktaError","error","message","createElement","useOktaAuth","restoreOriginalUri","onAuthRequired","React","useState","Security","authState","setAuthState","console","getAuthState","oktaAuth","options","useEffect","_context","warn","arguments","currentAuthState","handler","err","AuthSdkError","authStateManager","unsubscribe","minSupportedVersion","isAuthJsSupported","value","_onAuthRequired","children","withOktaAuth","WrappedComponent","oktaAuthProps","enumerableOnly","LoginCallback","target","i","_defineProperty","Object","loadingElement","onAuthResume","ComponentToWrap","callbackError","setCallbackError","_ref","ErrorReporter","errorComponent","_ref$loadingElement","isInteractionRequired","_useOktaAuth","handleLoginRedirect","_React$useState2","authError","displayError","e","useMatch","_excluded","ReactRouterDom","handleLoginError","pendingLogin","current","_callee$","originalUri","setOriginalUri","onAuthRequiredFn","isAuthenticated","handleLogin","setHandleLoginError"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\OktaContext.ts","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\OktaError.tsx","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\Security.tsx","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\withOktaAuth.tsx","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\LoginCallback.tsx","C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\src\\SecureRoute.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState | null;\n    _onAuthRequired?: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext) as IOktaContext;\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, AuthState, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\nimport { compare as compareVersions } from 'compare-versions';\n\ndeclare const AUTH_JS: {\n  minSupportedVersion: string;\n}\n\ndeclare const PACKAGE_NAME: string;\ndeclare const PACKAGE_VERSION: string;\ndeclare const SKIP_VERSION_CHECK: string;\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return null;\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = (async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    }) as ((oktaAuth: OktaAuth, originalUri?: string) => Promise<void>);\n\n  }, []); // empty array, only check on component mount\n\n  React.useEffect(() => {\n    if (!oktaAuth) {\n      return;\n    }\n\n    // Add okta-react userAgent\n    if (oktaAuth._oktaUserAgent) {\n      oktaAuth._oktaUserAgent.addEnvironment(`${PACKAGE_NAME}/${PACKAGE_VERSION}`);\n    } else {\n      console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n    }\n\n    // Update Security provider with latest authState\n    const currentAuthState = oktaAuth.authStateManager.getAuthState();\n    if (currentAuthState !== authState) {\n      setAuthState(currentAuthState);\n    }\n    const handler = (authState: AuthState) => {\n      setAuthState(authState);\n    };\n    oktaAuth.authStateManager.subscribe(handler);\n\n    // Trigger an initial change event to make sure authState is latest\n    oktaAuth.start();\n\n    return () => {\n      oktaAuth.authStateManager.unsubscribe(handler);\n    };\n  }, [oktaAuth]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!oktaAuth._oktaUserAgent) {\n    console.warn('_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .');\n  }\n  else {\n    // use SKIP_VERSION_CHECK flag to control version check in tests\n    // OKTA-465157: remove SKIP_VERSION_CHECK\n    const isAuthJsSupported = SKIP_VERSION_CHECK === '1' ||\n      compareVersions(oktaAuth._oktaUserAgent.getVersion(), AUTH_JS.minSupportedVersion, '>=');\n    if (!isAuthJsSupported) {\n      const err = new AuthSdkError(`\n        Passed in oktaAuth is not compatible with the SDK,\n        minimum supported okta-auth-js version is ${AUTH_JS.minSupportedVersion}.\n      `);\n      return <OktaError error={err} />;\n    }\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props: Omit<P, keyof IOktaContext>) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\ninterface LoginCallbackProps {\n  errorComponent?: React.ComponentType<{ error: Error }>;\n  onAuthResume?: OnAuthResumeFunction;\n  loadingElement?: React.ReactElement;\n}\n\nconst LoginCallback: React.FC<LoginCallbackProps> = ({ errorComponent, loadingElement = null, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore OKTA-464505: backward compatibility support for auth-js@5\n    const isInteractionRequired = oktaAuth.idx.isInteractionRequired || oktaAuth.isInteractionRequired.bind(oktaAuth);\n    if (onAuthResume && isInteractionRequired()) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect().catch(e => {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n\n  const authError = authState?.error;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return loadingElement;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport * as ReactRouterDom from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError } from '@okta/okta-auth-js';\nimport OktaError from './OktaError';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet useMatch: any;\nif ('useRouteMatch' in ReactRouterDom) {\n  // trick static analyzer to avoid \"'useRouteMatch' is not exported\" error\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  useMatch = (ReactRouterDom as any)['useRouteMatch' in ReactRouterDom ? 'useRouteMatch' : ''];\n} else {\n  // throw when useMatch is triggered\n  useMatch = () => { \n    throw new AuthSdkError('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the \"samples\" folder for how to implement your own custom SecureRoute Component.');\n  };\n}\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n  errorComponent?: React.ComponentType<{ error: Error }>;\n} & ReactRouterDom.RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired,\n  errorComponent,\n  ...routeProps\n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n  const [handleLoginError, setHandleLoginError] = React.useState<Error | null>(null);\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      const originalUri = toRelativeUrl(window.location.href, window.location.origin);\n      oktaAuth.setOriginalUri(originalUri);\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (!authState) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated) { \n      handleLogin().catch(err => {\n        setHandleLoginError(err as Error);\n      });\n    }  \n\n  }, [\n    authState,\n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (handleLoginError) {\n    return <ErrorReporter error={handleLoginError} />;\n  }\n\n  if (!authState || !authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <ReactRouterDom.Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n"]},"metadata":{},"sourceType":"module"}