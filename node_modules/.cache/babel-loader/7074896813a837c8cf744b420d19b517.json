{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOAuthTransactionMeta(obj) {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nfunction isPKCETransactionMeta(obj) {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n\n  return !!obj.codeVerifier;\n}\n\nfunction isIdxTransactionMeta(obj) {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n\n  return !!obj.interactionHandle;\n}\n\nfunction isCustomAuthTransactionMeta(obj) {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n\n  const isAllStringValues = Object.values(obj).find(value => typeof value !== 'string') === undefined;\n  return isAllStringValues;\n}\n\nfunction isTransactionMeta(obj) {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport { isCustomAuthTransactionMeta, isIdxTransactionMeta, isOAuthTransactionMeta, isPKCETransactionMeta, isTransactionMeta };","map":{"version":3,"mappings":";;;;;;;;;;;AA+EA,SAASA,sBAAT,CAAgCC,GAAhC,EAAmC;EACjC,IAAI,CAACA,GAAD,IAAQ,OAAOA,GAAP,KAAe,QAAvB,IAAmCC,MAAM,CAACC,MAAP,CAAcF,GAAd,EAAmBG,MAAnB,KAA8B,CAArE,EAAwE;IACtE,OAAO,KAAP;EACD;;EACD,OAAO,IAAP;AACD;;AAEK,SAAUC,sBAAV,CAAiCJ,GAAjC,EAAyC;EAC7C,IAAI,CAACD,sBAAsB,CAACC,GAAD,CAA3B,EAAkC;IAChC,OAAO,KAAP;EACD;;EACD,OAAO,CAAC,CAACA,GAAG,CAACK,WAAN,IAAqB,CAAC,CAACL,GAAG,CAACM,YAAlC;AACD;;AAEK,SAAUC,qBAAV,CAAgCP,GAAhC,EAAwC;EAC5C,IAAI,CAACI,sBAAsB,CAACJ,GAAD,CAA3B,EAAkC;IAChC,OAAO,KAAP;EACD;;EACD,OAAO,CAAC,CAAEA,GAAW,CAACQ,YAAtB;AACD;;AAEK,SAAUC,oBAAV,CAA+BT,GAA/B,EAAuC;EAC3C,IAAI,CAACO,qBAAqB,CAACP,GAAD,CAA1B,EAAiC;IAC/B,OAAO,KAAP;EACD;;EACD,OAAO,CAAC,CAAEA,GAAW,CAACU,iBAAtB;AACD;;AAEK,SAAUC,2BAAV,CAAsCX,GAAtC,EAA8C;EAClD,IAAI,CAACD,sBAAsB,CAACC,GAAD,CAA3B,EAAkC;IAChC,OAAO,KAAP;EACD;;EACD,MAAMY,iBAAiB,GAAGX,MAAM,CAACC,MAAP,CAAcF,GAAd,EAAmBa,IAAnB,CAAyBC,KAAD,IAAY,OAAOA,KAAP,KAAiB,QAArD,MAAoEC,SAA9F;EACA,OAAOH,iBAAP;AACD;;AAEK,SAAUI,iBAAV,CAA4BhB,GAA5B,EAAoC;EACxC,IAAII,sBAAsB,CAACJ,GAAD,CAAtB,IAA+BW,2BAA2B,CAACX,GAAD,CAA9D,EAAqE;IACnE,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACF","names":["isObjectWithProperties","obj","Object","values","length","isOAuthTransactionMeta","redirectUri","responseType","isPKCETransactionMeta","codeVerifier","isIdxTransactionMeta","interactionHandle","isCustomAuthTransactionMeta","isAllStringValues","find","value","undefined","isTransactionMeta"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\types\\Transaction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { StorageManager } from '../StorageManager';\nimport { CustomUrls, TokenParams } from './OktaAuthOptions';\nimport { IdxTransactionMeta } from '../idx/types';\n\nexport interface TransactionManagerOptions {\n  storageManager?: StorageManager;\n  enableSharedStorage?: boolean; // default true\n  legacyWidgetSupport?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n// formerly known as \"Redirect OAuth Params\"\nexport interface OAuthTransactionMeta extends\n  Pick<TokenParams,\n    'issuer' |\n    'clientId' |\n    'redirectUri' |\n    'responseType' |\n    'responseMode' |\n    'scopes' |\n    'state' |\n    'pkce' |\n    'ignoreSignature' |\n    'nonce'\n  >\n{\n  urls: CustomUrls;\n  originalUri?: string;\n}\n\nexport interface PKCETransactionMeta extends\n  OAuthTransactionMeta,\n  Pick<TokenParams,\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier'\n  >\n{}\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\nexport interface TransactionMetaOptions extends\n  Pick<IdxTransactionMeta,\n    'pkce' |\n    'state' |\n    'codeChallenge' |\n    'codeChallengeMethod' |\n    'codeVerifier' |\n    'flow' |\n    'activationToken' |\n    'recoveryToken'\n  >\n{\n  oauth?: boolean;\n  muteWarning?: boolean;\n}\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}