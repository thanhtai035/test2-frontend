{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { httpRequest } from '../../../http/request.js';\nimport { divideActionParamsByMutability } from './actionParser.js';\nimport AuthApiError from '../../../errors/AuthApiError.js';\n\nvar generateDirectFetch = function generateDirectFetch(authClient, _ref) {\n  var actionDefinition = _ref.actionDefinition,\n      _ref$defaultParamsFor = _ref.defaultParamsForAction,\n      defaultParamsForAction = _ref$defaultParamsFor === void 0 ? {} : _ref$defaultParamsFor,\n      _ref$immutableParamsF = _ref.immutableParamsForAction,\n      immutableParamsForAction = _ref$immutableParamsF === void 0 ? {} : _ref$immutableParamsF,\n      _ref$toPersist = _ref.toPersist,\n      toPersist = _ref$toPersist === void 0 ? {} : _ref$toPersist;\n  var target = actionDefinition.href;\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var params,\n        _a,\n        headers,\n        body,\n        response,\n        _response,\n        payload,\n        wwwAuthHeader,\n        idxResponse,\n        _args = arguments;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n            headers = {\n              'Content-Type': 'application/json',\n              'Accept': actionDefinition.accepts || 'application/ion+json'\n            };\n            body = JSON.stringify(Object.assign(Object.assign(Object.assign({}, defaultParamsForAction), params), immutableParamsForAction));\n            _context.prev = 3;\n            _context.next = 6;\n            return httpRequest(authClient, {\n              url: target,\n              method: actionDefinition.method,\n              headers: headers,\n              args: body,\n              withCredentials: (_a = toPersist === null || toPersist === void 0 ? void 0 : toPersist.withCredentials) !== null && _a !== void 0 ? _a : true\n            });\n\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"return\", authClient.idx.makeIdxResponse(Object.assign({}, response), toPersist, true));\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n\n            if (!(!(_context.t0 instanceof AuthApiError) || !(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.xhr))) {\n              _context.next = 14;\n              break;\n            }\n\n            throw _context.t0;\n\n          case 14:\n            _response = _context.t0.xhr;\n            payload = _response.responseJSON || JSON.parse(_response.responseText);\n            wwwAuthHeader = _response.headers['WWW-Authenticate'] || _response.headers['www-authenticate'];\n            idxResponse = authClient.idx.makeIdxResponse(Object.assign({}, payload), toPersist, false);\n\n            if (_response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n              idxResponse.stepUp = true;\n            }\n\n            throw idxResponse;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 10]]);\n  }));\n};\n\nvar generateIdxAction = function generateIdxAction(authClient, actionDefinition, toPersist) {\n  var generator = generateDirectFetch;\n\n  var _divideActionParamsBy = divideActionParamsByMutability(actionDefinition),\n      defaultParams = _divideActionParamsBy.defaultParams,\n      neededParams = _divideActionParamsBy.neededParams,\n      immutableParams = _divideActionParamsBy.immutableParams;\n\n  var action = generator(authClient, {\n    actionDefinition: actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist: toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport { generateIdxAction as default };","map":{"version":3,"mappings":"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","names":["generateDirectFetch","authClient","actionDefinition","defaultParamsForAction","immutableParamsForAction","toPersist","target","href","params","headers","accepts","body","JSON","stringify","Object","httpRequest","url","method","args","withCredentials","_a","response","idx","makeIdxResponse","AuthApiError","xhr","payload","responseJSON","parse","responseText","wwwAuthHeader","idxResponse","status","stepUp","generateIdxAction","generator","divideActionParamsByMutability","defaultParams","neededParams","immutableParams","action","name"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\generateIdxAction.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      // Throw IDX response if request did not succeed. This behavior will be removed in version 7.0: OKTA-481844\n      throw idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n"]},"metadata":{},"sourceType":"module"}