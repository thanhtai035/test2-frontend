{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nvar ReEnrollAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(ReEnrollAuthenticator, _Remediator);\n\n  var _super = _createSuper(ReEnrollAuthenticator);\n\n  function ReEnrollAuthenticator() {\n    _classCallCheck(this, ReEnrollAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReEnrollAuthenticator, [{\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var newPassword = this.values.newPassword;\n\n      if (!newPassword) {\n        return;\n      }\n\n      return {\n        passcode: newPassword\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      var challengeType = this.getAuthenticator().type;\n      var name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n      return Object.assign(Object.assign({}, input.form.value[0]), {\n        name: name\n      });\n    }\n  }]);\n\n  return ReEnrollAuthenticator;\n}(Remediator);\n\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nexport { ReEnrollAuthenticator };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IAmBaA,qB;;;;;;;;;;;;;WAGX,0BAAc;MACZ,IAAQC,WAAR,GAAwB,KAAKC,MAA7B,CAAQD,WAAR;;MACA,IAAI,CAACA,WAAL,EAAkB;QAChB;MACD;;MACD,OAAO;QACLE,QAAQ,EAAEF;MADL,CAAP;IAGD;;;WAED,6BAAoBG,KAApB,EAAyB;MAEvB,IAAMC,aAAa,GAAG,KAAKC,gBAAL,GAAyBC,IAA/C;MACA,IAAMC,IAAI,GAAGH,aAAa,KAAK,UAAlB,GAA+B,aAA/B,GAA+C,kBAA5D;MACA,OACKI,qCAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB,IACH;QAAAH,IAAI,EAAJA;MAAA,CADG,CADL;IAID;;;;EArBwCI,U;;AAClCZ,qBAAe,gBAAf,GAAkB,wBAAlB","names":["ReEnrollAuthenticator","newPassword","values","passcode","input","challengeType","getAuthenticator","type","name","Object","form","value","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\ReEnrollAuthenticator.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}