{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport BaseTransaction from './Base.js';\nimport { generateRequestFnFromLinks } from '../request.js';\n\nvar EmailChallengeTransaction = /*#__PURE__*/function (_BaseTransaction) {\n  _inherits(EmailChallengeTransaction, _BaseTransaction);\n\n  var _super = _createSuper(EmailChallengeTransaction);\n\n  function EmailChallengeTransaction(oktaAuth, options) {\n    var _this;\n\n    _classCallCheck(this, EmailChallengeTransaction);\n\n    _this = _super.call(this, oktaAuth, options);\n    var accessToken = options.accessToken,\n        res = options.res;\n    var id = res.id,\n        expiresAt = res.expiresAt,\n        profile = res.profile,\n        status = res.status,\n        _links = res._links;\n    _this.id = id;\n    _this.expiresAt = expiresAt;\n    _this.profile = profile;\n    _this.status = status;\n    _this.poll = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var fn;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              fn = generateRequestFnFromLinks({\n                oktaAuth: oktaAuth,\n                accessToken: accessToken,\n                methodName: 'poll',\n                links: _links,\n                transactionClassName: 'EmailStatusTransaction'\n              });\n              _context.next = 3;\n              return fn();\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.verify = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload) {\n        var fn;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fn = generateRequestFnFromLinks({\n                  oktaAuth: oktaAuth,\n                  accessToken: accessToken,\n                  methodName: 'verify',\n                  links: _links\n                });\n                _context2.next = 3;\n                return fn(payload);\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  return _createClass(EmailChallengeTransaction);\n}(BaseTransaction);\n\nexport { EmailChallengeTransaction as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;IASqBA,yB;;;;;EAUnB,mCAAYC,QAAZ,EAAsBC,OAAtB,EAA6B;IAAA;;IAAA;;IAC3B,0BAAMD,QAAN,EAAgBC,OAAhB;IAEA,IAAQC,WAAR,GAA6BD,OAA7B,CAAQC,WAAR;IAAA,IAAqBC,GAArB,GAA6BF,OAA7B,CAAqBE,GAArB;IAEA,IAAQC,EAAR,GAAmDD,GAAnD,CAAQC,EAAR;IAAA,IAAYC,SAAZ,GAAmDF,GAAnD,CAAYE,SAAZ;IAAA,IAAuBC,OAAvB,GAAmDH,GAAnD,CAAuBG,OAAvB;IAAA,IAAgCC,MAAhC,GAAmDJ,GAAnD,CAAgCI,MAAhC;IAAA,IAAwCC,MAAxC,GAAmDL,GAAnD,CAAwCK,MAAxC;IACA,MAAKJ,EAAL,GAAUA,EAAV;IACA,MAAKC,SAAL,GAAiBA,SAAjB;IACA,MAAKC,OAAL,GAAeA,OAAf;IACA,MAAKC,MAAL,GAAcA,MAAd;IAGA,MAAKE,IAAL,2EAAY;MAAA;MAAA;QAAA;UAAA;YAAA;cACJC,EADI,GACCC,0BAA0B,CAAC;gBACpCX,QAAQ,EAARA,QADoC;gBAEpCE,WAAW,EAAXA,WAFoC;gBAGpCU,UAAU,EAAE,MAHwB;gBAIpCC,KAAK,EAAEL,MAJ6B;gBAKpCM,oBAAoB,EAAE;cALc,CAAD,CAD3B;cAAA;cAAA,OAQGJ,EAAE,EARL;;YAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAZ;;IAUA,MAAKK,MAAL;MAAA,uEAAc,kBAAOC,OAAP;QAAA;QAAA;UAAA;YAAA;cAAA;gBACNN,EADM,GACDC,0BAA0B,CAAC;kBACpCX,QAAQ,EAARA,QADoC;kBAEpCE,WAAW,EAAXA,WAFoC;kBAGpCU,UAAU,EAAE,QAHwB;kBAIpCC,KAAK,EAAEL;gBAJ6B,CAAD,CADzB;gBAAA;gBAAA,OAOCE,EAAE,CAACM,OAAD,CAPH;;cAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAd;;MAAA;QAAA;MAAA;IAAA;;IAtB2B;EA+B5B;;;EAzCoDC,e","names":["EmailChallengeTransaction","oktaAuth","options","accessToken","res","id","expiresAt","profile","status","_links","poll","fn","generateRequestFnFromLinks","methodName","links","transactionClassName","verify","payload","BaseTransaction"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\myaccount\\transactions\\EmailChallengeTransaction.ts"],"sourcesContent":["import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n        transactionClassName: 'EmailStatusTransaction'\n      });\n      return await fn() as EmailStatusTransaction;\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      });\n      return await fn(payload) as EmailChallengeTransaction;\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}