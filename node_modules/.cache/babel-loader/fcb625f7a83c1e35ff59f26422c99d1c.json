{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\okta-springboot-react-master\\\\okta-springboot-react-master\\\\jobs-ui\\\\src\\\\components\\\\customer\\\\Customer.js\";\nimport React, { Component } from 'react';\nimport { withOktaAuth } from '@okta/okta-react';\nimport M from 'materialize-css';\nimport JobList from './JobList';\nimport Search from '../misc/Search';\nimport API from '../misc/api';\nimport Pagination from '../misc/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Customer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      jobs: [],\n      pagination: {\n        first: null,\n        last: null,\n        number: null,\n        size: null,\n        totalElements: null,\n        totalPages: null\n      },\n      searchText: ''\n    };\n    this.pageDefaultNumber = 0;\n    this.pageDefaultSize = 10;\n\n    this.getAllJobs = async () => {\n      API.get(`products/1`, {\n        headers: {\n          'Authorization': 'Bearer ' + (await this.props.authState.accessToken.accessToken)\n        }\n      }).then(response => {\n        console.log(response.data);\n        const {\n          content,\n          first,\n          last,\n          number,\n          size,\n          totalElements,\n          totalPages\n        } = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getJobsWithText = async (text, page, size) => {\n      API.put(`jobs/search?page=${page}&size=${size}`, {\n        'text': text\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + (await this.props.authState.accessToken.accessToken)\n        }\n      }).then(response => {\n        const {\n          content,\n          first,\n          last,\n          number,\n          size,\n          totalElements,\n          totalPages\n        } = response.data;\n        this.setState({\n          jobs: content,\n          pagination: {\n            first,\n            last,\n            number,\n            size,\n            totalElements,\n            totalPages\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n        M.toast({\n          html: error,\n          classes: 'rounded'\n        });\n      });\n    };\n\n    this.searchJob = async (searchText, pageNumber, pageSize) => {\n      this.setState({\n        searchText\n      });\n      searchText ? this.getJobsWithText(searchText, pageNumber, pageSize) : this.getAllJobs(pageNumber, pageSize);\n    };\n  }\n\n  async componentDidMount() {\n    this.getAllJobs();\n  }\n\n  render() {\n    const {\n      jobs,\n      pagination,\n      searchText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searchJob: this.searchJob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"center\",\n        pagination: pagination,\n        searchText: searchText,\n        searchJob: this.searchJob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(JobList, {\n        jobs: jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withOktaAuth(Customer);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withOktaAuth","M","JobList","Search","API","Pagination","Customer","state","jobs","pagination","first","last","number","size","totalElements","totalPages","searchText","pageDefaultNumber","pageDefaultSize","getAllJobs","get","headers","props","authState","accessToken","then","response","console","log","data","content","catch","error","getJobsWithText","text","page","put","setState","toast","html","classes","searchJob","pageNumber","pageSize","componentDidMount","render"],"sources":["C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/jobs-ui/src/components/customer/Customer.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { withOktaAuth } from '@okta/okta-react'\nimport M from 'materialize-css'\nimport JobList from './JobList'\nimport Search from '../misc/Search'\nimport API from '../misc/api'\nimport Pagination from '../misc/Pagination'\n\nclass Customer extends Component {\n  state = {\n    jobs: [],\n    pagination: {\n      first: null,\n      last: null,\n      number: null,\n      size: null,\n      totalElements: null,\n      totalPages: null\n    },\n    searchText: ''\n  }\n\n  pageDefaultNumber = 0\n  pageDefaultSize = 10\n\n  async componentDidMount() {\n    this.getAllJobs()\n  }\n\n  getAllJobs = async () => {\n    API.get(`products/1`, {\n      headers: {\n        'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\n      }\n    })\n      .then(response => {\n        console.log(response.data)\n        const { content, first, last, number, size, totalElements, totalPages } = response.data\n\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  getJobsWithText = async (text, page, size) => {\n    API.put(`jobs/search?page=${page}&size=${size}`, { 'text': text }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + await this.props.authState.accessToken.accessToken\n      }\n    })\n      .then(response => {\n        const { content, first, last, number, size, totalElements, totalPages } = response.data\n        this.setState({\n          jobs: content,\n          pagination: {\n            first,\n            last,\n            number,\n            size,\n            totalElements,\n            totalPages\n          }\n        })\n      })\n      .catch(error => {\n        console.log(error)\n        M.toast({ html: error, classes: 'rounded' })\n      })\n  }\n\n  searchJob = async (searchText, pageNumber, pageSize) => {\n    this.setState({ searchText })\n    searchText ? this.getJobsWithText(searchText, pageNumber, pageSize) : this.getAllJobs(pageNumber, pageSize)\n  }\n\n  render() {\n    const { jobs, pagination, searchText } = this.state\n    \n    return (\n      <div className=\"container\">\n        <Search searchJob={this.searchJob} />\n\n        <Pagination className=\"center\"\n          pagination={pagination}\n          searchText={searchText}\n          searchJob={this.searchJob}\n        />\n\n        <JobList jobs={jobs} />\n      </div>\n    )\n  }\n}\n\nexport default withOktaAuth(Customer)"],"mappings":"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"},"metadata":{},"sourceType":"module"}