{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nvar SecurityQuestionEnrollment = /*#__PURE__*/function (_Authenticator) {\n  _inherits(SecurityQuestionEnrollment, _Authenticator);\n\n  var _super = _createSuper(SecurityQuestionEnrollment);\n\n  function SecurityQuestionEnrollment() {\n    _classCallCheck(this, SecurityQuestionEnrollment);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SecurityQuestionEnrollment, [{\n    key: \"canVerify\",\n    value: function canVerify(values) {\n      var credentials = values.credentials;\n\n      if (credentials && credentials.questionKey && credentials.answer) {\n        return true;\n      }\n\n      var questionKey = values.questionKey,\n          question = values.question,\n          answer = values.answer;\n      return !!(questionKey && answer) || !!(question && answer);\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials(values) {\n      var questionKey = values.questionKey,\n          question = values.question,\n          answer = values.answer;\n\n      if (!answer || !questionKey && !question) {\n        return;\n      }\n\n      return {\n        questionKey: question ? 'custom' : questionKey,\n        question: question,\n        answer: answer\n      };\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return [{\n        name: 'questionKey',\n        type: 'string',\n        required: true\n      }, {\n        name: 'question',\n        type: 'string',\n        label: 'Create a security question'\n      }, {\n        name: 'answer',\n        type: 'string',\n        label: 'Answer',\n        required: true\n      }];\n    }\n  }]);\n\n  return SecurityQuestionEnrollment;\n}(Authenticator);\n\nexport { SecurityQuestionEnrollment };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IASaA,0B;;;;;;;;;;;;;WACX,mBAAUC,MAAV,EAA8C;MAC5C,IAAQC,WAAR,GAAwBD,MAAxB,CAAQC,WAAR;;MACA,IAAIA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,MAA1D,EAAkE;QAChE,OAAO,IAAP;MACD;;MACD,IAAQD,WAAR,GAA0CF,MAA1C,CAAQE,WAAR;MAAA,IAAqBE,QAArB,GAA0CJ,MAA1C,CAAqBI,QAArB;MAAA,IAA+BD,MAA/B,GAA0CH,MAA1C,CAA+BG,MAA/B;MACA,OAAO,CAAC,EAAED,WAAW,IAAIC,MAAjB,CAAD,IAA6B,CAAC,EAAEC,QAAQ,IAAID,MAAd,CAArC;IACD;;;WAED,wBAAeH,MAAf,EAAmD;MACjD,IAAQE,WAAR,GAA0CF,MAA1C,CAAQE,WAAR;MAAA,IAAqBE,QAArB,GAA0CJ,MAA1C,CAAqBI,QAArB;MAAA,IAA+BD,MAA/B,GAA0CH,MAA1C,CAA+BG,MAA/B;;MACA,IAAI,CAACA,MAAD,IAAY,CAACD,WAAD,IAAgB,CAACE,QAAjC,EAA4C;QAC1C;MACD;;MACD,OAAO;QACLF,WAAW,EAAEE,QAAQ,GAAG,QAAH,GAAcF,WAD9B;QAELE,QAAQ,EAARA,QAFK;QAGLD,MAAM,EAANA;MAHK,CAAP;IAKD;;;WAED,qBAAS;MACP,OAAO,CACL;QAAEE,IAAI,EAAE,aAAR;QAAuBC,IAAI,EAAE,QAA7B;QAAuCC,QAAQ,EAAE;MAAjD,CADK,EAEL;QAAEF,IAAI,EAAE,UAAR;QAAoBC,IAAI,EAAE,QAA1B;QAAoCE,KAAK,EAAE;MAA3C,CAFK,EAGL;QAAEH,IAAI,EAAE,QAAR;QAAkBC,IAAI,EAAE,QAAxB;QAAkCE,KAAK,EAAE,QAAzC;QAAmDD,QAAQ,EAAE;MAA7D,CAHK,CAAP;IAKD;;;;EA5B6CE,a","names":["SecurityQuestionEnrollment","values","credentials","questionKey","answer","question","name","type","required","label","Authenticator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\authenticator\\SecurityQuestionEnrollment.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}