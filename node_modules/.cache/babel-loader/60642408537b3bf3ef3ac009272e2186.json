{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { sendRequest } from './request.js';\n\nvar getProfile = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return sendRequest(oktaAuth, {\n              url: '/idp/myaccount/profile',\n              method: 'GET',\n              accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n              transactionClassName: 'ProfileTransaction'\n            });\n\n          case 2:\n            transaction = _context.sent;\n            return _context.abrupt(\"return\", transaction);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getProfile(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar updateProfile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(oktaAuth, options) {\n    var payload, accessToken, transaction;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            payload = options.payload, accessToken = options.accessToken;\n            _context2.next = 3;\n            return sendRequest(oktaAuth, {\n              url: '/idp/myaccount/profile',\n              method: 'PUT',\n              payload: payload,\n              accessToken: accessToken,\n              transactionClassName: 'ProfileTransaction'\n            });\n\n          case 3:\n            transaction = _context2.sent;\n            return _context2.abrupt(\"return\", transaction);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function updateProfile(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getProfileSchema = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(oktaAuth, options) {\n    var transaction;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return sendRequest(oktaAuth, {\n              url: '/idp/myaccount/profile/schema',\n              method: 'GET',\n              accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n              transactionClassName: 'ProfileSchemaTransaction'\n            });\n\n          case 2:\n            transaction = _context3.sent;\n            return _context3.abrupt(\"return\", transaction);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getProfileSchema(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport { getProfile, getProfileSchema, updateProfile };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAUa,cAAU;EAAA,sEAAqC,iBAAOA,QAAP,EAAiBC,OAAjB;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAChCC,WAAW,CAACF,QAAD,EAAW;cAC9CG,GAAG,EAAE,wBADyC;cAE9CC,MAAM,EAAE,KAFsC;cAG9CC,WAAW,EAAEJ,OAAO,SAAP,WAAO,KAAP,yBAAO,CAAEI,WAHwB;cAI9CC,oBAAoB,EAAE;YAJwB,CAAX,CADqB;;UAAA;YACpDC,WADoD;YAAA,iCAOnDA,WAPmD;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArC;;EAAA,gBAAVC,UAAU;IAAA;EAAA;AAAA,GAAV;;AAaA,iBAAa;EAAA,uEAAqC,kBAC7DR,QAD6D,EAE7DC,OAF6D;IAAA;IAAA;MAAA;QAAA;UAAA;YAIrDQ,OAJqD,GAI5BR,OAJ4B,CAIrDQ,OAJqD,EAI5CJ,WAJ4C,GAI5BJ,OAJ4B,CAI5CI,WAJ4C;YAAA;YAAA,OAKnCH,WAAW,CAACF,QAAD,EAAW;cAC9CG,GAAG,EAAE,wBADyC;cAE9CC,MAAM,EAAE,KAFsC;cAG9CK,OAAO,EAAPA,OAH8C;cAI9CJ,WAAW,EAAXA,WAJ8C;cAK9CC,oBAAoB,EAAE;YALwB,CAAX,CALwB;;UAAA;YAKvDC,WALuD;YAAA,kCAYtDA,WAZsD;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArC;;EAAA,gBAAbG,aAAa;IAAA;EAAA;AAAA,GAAb;;AAkBA,oBAAgB;EAAA,uEAA2C,kBACtEV,QADsE,EAEtEC,OAFsE;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAI5CC,WAAW,CAACF,QAAD,EAAW;cAC9CG,GAAG,EAAE,+BADyC;cAE9CC,MAAM,EAAE,KAFsC;cAG9CC,WAAW,EAAEJ,OAAO,SAAP,WAAO,KAAP,yBAAO,CAAEI,WAHwB;cAI9CC,oBAAoB,EAAE;YAJwB,CAAX,CAJiC;;UAAA;YAIhEC,WAJgE;YAAA,kCAU/DA,WAV+D;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA3C;;EAAA,gBAAhBI,gBAAgB;IAAA;EAAA;AAAA,GAAhB","names":["oktaAuth","options","sendRequest","url","method","accessToken","transactionClassName","transaction","getProfile","payload","updateProfile","getProfileSchema"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\myaccount\\profileApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { \n  IAPIFunction,\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './types';\n\n/**\n * @scope: okta.myaccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myaccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myaccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileSchemaTransaction'\n  }) as ProfileSchemaTransaction;\n  return transaction;\n};\n"]},"metadata":{},"sourceType":"module"}