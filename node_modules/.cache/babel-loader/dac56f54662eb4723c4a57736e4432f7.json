{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Remediator.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { compareAuthenticators } from '../../authenticator/util.js';\n\nvar AuthenticatorData = /*#__PURE__*/function (_Remediator) {\n  _inherits(AuthenticatorData, _Remediator);\n\n  var _super = _createSuper(AuthenticatorData);\n\n  function AuthenticatorData(remediation) {\n    var _this;\n\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AuthenticatorData);\n\n    _this = _super.call(this, remediation, values);\n    _this.authenticator = _this.getAuthenticator();\n\n    _this.formatAuthenticatorData();\n\n    return _this;\n  }\n\n  _createClass(AuthenticatorData, [{\n    key: \"formatAuthenticatorData\",\n    value: function formatAuthenticatorData() {\n      var _this2 = this;\n\n      var authenticatorData = this.getAuthenticatorData();\n\n      if (authenticatorData) {\n        this.values.authenticatorsData = this.values.authenticatorsData.map(function (data) {\n          if (compareAuthenticators(_this2.authenticator, data)) {\n            return _this2.mapAuthenticatorDataFromValues(data);\n          }\n\n          return data;\n        });\n      } else {\n        var data = this.mapAuthenticatorDataFromValues();\n\n        if (data) {\n          this.values.authenticatorsData.push(data);\n        }\n      }\n    }\n  }, {\n    key: \"getAuthenticatorData\",\n    value: function getAuthenticatorData() {\n      var _this3 = this;\n\n      return this.values.authenticatorsData.find(function (data) {\n        return compareAuthenticators(_this3.authenticator, data);\n      });\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this4 = this;\n\n      return this.values.authenticatorsData.some(function (data) {\n        return compareAuthenticators(_this4.authenticator, data);\n      });\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient) {\n      var common = _get(_getPrototypeOf(AuthenticatorData.prototype), \"getNextStep\", this).call(this, authClient);\n\n      var options = this.getMethodTypes();\n      return Object.assign(Object.assign({}, common), options && {\n        options: options\n      });\n    }\n  }, {\n    key: \"mapAuthenticatorDataFromValues\",\n    value: function mapAuthenticatorDataFromValues(authenticatorData) {\n      var _this$values = this.values,\n          methodType = _this$values.methodType,\n          authenticator = _this$values.authenticator;\n\n      if (!methodType && isAuthenticator(authenticator)) {\n        methodType = authenticator === null || authenticator === void 0 ? void 0 : authenticator.methodType;\n      }\n\n      var _this$authenticator = this.authenticator,\n          id = _this$authenticator.id,\n          enrollmentId = _this$authenticator.enrollmentId;\n      var data = Object.assign(Object.assign({\n        id: id,\n        enrollmentId: enrollmentId\n      }, authenticatorData && authenticatorData), methodType && {\n        methodType: methodType\n      });\n      return data.methodType ? data : null;\n    }\n  }, {\n    key: \"getAuthenticatorFromRemediation\",\n    value: function getAuthenticatorFromRemediation() {\n      var authenticator = this.remediation.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'authenticator';\n      });\n      return authenticator;\n    }\n  }, {\n    key: \"getMethodTypes\",\n    value: function getMethodTypes() {\n      var _a;\n\n      var authenticator = this.getAuthenticatorFromRemediation();\n      return (_a = authenticator.form.value.find(function (_ref2) {\n        var name = _ref2.name;\n        return name === 'methodType';\n      })) === null || _a === void 0 ? void 0 : _a.options;\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this5 = this;\n\n      this.values = _get(_getPrototypeOf(AuthenticatorData.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticatorsData = this.values.authenticatorsData.filter(function (data) {\n        return compareAuthenticators(_this5.authenticator, data) !== true;\n      });\n      return Object.assign(Object.assign({}, this.values), {\n        authenticatorsData: authenticatorsData\n      });\n    }\n  }]);\n\n  return AuthenticatorData;\n}(Remediator);\n\nexport { AuthenticatorData };","map":{"version":3,"mappings":"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","names":["AuthenticatorData","remediation","values","authenticator","getAuthenticator","formatAuthenticatorData","authenticatorData","getAuthenticatorData","authenticatorsData","map","compareAuthenticators","data","mapAuthenticatorDataFromValues","push","find","some","authClient","common","options","getMethodTypes","Object","methodType","isAuthenticator","id","enrollmentId","value","name","getAuthenticatorFromRemediation","form","_a","filter","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\AuthenticatorData.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxOption, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types';\nimport { compareAuthenticators } from '../../authenticator/util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  // TODO: remove this override method in the next major version - OKTA-491236\n  getNextStep(authClient: OktaAuthIdxInterface) {\n    const common = super.getNextStep(authClient);\n    const options = this.getMethodTypes();\n    return { \n      ...common, \n      ...(options && { options }) \n    };\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  private getMethodTypes(): IdxOption[] {\n    const authenticator: IdxRemediationValue = this.getAuthenticatorFromRemediation();\n    return authenticator.form!.value.find(({ name }) => name === 'methodType')?.options as IdxOption[];\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}