{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { sendRequest } from './request.js';\n\nconst getProfile = async (oktaAuth, options) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    transactionClassName: 'ProfileTransaction'\n  });\n  return transaction;\n};\n\nconst updateProfile = async (oktaAuth, options) => {\n  const {\n    payload,\n    accessToken\n  } = options;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'ProfileTransaction'\n  });\n  return transaction;\n};\n\nconst getProfileSchema = async (oktaAuth, options) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n    transactionClassName: 'ProfileSchemaTransaction'\n  });\n  return transaction;\n};\n\nexport { getProfile, getProfileSchema, updateProfile };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAUa,gBAAU,GAAqC,OAAOA,QAAP,EAAiBC,OAAjB,KAA6B;EACvF,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAD,EAAW;IAC9CI,GAAG,EAAE,wBADyC;IAE9CC,MAAM,EAAE,KAFsC;IAG9CC,WAAW,EAAEL,OAAO,SAAP,WAAO,KAAP,yBAAO,CAAEK,WAHwB;IAI9CC,oBAAoB,EAAE;EAJwB,CAAX,CAArC;EAMA,OAAOL,WAAP;AACA,CARW;;AAaA,mBAAa,GAAqC,OAC7DF,QAD6D,EAE7DC,OAF6D,KAG3D;EACF,MAAM;IAAEO,OAAF;IAAWF;EAAX,IAA2BL,OAAjC;EACA,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAD,EAAW;IAC9CI,GAAG,EAAE,wBADyC;IAE9CC,MAAM,EAAE,KAFsC;IAG9CG,OAH8C;IAI9CF,WAJ8C;IAK9CC,oBAAoB,EAAE;EALwB,CAAX,CAArC;EAOA,OAAOL,WAAP;AACA,CAbW;;AAkBA,sBAAgB,GAA2C,OACtEF,QADsE,EAEtEC,OAFsE,KAGjC;EACrC,MAAMC,WAAW,GAAG,MAAMC,WAAW,CAACH,QAAD,EAAW;IAC9CI,GAAG,EAAE,+BADyC;IAE9CC,MAAM,EAAE,KAFsC;IAG9CC,WAAW,EAAEL,OAAO,SAAP,WAAO,KAAP,yBAAO,CAAEK,WAHwB;IAI9CC,oBAAoB,EAAE;EAJwB,CAAX,CAArC;EAMA,OAAOL,WAAP;AACF,CAXa","names":["oktaAuth","options","transaction","sendRequest","url","method","accessToken","transactionClassName","payload"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2-s3760615\\node_modules\\@okta\\lib\\myaccount\\profileApi.ts"],"sourcesContent":["import { sendRequest } from './request';\nimport { \n  IAPIFunction,\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './types';\n\n/**\n * @scope: okta.myaccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myaccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n    transactionClassName: 'ProfileTransaction'\n  }) as ProfileTransaction;\n  return transaction;\n};\n\n/**\n * @scope: okta.myaccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n    transactionClassName: 'ProfileSchemaTransaction'\n  }) as ProfileSchemaTransaction;\n  return transaction;\n};\n"]},"metadata":{},"sourceType":"module"}