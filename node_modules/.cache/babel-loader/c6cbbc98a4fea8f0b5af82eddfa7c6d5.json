{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport CustomError from './CustomError.js';\n\nclass AuthApiError extends CustomError {\n  constructor(err, xhr, meta) {\n    const message = err.errorSummary;\n    super(message);\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n\n}\n\nexport { AuthApiError as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAeqB,2BAAqBA,WAArB,CAAgC;EASnDC,YAAYC,GAAZ,EAA2BC,GAA3B,EAA+CC,IAA/C,EAAqF;IACnF,MAAMC,OAAO,GAAGH,GAAG,CAACI,YAApB;IACA,MAAMD,OAAN;IAEA,KAAKE,IAAL,GAAY,cAAZ;IACA,KAAKD,YAAL,GAAoBJ,GAAG,CAACI,YAAxB;IACA,KAAKE,SAAL,GAAiBN,GAAG,CAACM,SAArB;IACA,KAAKC,SAAL,GAAiBP,GAAG,CAACO,SAArB;IACA,KAAKC,OAAL,GAAeR,GAAG,CAACQ,OAAnB;IACA,KAAKC,WAAL,GAAmBT,GAAG,CAACS,WAAvB;;IAEA,IAAIR,GAAJ,EAAS;MACP,KAAKA,GAAL,GAAWA,GAAX;IACD;;IAED,IAAIC,IAAJ,EAAU;MACR,KAAKA,IAAL,GAAYA,IAAZ;IACD;EACF;;AA3BkD","names":["CustomError","constructor","err","xhr","meta","message","errorSummary","name","errorCode","errorLink","errorId","errorCauses"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\errors\\AuthApiError.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError, HttpResponse } from '../types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}