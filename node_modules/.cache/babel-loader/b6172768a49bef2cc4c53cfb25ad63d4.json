{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __rest } from './_virtual/_tslib.js';\nimport * as constants from './constants.js';\nimport { DEFAULT_MAX_CLOCK_SKEW, REFERRER_PATH_STORAGE_KEY } from './constants.js';\nimport { transactionStatus, resumeTransaction, transactionExists, introspectAuthn, postToTransaction as _postToTransaction2 } from './tx/api.js';\nimport { AuthTransaction } from './tx/AuthTransaction.js';\nimport { setRequestHeader } from './http/headers.js';\nimport { get, httpRequest } from './http/request.js';\nimport { clone } from './util/object.js';\nimport { toAbsoluteUrl, toQueryString } from './util/url.js';\nimport PKCE from './oidc/util/pkce.js';\nimport { closeSession, sessionExists, getSession, refreshSession, setCookieAndRedirect } from './session.js';\nimport { getOAuthUrls } from './oidc/util/oauth.js';\nimport * as features from './features.js';\nimport { isBrowser } from './features.js';\nimport { isInteractionRequiredError } from './oidc/util/errors.js';\nimport { isLoginRedirect as _isLoginRedirect, isInteractionRequired } from './oidc/util/loginRedirect.js';\nimport { prepareTokenParams } from './oidc/util/prepareTokenParams.js';\nimport './idx/types/api.js';\nimport './myaccount/types.js';\nimport { decodeToken } from './oidc/decodeToken.js';\nimport { revokeToken } from './oidc/revokeToken.js';\nimport { renewToken } from './oidc/renewToken.js';\nimport { renewTokensWithRefresh } from './oidc/renewTokensWithRefresh.js';\nimport { renewTokens } from './oidc/renewTokens.js';\nimport { verifyToken } from './oidc/verifyToken.js';\nimport { getUserInfo as _getUserInfo } from './oidc/getUserInfo.js';\nimport { exchangeCodeForTokens } from './oidc/exchangeCodeForTokens.js';\nimport { getWithoutPrompt } from './oidc/getWithoutPrompt.js';\nimport { getWithPopup } from './oidc/getWithPopup.js';\nimport { getWithRedirect } from './oidc/getWithRedirect.js';\nimport { parseFromUrl, parseOAuthResponseFromUrl } from './oidc/parseFromUrl.js';\nimport * as index from './crypto/index.js';\nimport * as webauthn from './crypto/webauthn.js';\nimport storageUtil from './browser/browserStorage.js';\nimport { TokenManager } from './TokenManager.js';\nimport { ServiceManager } from './ServiceManager.js';\nimport PromiseQueue from './PromiseQueue.js';\nimport fingerprint from './browser/fingerprint.js';\nimport { AuthStateManager } from './AuthStateManager.js';\nimport { StorageManager } from './StorageManager.js';\nimport TransactionManager from './TransactionManager.js';\nimport { buildOptions } from './options/index.js';\nimport { authenticate } from './idx/authenticate.js';\nimport { cancel } from './idx/cancel.js';\nimport { handleEmailVerifyCallback, isEmailVerifyCallback, parseEmailVerifyCallback, isEmailVerifyCallbackError } from './idx/emailVerify.js';\nimport { interact } from './idx/interact.js';\nimport { introspect } from './idx/introspect.js';\nimport { poll } from './idx/poll.js';\nimport { proceed, canProceed } from './idx/proceed.js';\nimport { register } from './idx/register.js';\nimport { recoverPassword } from './idx/recoverPassword.js';\nimport { handleInteractionCodeRedirect } from './idx/handleInteractionCodeRedirect.js';\nimport { startTransaction } from './idx/startTransaction.js';\nimport { unlockAccount } from './idx/unlockAccount.js';\nimport { getSavedTransactionMeta, createTransactionMeta, getTransactionMeta, saveTransactionMeta, clearTransactionMeta, isTransactionMetaValid } from './idx/transactionMeta.js';\nimport { OktaUserAgent } from './OktaUserAgent.js';\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState/index.js';\n\nvar OktaAuth = /*#__PURE__*/function () {\n  function OktaAuth(args) {\n    var _this = this;\n\n    _classCallCheck(this, OktaAuth);\n\n    this.features = features;\n    var options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: function _get(name) {\n          var storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this),\n      createTransaction: function createTransaction(res) {\n        return new AuthTransaction(_this, res);\n      },\n      postToTransaction: function postToTransaction(url, args, options) {\n        return _postToTransaction2(_this, url, args, options);\n      }\n    };\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n    Object.assign(this.options.storageUtil || {}, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager)\n    });\n    this._pending = {\n      handleLogin: false\n    };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin)\n      });\n    }\n\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n    this._tokenQueue = new PromiseQueue();\n\n    var useQueue = function useQueue(method) {\n      return PromiseQueue.prototype.push.bind(_this._tokenQueue, method, null);\n    };\n\n    var getWithRedirectFn = useQueue(getWithRedirect.bind(null, this));\n    var getWithRedirectApi = Object.assign(getWithRedirectFn, {\n      _setLocation: function _setLocation(url) {\n        if (options.setLocation) {\n          options.setLocation(url);\n        } else {\n          window.location = url;\n        }\n      }\n    });\n    var parseFromUrlFn = useQueue(parseFromUrl.bind(null, this));\n    var parseFromUrlApi = Object.assign(parseFromUrlFn, {\n      _getHistory: function _getHistory() {\n        return window.history;\n      },\n      _getLocation: function _getLocation() {\n        return window.location;\n      },\n      _getDocument: function _getDocument() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: function getUserInfo(accessTokenObject, idTokenObject) {\n        return _getUserInfo(_this, accessTokenObject, idTokenObject);\n      },\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: _isLoginRedirect.bind(null, this)\n    };\n    var toWrap = ['getWithoutPrompt', 'getWithPopup', 'revoke', 'renew', 'renewTokensWithRefresh', 'renewTokens'];\n    toWrap.forEach(function (key) {\n      _this.token[key] = useQueue(_this.token[key]);\n    });\n    var boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      makeIdxResponse: makeIdxState.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction,\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError: isInteractionRequiredError,\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback: isEmailVerifyCallback,\n      parseEmailVerifyCallback: parseEmailVerifyCallback,\n      isEmailVerifyCallbackError: isEmailVerifyCallbackError,\n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid: isTransactionMetaValid,\n      setFlow: function setFlow(flow) {\n        _this.options.flow = flow;\n      },\n      getFlow: function getFlow() {\n        return _this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this)\n    };\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n    this.fingerprint = fingerprint.bind(null, this);\n    this.emitter = new Emitter();\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n    this.authStateManager = new AuthStateManager(this);\n\n    if (!this.tokenManager.hasSharedStorage()) {\n      args.services = Object.assign(Object.assign({}, args.services), {\n        syncStorage: false\n      });\n    }\n\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  _createClass(OktaAuth, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.serviceManager.start();\n\n              case 2:\n                this.tokenManager.start();\n\n                if (this.token.isLoginRedirect()) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return this.authStateManager.updateAuthState();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.tokenManager.stop();\n                _context2.next = 3;\n                return this.serviceManager.stop();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"setHeaders\",\n    value: function setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  }, {\n    key: \"signIn\",\n    value: function () {\n      var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(opts) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.signInWithCredentials(opts));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function signIn(_x) {\n        return _signIn.apply(this, arguments);\n      }\n\n      return signIn;\n    }()\n  }, {\n    key: \"signInWithCredentials\",\n    value: function () {\n      var _signInWithCredentials = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(opts) {\n        var _this2 = this;\n\n        var _postToTransaction;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                opts = clone(opts || {});\n\n                _postToTransaction = function _postToTransaction(options) {\n                  delete opts.sendFingerprint;\n                  return _postToTransaction2(_this2, '/api/v1/authn', opts, options);\n                };\n\n                if (opts.sendFingerprint) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _postToTransaction());\n\n              case 4:\n                return _context4.abrupt(\"return\", this.fingerprint().then(function (fingerprint) {\n                  return _postToTransaction({\n                    headers: {\n                      'X-Device-Fingerprint': fingerprint\n                    }\n                  });\n                }));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function signInWithCredentials(_x2) {\n        return _signInWithCredentials.apply(this, arguments);\n      }\n\n      return signInWithCredentials;\n    }()\n  }, {\n    key: \"signInWithRedirect\",\n    value: function () {\n      var _signInWithRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var opts,\n            originalUri,\n            additionalParams,\n            params,\n            _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                opts = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n                originalUri = opts.originalUri, additionalParams = __rest(opts, [\"originalUri\"]);\n\n                if (!this._pending.handleLogin) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 4:\n                this._pending.handleLogin = true;\n                _context5.prev = 5;\n\n                if (originalUri) {\n                  this.setOriginalUri(originalUri);\n                }\n\n                params = Object.assign({\n                  scopes: this.options.scopes || ['openid', 'email', 'profile']\n                }, additionalParams);\n                _context5.next = 10;\n                return this.token.getWithRedirect(params);\n\n              case 10:\n                _context5.prev = 10;\n                this._pending.handleLogin = false;\n                return _context5.finish(10);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[5,, 10, 13]]);\n      }));\n\n      function signInWithRedirect() {\n        return _signInWithRedirect.apply(this, arguments);\n      }\n\n      return signInWithRedirect;\n    }()\n  }, {\n    key: \"closeSession\",\n    value: function closeSession() {\n      var _this3 = this;\n\n      return this.session.close().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _this3.tokenManager.clear();\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))).catch(function (e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          return null;\n        }\n\n        throw e;\n      });\n    }\n  }, {\n    key: \"revokeAccessToken\",\n    value: function () {\n      var _revokeAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(accessToken) {\n        var accessTokenKey;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (accessToken) {\n                  _context7.next = 6;\n                  break;\n                }\n\n                _context7.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                accessToken = _context7.sent.accessToken;\n                accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n                this.tokenManager.remove(accessTokenKey);\n\n              case 6:\n                if (accessToken) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context7.abrupt(\"return\", this.token.revoke(accessToken));\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function revokeAccessToken(_x3) {\n        return _revokeAccessToken.apply(this, arguments);\n      }\n\n      return revokeAccessToken;\n    }()\n  }, {\n    key: \"revokeRefreshToken\",\n    value: function () {\n      var _revokeRefreshToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(refreshToken) {\n        var refreshTokenKey;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (refreshToken) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                _context8.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                refreshToken = _context8.sent.refreshToken;\n                refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n                this.tokenManager.remove(refreshTokenKey);\n\n              case 6:\n                if (refreshToken) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", Promise.resolve(null));\n\n              case 8:\n                return _context8.abrupt(\"return\", this.token.revoke(refreshToken));\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function revokeRefreshToken(_x4) {\n        return _revokeRefreshToken.apply(this, arguments);\n      }\n\n      return revokeRefreshToken;\n    }()\n  }, {\n    key: \"getSignOutRedirectUrl\",\n    value: function getSignOutRedirectUrl() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var idToken = options.idToken,\n          postLogoutRedirectUri = options.postLogoutRedirectUri,\n          state = options.state;\n\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken;\n      }\n\n      if (!idToken) {\n        return '';\n      }\n\n      if (!postLogoutRedirectUri) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      var logoutUrl = getOAuthUrls(this).logoutUrl;\n      var idTokenHint = idToken.idToken;\n      var logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      }\n\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(options) {\n        var defaultUri, currentUri, postLogoutRedirectUri, accessToken, refreshToken, revokeAccessToken, revokeRefreshToken, logoutUri;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                options = Object.assign({}, options);\n                defaultUri = window.location.origin;\n                currentUri = window.location.href;\n                postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri || defaultUri;\n                accessToken = options.accessToken;\n                refreshToken = options.refreshToken;\n                revokeAccessToken = options.revokeAccessToken !== false;\n                revokeRefreshToken = options.revokeRefreshToken !== false;\n\n                if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n                  refreshToken = this.tokenManager.getTokensSync().refreshToken;\n                }\n\n                if (revokeAccessToken && typeof accessToken === 'undefined') {\n                  accessToken = this.tokenManager.getTokensSync().accessToken;\n                }\n\n                if (!options.idToken) {\n                  options.idToken = this.tokenManager.getTokensSync().idToken;\n                }\n\n                if (!(revokeRefreshToken && refreshToken)) {\n                  _context9.next = 14;\n                  break;\n                }\n\n                _context9.next = 14;\n                return this.revokeRefreshToken(refreshToken);\n\n              case 14:\n                if (!(revokeAccessToken && accessToken)) {\n                  _context9.next = 17;\n                  break;\n                }\n\n                _context9.next = 17;\n                return this.revokeAccessToken(accessToken);\n\n              case 17:\n                logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n                  postLogoutRedirectUri: postLogoutRedirectUri\n                }));\n\n                if (logoutUri) {\n                  _context9.next = 22;\n                  break;\n                }\n\n                return _context9.abrupt(\"return\", this.closeSession().then(function () {\n                  if (postLogoutRedirectUri === currentUri) {\n                    window.location.reload();\n                  } else {\n                    window.location.assign(postLogoutRedirectUri);\n                  }\n                }));\n\n              case 22:\n                if (options.clearTokensBeforeRedirect) {\n                  this.tokenManager.clear();\n                } else {\n                  this.tokenManager.addPendingRemoveFlags();\n                }\n\n                window.location.assign(logoutUri);\n\n              case 24:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function signOut(_x5) {\n        return _signOut.apply(this, arguments);\n      }\n\n      return signOut;\n    }()\n  }, {\n    key: \"webfinger\",\n    value: function webfinger(opts) {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function () {\n      var _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var options,\n            _this$tokenManager$ge,\n            autoRenew,\n            autoRemove,\n            shouldRenew,\n            shouldRemove,\n            _this$tokenManager$ge2,\n            accessToken,\n            _this$tokenManager$ge3,\n            idToken,\n            _args10 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                options = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};\n                _this$tokenManager$ge = this.tokenManager.getOptions(), autoRenew = _this$tokenManager$ge.autoRenew, autoRemove = _this$tokenManager$ge.autoRemove;\n                shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n                shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n                _this$tokenManager$ge2 = this.tokenManager.getTokensSync(), accessToken = _this$tokenManager$ge2.accessToken;\n\n                if (!(accessToken && this.tokenManager.hasExpired(accessToken))) {\n                  _context10.next = 19;\n                  break;\n                }\n\n                accessToken = undefined;\n\n                if (!shouldRenew) {\n                  _context10.next = 18;\n                  break;\n                }\n\n                _context10.prev = 8;\n                _context10.next = 11;\n                return this.tokenManager.renew('accessToken');\n\n              case 11:\n                accessToken = _context10.sent;\n                _context10.next = 16;\n                break;\n\n              case 14:\n                _context10.prev = 14;\n                _context10.t0 = _context10[\"catch\"](8);\n\n              case 16:\n                _context10.next = 19;\n                break;\n\n              case 18:\n                if (shouldRemove) {\n                  this.tokenManager.remove('accessToken');\n                }\n\n              case 19:\n                _this$tokenManager$ge3 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge3.idToken;\n\n                if (!(idToken && this.tokenManager.hasExpired(idToken))) {\n                  _context10.next = 34;\n                  break;\n                }\n\n                idToken = undefined;\n\n                if (!shouldRenew) {\n                  _context10.next = 33;\n                  break;\n                }\n\n                _context10.prev = 23;\n                _context10.next = 26;\n                return this.tokenManager.renew('idToken');\n\n              case 26:\n                idToken = _context10.sent;\n                _context10.next = 31;\n                break;\n\n              case 29:\n                _context10.prev = 29;\n                _context10.t1 = _context10[\"catch\"](23);\n\n              case 31:\n                _context10.next = 34;\n                break;\n\n              case 33:\n                if (shouldRemove) {\n                  this.tokenManager.remove('idToken');\n                }\n\n              case 34:\n                return _context10.abrupt(\"return\", !!(accessToken && idToken));\n\n              case 35:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[8, 14], [23, 29]]);\n      }));\n\n      function isAuthenticated() {\n        return _isAuthenticated.apply(this, arguments);\n      }\n\n      return isAuthenticated;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _this$tokenManager$ge4, idToken, accessToken;\n\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _this$tokenManager$ge4 = this.tokenManager.getTokensSync(), idToken = _this$tokenManager$ge4.idToken, accessToken = _this$tokenManager$ge4.accessToken;\n                return _context11.abrupt(\"return\", this.token.getUserInfo(accessToken, idToken));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var _this$tokenManager$ge5 = this.tokenManager.getTokensSync(),\n          idToken = _this$tokenManager$ge5.idToken;\n\n      return idToken ? idToken.idToken : undefined;\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var _this$tokenManager$ge6 = this.tokenManager.getTokensSync(),\n          accessToken = _this$tokenManager$ge6.accessToken;\n\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      var _this$tokenManager$ge7 = this.tokenManager.getTokensSync(),\n          refreshToken = _this$tokenManager$ge7.refreshToken;\n\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n  }, {\n    key: \"storeTokensFromRedirect\",\n    value: function () {\n      var _storeTokensFromRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var _yield$this$token$par, tokens;\n\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.token.parseFromUrl();\n\n              case 2:\n                _yield$this$token$par = _context12.sent;\n                tokens = _yield$this$token$par.tokens;\n                this.tokenManager.setTokens(tokens);\n\n              case 5:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function storeTokensFromRedirect() {\n        return _storeTokensFromRedirect.apply(this, arguments);\n      }\n\n      return storeTokensFromRedirect;\n    }()\n  }, {\n    key: \"setOriginalUri\",\n    value: function setOriginalUri(originalUri, state) {\n      var sessionStorage = storageUtil.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  }, {\n    key: \"getOriginalUri\",\n    value: function getOriginalUri(state) {\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        var originalUri = sharedStorage.getItem(state);\n\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n\n      var storage = storageUtil.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  }, {\n    key: \"removeOriginalUri\",\n    value: function removeOriginalUri(state) {\n      var storage = storageUtil.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n      state = state || this.options.state;\n\n      if (state) {\n        var sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  }, {\n    key: \"isLoginRedirect\",\n    value: function isLoginRedirect() {\n      return _isLoginRedirect(this);\n    }\n  }, {\n    key: \"handleLoginRedirect\",\n    value: function () {\n      var _handleLoginRedirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(tokens, originalUri) {\n        var state, oAuthResponse, restoreOriginalUri;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                state = this.options.state;\n\n                if (!tokens) {\n                  _context13.next = 6;\n                  break;\n                }\n\n                this.tokenManager.setTokens(tokens);\n                originalUri = originalUri || this.getOriginalUri(this.options.state);\n                _context13.next = 25;\n                break;\n\n              case 6:\n                if (!this.isLoginRedirect()) {\n                  _context13.next = 24;\n                  break;\n                }\n\n                _context13.prev = 7;\n                _context13.next = 10;\n                return parseOAuthResponseFromUrl(this, {});\n\n              case 10:\n                oAuthResponse = _context13.sent;\n                state = oAuthResponse.state;\n                originalUri = originalUri || this.getOriginalUri(state);\n                _context13.next = 15;\n                return this.storeTokensFromRedirect();\n\n              case 15:\n                _context13.next = 22;\n                break;\n\n              case 17:\n                _context13.prev = 17;\n                _context13.t0 = _context13[\"catch\"](7);\n                _context13.next = 21;\n                return this.authStateManager.updateAuthState();\n\n              case 21:\n                throw _context13.t0;\n\n              case 22:\n                _context13.next = 25;\n                break;\n\n              case 24:\n                return _context13.abrupt(\"return\");\n\n              case 25:\n                _context13.next = 27;\n                return this.authStateManager.updateAuthState();\n\n              case 27:\n                this.removeOriginalUri(state);\n                restoreOriginalUri = this.options.restoreOriginalUri;\n\n                if (!restoreOriginalUri) {\n                  _context13.next = 34;\n                  break;\n                }\n\n                _context13.next = 32;\n                return restoreOriginalUri(this, originalUri);\n\n              case 32:\n                _context13.next = 35;\n                break;\n\n              case 34:\n                if (originalUri) {\n                  window.location.replace(originalUri);\n                }\n\n              case 35:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[7, 17]]);\n      }));\n\n      function handleLoginRedirect(_x6, _x7) {\n        return _handleLoginRedirect.apply(this, arguments);\n      }\n\n      return handleLoginRedirect;\n    }()\n  }, {\n    key: \"isPKCE\",\n    value: function isPKCE() {\n      return !!this.options.pkce;\n    }\n  }, {\n    key: \"hasResponseType\",\n    value: function hasResponseType(responseType) {\n      var hasResponseType = false;\n\n      if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n        hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n      } else {\n        hasResponseType = this.options.responseType === responseType;\n      }\n\n      return hasResponseType;\n    }\n  }, {\n    key: \"isAuthorizationCodeFlow\",\n    value: function isAuthorizationCodeFlow() {\n      return this.hasResponseType('code');\n    }\n  }, {\n    key: \"getIssuerOrigin\",\n    value: function getIssuerOrigin() {\n      return this.options.issuer.split('/oauth2/')[0];\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword(opts) {\n      return _postToTransaction2(this, '/api/v1/authn/recovery/password', opts);\n    }\n  }, {\n    key: \"unlockAccount\",\n    value: function unlockAccount(opts) {\n      return _postToTransaction2(this, '/api/v1/authn/recovery/unlock', opts);\n    }\n  }, {\n    key: \"verifyRecoveryToken\",\n    value: function verifyRecoveryToken(opts) {\n      return _postToTransaction2(this, '/api/v1/authn/recovery/token', opts);\n    }\n  }, {\n    key: \"invokeApiMethod\",\n    value: function () {\n      var _invokeApiMethod = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(options) {\n        var accessToken;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (options.accessToken) {\n                  _context14.next = 5;\n                  break;\n                }\n\n                _context14.next = 3;\n                return this.tokenManager.getTokens();\n\n              case 3:\n                accessToken = _context14.sent.accessToken;\n                options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n\n              case 5:\n                return _context14.abrupt(\"return\", httpRequest(this, options));\n\n              case 6:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function invokeApiMethod(_x8) {\n        return _invokeApiMethod.apply(this, arguments);\n      }\n\n      return invokeApiMethod;\n    }()\n  }]);\n\n  return OktaAuth;\n}();\n\nOktaAuth.features = features;\nOktaAuth.crypto = index;\nOktaAuth.webauthn = webauthn;\nOktaAuth.features = OktaAuth.prototype.features = features;\nObject.assign(OktaAuth, {\n  constants: constants\n});\nexport { OktaAuth as default };","map":{"version":3,"mappings":"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","names":["OktaAuth","args","features","options","buildOptions","storageManager","StorageManager","cookies","storageUtil","transactionManager","TransactionManager","Object","assign","_oktaUserAgent","OktaUserAgent","tx","status","transactionStatus","bind","resume","resumeTransaction","exists","transactionExists","_get","name","storage","get","introspect","introspectAuthn","createTransaction","res","AuthTransaction","postToTransaction","url","pkce","DEFAULT_CODE_CHALLENGE_METHOD","PKCE","generateVerifier","computeChallenge","getPKCEStorage","getLegacyPKCEStorage","getHttpCache","_pending","handleLogin","isBrowser","redirectUri","toAbsoluteUrl","window","location","origin","maxClockSkew","DEFAULT_MAX_CLOCK_SKEW","ignoreLifetime","session","close","closeSession","sessionExists","getSession","refresh","refreshSession","setCookieAndRedirect","_tokenQueue","PromiseQueue","useQueue","method","prototype","push","getWithRedirectFn","getWithRedirect","getWithRedirectApi","_setLocation","setLocation","parseFromUrlFn","parseFromUrl","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","document","token","prepareTokenParams","exchangeCodeForTokens","getWithoutPrompt","getWithPopup","decode","decodeToken","revoke","revokeToken","renew","renewToken","renewTokensWithRefresh","renewTokens","getUserInfo","accessTokenObject","idTokenObject","verify","verifyToken","isLoginRedirect","toWrap","forEach","key","boundStartTransaction","startTransaction","idx","interact","makeIdxResponse","makeIdxState","authenticate","register","start","poll","proceed","cancel","recoverPassword","handleInteractionCodeRedirect","isInteractionRequired","isInteractionRequiredError","handleEmailVerifyCallback","isEmailVerifyCallback","parseEmailVerifyCallback","isEmailVerifyCallbackError","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","setFlow","flow","getFlow","canProceed","unlockAccount","http","setRequestHeader","fingerprint","emitter","Emitter","tokenManager","TokenManager","authStateManager","AuthStateManager","hasSharedStorage","services","syncStorage","serviceManager","ServiceManager","updateAuthState","stop","headers","opts","signInWithCredentials","clone","_postToTransaction","sendFingerprint","then","originalUri","additionalParams","__rest","setOriginalUri","params","scopes","clear","catch","e","errorCode","accessToken","getTokens","accessTokenKey","getStorageKeyByType","remove","Promise","resolve","refreshToken","refreshTokenKey","idToken","postLogoutRedirectUri","state","getTokensSync","logoutUrl","getOAuthUrls","idTokenHint","logoutUri","encodeURIComponent","defaultUri","currentUri","href","revokeAccessToken","revokeRefreshToken","getSignOutRedirectUrl","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","toQueryString","getOptions","autoRenew","autoRemove","shouldRenew","onExpiredToken","shouldRemove","hasExpired","undefined","tokens","setTokens","sessionStorage","browserStorage","getSessionStorage","setItem","REFERRER_PATH_STORAGE_KEY","sharedStorage","getOriginalUriStorage","getItem","removeItem","getOriginalUri","parseOAuthResponseFromUrl","oAuthResponse","storeTokensFromRedirect","removeOriginalUri","restoreOriginalUri","replace","responseType","hasResponseType","Array","isArray","length","indexOf","issuer","split","httpRequest","crypto","webauthn","constants"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\OktaAuth.ts"],"sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  CustomUserClaims,\n  RequestData,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction,\n  TransactionState\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI = features;\n  static crypto: CryptoAPI = crypto;\n  static webauthn: WebauthnAPI = webauthn;\n  features: FeaturesAPI = features;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this),\n      createTransaction: (res?: TransactionState) => {\n        return new AuthTransaction(this, res);\n      },\n      postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n        return postToTransaction(this, url, args, options);\n      }\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil || {}, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        if (options.setLocation) {\n          options.setLocation(url);\n        } else {\n          window.location = url;\n        }\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n        accessTokenObject: AccessToken,\n        idTokenObject: IDToken\n      ): Promise<UserClaims<C>> => {\n        return getUserInfo(this, accessTokenObject, idTokenObject);\n      },\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n    // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n    const toWrap = [\n      'getWithoutPrompt',\n      'getWithPopup',\n      'revoke',\n      'renew',\n      'renewTokensWithRefresh',\n      'renewTokens'\n    ];\n    toWrap.forEach(key => {\n      this.token[key] = useQueue(this.token[key]);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      makeIdxResponse: makeIdxState.bind(null, this),\n      \n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // Enable `syncStorage` only if token storage is shared across tabs (type is `localStorage` or `cookie`)\n    if (!this.tokenManager.hasSharedStorage()) {\n      args.services = { ...args.services, syncStorage: false };\n    }\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  async start() {\n    await this.serviceManager.start();\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      await this.authStateManager.updateAuthState();\n    }\n  }\n\n  async stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    await this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: OAuthResponseType): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to prototype & static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"]},"metadata":{},"sourceType":"module"}