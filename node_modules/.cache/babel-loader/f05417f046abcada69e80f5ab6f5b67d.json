{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass WebauthnVerification extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n    const obj = credentials || values;\n    const {\n      clientData,\n      authenticatorData,\n      signatureData\n    } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      authenticatorData,\n      clientData,\n      signatureData\n    } = values;\n\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n\n    return credentials || {\n      authenticatorData,\n      clientData,\n      signatureData\n    };\n  }\n\n  getInputs() {\n    return [{\n      name: 'authenticatorData',\n      type: 'string',\n      label: 'Authenticator Data',\n      required: true,\n      visible: false\n    }, {\n      name: 'clientData',\n      type: 'string',\n      label: 'Client Data',\n      required: true,\n      visible: false\n    }, {\n      name: 'signatureData',\n      type: 'string',\n      label: 'Signature Data',\n      required: true,\n      visible: false\n    }];\n  }\n\n}\n\nexport { WebauthnVerification };","map":{"version":3,"mappings":";;;;;;;;;;;;;AASM,MAAOA,oBAAP,SAAoCC,aAApC,CAA6E;EACjFC,SAAS,CAACC,MAAD,EAAmC;IAC1C,MAAM;MAAEC;IAAF,IAAkBD,MAAxB;IACA,MAAME,GAAG,GAAGD,WAAW,IAAID,MAA3B;IACA,MAAM;MAAEG,UAAF;MAAcC,iBAAd;MAAiCC;IAAjC,IAAmDH,GAAzD;IACA,OAAO,CAAC,EAAEC,UAAU,IAAIC,iBAAd,IAAmCC,aAArC,CAAR;EACD;;EAEDC,cAAc,CAACN,MAAD,EAAmC;IAC/C,MAAM;MAAEC,WAAF;MAAeG,iBAAf;MAAkCD,UAAlC;MAA8CE;IAA9C,IAAgEL,MAAtE;;IACA,IAAI,CAACC,WAAD,IAAgB,CAACG,iBAAjB,IAAsC,CAACD,UAAvC,IAAqD,CAACE,aAA1D,EAAyE;MACvE;IACD;;IACD,OAAOJ,WAAW,IAAK;MACrBG,iBADqB;MAErBD,UAFqB;MAGrBE;IAHqB,CAAvB;EAKD;;EAEDE,SAAS;IACP,OAAO,CACL;MAAEC,IAAI,EAAE,mBAAR;MAA6BC,IAAI,EAAE,QAAnC;MAA6CC,KAAK,EAAE,oBAApD;MAA0EC,QAAQ,EAAE,IAApF;MAA0FC,OAAO,EAAE;IAAnG,CADK,EAEL;MAAEJ,IAAI,EAAE,YAAR;MAAsBC,IAAI,EAAE,QAA5B;MAAsCC,KAAK,EAAE,aAA7C;MAA4DC,QAAQ,EAAE,IAAtE;MAA4EC,OAAO,EAAE;IAArF,CAFK,EAGL;MAAEJ,IAAI,EAAE,eAAR;MAAyBC,IAAI,EAAE,QAA/B;MAAyCC,KAAK,EAAE,gBAAhD;MAAkEC,QAAQ,EAAE,IAA5E;MAAkFC,OAAO,EAAE;IAA3F,CAHK,CAAP;EAKD;;AA1BgF","names":["WebauthnVerification","Authenticator","canVerify","values","credentials","obj","clientData","authenticatorData","signatureData","mapCredentials","getInputs","name","type","label","required","visible"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\idx\\authenticator\\WebauthnVerification.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}