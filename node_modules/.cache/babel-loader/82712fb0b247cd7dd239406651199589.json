{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nvar EnrollProfile = /*#__PURE__*/function (_Remediator) {\n  _inherits(EnrollProfile, _Remediator);\n\n  var _super = _createSuper(EnrollProfile);\n\n  function EnrollProfile() {\n    _classCallCheck(this, EnrollProfile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EnrollProfile, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var userProfileFromValues = this.getData().userProfile;\n\n      if (!userProfileFromValues) {\n        return false;\n      }\n\n      var userProfileFromRemediation = this.remediation.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'userProfile';\n      });\n      return userProfileFromRemediation.form.value.reduce(function (canRemediate, curr) {\n        if (curr.required) {\n          canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n        }\n\n        return canRemediate;\n      }, true);\n    }\n  }, {\n    key: \"mapUserProfile\",\n    value: function mapUserProfile(_ref2) {\n      var _this = this;\n\n      var profileAttributes = _ref2.form.value;\n      var attributeNames = profileAttributes.map(function (_ref3) {\n        var name = _ref3.name;\n        return name;\n      });\n      var data = attributeNames.reduce(function (attributeValues, attributeName) {\n        return _this.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), _defineProperty({}, attributeName, _this.values[attributeName])) : attributeValues;\n      }, {});\n\n      if (Object.keys(data).length === 0) {\n        return;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"getInputUserProfile\",\n    value: function getInputUserProfile(input) {\n      return _toConsumableArray(input.form.value);\n    }\n  }, {\n    key: \"getErrorMessages\",\n    value: function getErrorMessages(errorRemediation) {\n      return errorRemediation.value[0].form.value.reduce(function (errors, field) {\n        if (field.messages) {\n          errors.push(field.messages.value[0].message);\n        }\n\n        return errors;\n      }, []);\n    }\n  }]);\n\n  return EnrollProfile;\n}(Remediator);\n\nEnrollProfile.remediationName = 'enroll-profile';\nexport { EnrollProfile };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;IAuBaA,a;;;;;;;;;;;;;WAGX,wBAAY;MACV,IAAMC,qBAAqB,GAAG,KAAKC,OAAL,GAAeC,WAA7C;;MACA,IAAI,CAACF,qBAAL,EAA4B;QAC1B,OAAO,KAAP;MACD;;MAED,IAAMG,0BAA0B,GAAG,KAAKC,WAAL,CAAiBC,KAAjB,CAAwBC,IAAxB,CAA6B;QAAA,IAAGC,IAAH,QAAGA,IAAH;QAAA,OAAcA,IAAI,KAAK,aAAvB;MAAA,CAA7B,CAAnC;MACA,OAAOJ,0BAA0B,CAACK,IAA3B,CAAiCH,KAAjC,CAAuCI,MAAvC,CAA8C,UAACC,YAAD,EAAeC,IAAf,EAAuB;QAC1E,IAAIA,IAAI,CAACC,QAAT,EAAmB;UACjBF,YAAY,GAAGA,YAAY,IAAI,CAAC,CAACV,qBAAqB,CAACW,IAAI,CAACJ,IAAN,CAAtD;QACD;;QACD,OAAOG,YAAP;MACD,CALM,EAKJ,IALI,CAAP;IAMD;;;WAED,+BAAmD;MAAA;;MAAA,IAApBG,iBAAoB,SAAnCL,IAAmC,CAA3BH,KAA2B;MACjD,IAAMS,cAAc,GAAGD,iBAAiB,CAACE,GAAlB,CAAsB;QAAA,IAAER,IAAF,SAAEA,IAAF;QAAA,OAAYA,IAAZ;MAAA,CAAtB,CAAvB;MACA,IAAMS,IAAI,GAAGF,cAAc,CAACL,MAAf,CAAsB,UAACQ,eAAD,EAAkBC,aAAlB;QAAA,OACjC,KAAI,CAACC,MAAL,CAAYD,aAAZ,IACGE,sEACFF,aADE,EACc,KAAI,CAACC,MAAL,CAAYD,aAAZ,CADd,EADH,GAGED,eAJ+B;MAAA,CAAtB,EAIS,EAJT,CAAb;;MAKA,IAAIG,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,KAA6B,CAAjC,EAAoC;QAClC;MACD;;MACD,OAAON,IAAP;IACD;;;WAED,6BAAoBO,KAApB,EAAyB;MACvB,0BAAWA,KAAK,CAACf,IAAN,CAAWH,KAAtB;IACD;;;WAED,0BAAiBmB,gBAAjB,EAAiC;MAC/B,OAAOA,gBAAgB,CAACnB,KAAjB,CAAuB,CAAvB,EAA0BG,IAA1B,CAA+BH,KAA/B,CAAqCI,MAArC,CAA4C,UAACgB,MAAD,EAASC,KAAT,EAAkB;QACnE,IAAIA,KAAK,CAACC,QAAV,EAAoB;UAClBF,MAAM,CAACG,IAAP,CAAYF,KAAK,CAACC,QAAN,CAAetB,KAAf,CAAqB,CAArB,EAAwBwB,OAApC;QACD;;QACD,OAAOJ,MAAP;MACD,CALM,EAKJ,EALI,CAAP;IAMD;;;;EA1CgCK,U;;AAC1B/B,aAAe,gBAAf,GAAkB,gBAAlB","names":["EnrollProfile","userProfileFromValues","getData","userProfile","userProfileFromRemediation","remediation","value","find","name","form","reduce","canRemediate","curr","required","profileAttributes","attributeNames","map","data","attributeValues","attributeName","values","Object","keys","length","input","errorRemediation","errors","field","messages","push","message","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\EnrollProfile.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediationValue } from '../types/idx-js';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  canRemediate() {\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}"]},"metadata":{},"sourceType":"module"}