{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { post } from '../http/request.js';\nimport { delay } from '../util/misc.js';\nimport { getLink } from '../util/object.js';\nimport { isNumber, isObject } from '../util/types.js';\nimport { toQueryString } from '../util/url.js';\nimport { DEFAULT_POLLING_DELAY } from '../constants.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport AuthPollStopError from '../errors/AuthPollStopError.js';\nimport { getStateToken } from './util.js';\n\nfunction getPollFn(sdk, res, ref) {\n  return function (options) {\n    var delay$1;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay$1 = options;\n    } else if (isObject(options)) {\n      options = options;\n      delay$1 = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay$1 && delay$1 !== 0) {\n      delay$1 = DEFAULT_POLLING_DELAY;\n    }\n\n    var pollLink = getLink(res, 'next', 'poll');\n\n    function pollFn() {\n      var opts = {};\n\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        } catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      } else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        } catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      } else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n    var retryCount = 0;\n\n    var recursivePoll = function () {\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n\n      return pollFn().then(function (pollRes) {\n        retryCount = 0;\n\n        if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n          if (!ref.isPolling) {\n            throw new AuthPollStopError();\n          }\n\n          if (typeof transactionCallBack === 'function') {\n            transactionCallBack(pollRes);\n          }\n\n          return delay(delay$1).then(recursivePoll);\n        } else {\n          ref.isPolling = false;\n          return sdk.tx.createTransaction(pollRes);\n        }\n      }).catch(function (err) {\n        if (err.xhr && (err.xhr.status === 0 || err.xhr.status === 429) && retryCount <= 4) {\n          var delayLength = Math.pow(2, retryCount) * 1000;\n          retryCount++;\n          return delay(delayLength).then(recursivePoll);\n        }\n\n        throw err;\n      });\n    };\n\n    return recursivePoll().catch(function (err) {\n      ref.isPolling = false;\n      throw err;\n    });\n  };\n}\n\nexport { getPollFn };","map":{"version":3,"mappings":"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","names":["getPollFn","sdk","res","ref","options","delay","rememberDevice","autoPush","transactionCallBack","isNumber","isObject","DEFAULT_POLLING_DELAY","pollLink","getLink","pollFn","opts","e","Promise","reject","AuthSdkError","undefined","href","toQueryString","post","getStateToken","saveAuthnState","withCredentials","isPolling","retryCount","recursivePoll","AuthPollStopError","then","pollRes","factorResult","delayFn","tx","createTransaction","catch","err","xhr","status","delayLength","Math","pow"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\tx\\poll.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../util';\nimport { DEFAULT_POLLING_DELAY } from '../constants';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport AuthPollStopError from '../errors/AuthPollStopError';\nimport { TransactionState } from './TransactionState';\nimport { getStateToken } from './util';\n\nexport interface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (TransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: TransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}