{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport CustomError from '../errors/CustomError.js';\nimport { urlParamsToObject } from '../oidc/util/urlParams.js';\n\nvar EmailVerifyCallbackError = /*#__PURE__*/function (_CustomError) {\n  _inherits(EmailVerifyCallbackError, _CustomError);\n\n  var _super = _createSuper(EmailVerifyCallbackError);\n\n  function EmailVerifyCallbackError(state, otp) {\n    var _this;\n\n    _classCallCheck(this, EmailVerifyCallbackError);\n\n    _this = _super.call(this, \"Enter the OTP code in the originating client: \".concat(otp));\n    _this.name = 'EmailVerifyCallbackError';\n    _this.state = state;\n    _this.otp = otp;\n    return _this;\n  }\n\n  return _createClass(EmailVerifyCallbackError);\n}(CustomError);\n\nfunction isEmailVerifyCallbackError(error) {\n  return error.name === 'EmailVerifyCallbackError';\n}\n\nfunction isEmailVerifyCallback(urlPath) {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\nfunction parseEmailVerifyCallback(urlPath) {\n  return urlParamsToObject(urlPath);\n}\n\nfunction handleEmailVerifyCallback(_x, _x2) {\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nfunction _handleEmailVerifyCallback() {\n  _handleEmailVerifyCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient, search) {\n    var _parseEmailVerifyCall, state, otp;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isEmailVerifyCallback(search)) {\n              _context.next = 9;\n              break;\n            }\n\n            _parseEmailVerifyCall = parseEmailVerifyCallback(search), state = _parseEmailVerifyCall.state, otp = _parseEmailVerifyCall.otp;\n\n            if (!authClient.idx.canProceed({\n              state: state\n            })) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 5;\n            return authClient.idx.proceed({\n              state: state,\n              otp: otp\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            throw new EmailVerifyCallbackError(state, otp);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleEmailVerifyCallback.apply(this, arguments);\n}\n\nexport { EmailVerifyCallbackError, handleEmailVerifyCallback, isEmailVerifyCallback, isEmailVerifyCallbackError, parseEmailVerifyCallback };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;IAuBaA,wB;;;;;EAIX,kCAAYC,KAAZ,EAA2BC,GAA3B,EAAsC;IAAA;;IAAA;;IACpC,kFAAuDA,GAAvD;IACA,MAAKC,IAAL,GAAY,0BAAZ;IACA,MAAKF,KAAL,GAAaA,KAAb;IACA,MAAKC,GAAL,GAAWA,GAAX;IAJoC;EAKrC;;;EAT2CE,W;;AAYxC,SAAUC,0BAAV,CAAqCC,KAArC,EAAiD;EACrD,OAAQA,KAAK,CAACH,IAAN,KAAe,0BAAvB;AACD;;AAGK,SAAUI,qBAAV,CAAiCC,OAAjC,EAAgD;EACpD,OAAO,UAAUC,IAAV,CAAeD,OAAf,KAA2B,YAAYC,IAAZ,CAAiBD,OAAjB,CAAlC;AACD;;AAGK,SAAUE,wBAAV,CAAmCF,OAAnC,EAAkD;EACtD,OAAOG,iBAAiB,CAACH,OAAD,CAAxB;AACD;;SAEqBI,yB;;;;;0FAAf,iBAAyCC,UAAzC,EAA2EC,MAA3E;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,KACDP,qBAAqB,CAACO,MAAD,CADpB;cAAA;cAAA;YAAA;;YAAA,wBAEoBJ,wBAAwB,CAACI,MAAD,CAF5C,EAEKb,KAFL,yBAEKA,KAFL,EAEYC,GAFZ,yBAEYA,GAFZ;;YAAA,KAGCW,UAAU,CAACE,GAAX,CAAeC,UAAf,CAA0B;cAAEf,KAAK,EAALA;YAAF,CAA1B,CAHD;cAAA;cAAA;YAAA;;YAAA;YAAA,OAKYY,UAAU,CAACE,GAAX,CAAeE,OAAf,CAAuB;cAAEhB,KAAK,EAALA,KAAF;cAASC,GAAG,EAAHA;YAAT,CAAvB,CALZ;;UAAA;YAAA;;UAAA;YAAA,MAQK,IAAIF,wBAAJ,CAA6BC,KAA7B,EAAoCC,GAApC,CARL;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["EmailVerifyCallbackError","state","otp","name","CustomError","isEmailVerifyCallbackError","error","isEmailVerifyCallback","urlPath","test","parseEmailVerifyCallback","urlParamsToObject","handleEmailVerifyCallback","authClient","search","idx","canProceed","proceed"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\emailVerify.ts"],"sourcesContent":["\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from '../types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}