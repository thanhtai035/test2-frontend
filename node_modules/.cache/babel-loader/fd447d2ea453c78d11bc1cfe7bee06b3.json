{"ast":null,"code":"import _defineProperty from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\n\nvar SelectEnrollmentChannel = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectEnrollmentChannel, _Remediator);\n\n  var _super = _createSuper(SelectEnrollmentChannel);\n\n  function SelectEnrollmentChannel() {\n    _classCallCheck(this, SelectEnrollmentChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectEnrollmentChannel, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (this.values.channel) {\n        return true;\n      }\n\n      if (this.values.authenticator) {\n        var _this$values$authenti = this.values.authenticator,\n            id = _this$values$authenti.id,\n            channel = _this$values$authenti.channel;\n\n        if (!!id && !!channel) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient, context) {\n      var common = _get(_getPrototypeOf(SelectEnrollmentChannel.prototype), \"getNextStep\", this).call(this, authClient, context);\n\n      var options = this.getChannels();\n      var authenticator = context.currentAuthenticator.value;\n      return Object.assign(Object.assign(Object.assign({}, common), options && {\n        options: options\n      }), {\n        authenticator: authenticator\n      });\n    }\n  }, {\n    key: \"getChannels\",\n    value: function getChannels() {\n      var _a;\n\n      var authenticator = getAuthenticatorFromRemediation(this.remediation);\n      var remediationValue = authenticator.value;\n      return (_a = remediationValue.form.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'channel';\n      })) === null || _a === void 0 ? void 0 : _a.options;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _a;\n\n      var remediationValue = this.remediation.value[0].value;\n      return {\n        authenticator: {\n          id: remediationValue.form.value[0].value,\n          channel: ((_a = this.values.authenticator) === null || _a === void 0 ? void 0 : _a.channel) || this.values.channel\n        },\n        stateHandle: this.values.stateHandle\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this = this;\n\n      this.values = _get(_getPrototypeOf(SelectEnrollmentChannel.prototype), \"getValuesAfterProceed\", this).call(this);\n      delete this.values.authenticators;\n      var filterKey = this.values.channel ? 'channel' : 'authenticator';\n      var trimmedValues = Object.keys(this.values).filter(function (valueKey) {\n        return valueKey !== filterKey;\n      });\n      return trimmedValues.reduce(function (values, valueKey) {\n        return Object.assign(Object.assign({}, values), _defineProperty({}, valueKey, _this.values[valueKey]));\n      }, {});\n    }\n  }]);\n\n  return SelectEnrollmentChannel;\n}(Remediator);\n\nSelectEnrollmentChannel.remediationName = 'select-enrollment-channel';\nexport { SelectEnrollmentChannel };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;IAwBaA,uB;;;;;;;;;;;;;WAGX,wBAAY;MACV,IAAI,KAAKC,MAAL,CAAYC,OAAhB,EAAyB;QACvB,OAAO,IAAP;MACD;;MAED,IAAI,KAAKD,MAAL,CAAYE,aAAhB,EAA+B;QAC7B,4BAAwB,KAAKF,MAAL,CAAYE,aAApC;QAAA,IAAQC,EAAR,yBAAQA,EAAR;QAAA,IAAYF,OAAZ,yBAAYA,OAAZ;;QACA,IAAI,CAAC,CAACE,EAAF,IAAQ,CAAC,CAACF,OAAd,EAAuB;UACrB,OAAO,IAAP;QACD;MACF;;MAED,OAAO,KAAP;IACD;;;WAED,qBAAYG,UAAZ,EAA8CC,OAA9C,EAAiE;MAC/D,IAAMC,MAAM,4FAAqBF,UAArB,EAAiCC,OAAjC,CAAZ;;MACA,IAAME,OAAO,GAAG,KAAKC,WAAL,EAAhB;MACA,IAAMN,aAAa,GAAGG,OAAO,CAACI,oBAAR,CAA6BC,KAAnD;MACA,OACKC,uDAECJ,OAAO,IAAI;QAAEA,OAAO,EAAPA;MAAF,CAFZ,GAGH;QAAAL,aAAa,EAAbA;MAAA,CAHG,CADL;IAMD;;;WAEO,uBAAW;;;MACjB,IAAMA,aAAa,GAAwBU,+BAA+B,CAAC,KAAKC,WAAN,CAA1E;MACA,IAAMC,gBAAgB,GAAGZ,aAAa,CAACQ,KAAvC;MACA,OAAO,sBAAgB,CAACK,IAAjB,CAAsBL,KAAtB,CAA4BM,IAA5B,CAAiC;QAAA,IAAGC,IAAH,QAAGA,IAAH;QAAA,OAAcA,IAAI,KAAK,SAAvB;MAAA,CAAjC,OAAoE,IAApE,IAAoEC,aAApE,GAAoE,MAApE,GAAoEA,UAA3E;IACD;;;WAED,mBAAO;;;MAEL,IAAMJ,gBAAgB,GAAG,KAAKD,WAAL,CAAkBH,KAAlB,CAAyB,CAAzB,EAA4BA,KAArD;MACA,OAAO;QACLR,aAAa,EAAE;UACbC,EAAE,EAAEW,gBAAgB,CAACC,IAAjB,CAAsBL,KAAtB,CAA4B,CAA5B,EAA+BA,KADtB;UAEbT,OAAO,EAAE,EAACiB,UAAKlB,MAAL,CAAYE,aAAb,MAA4C,IAA5C,IAA4CgB,aAA5C,GAA4C,MAA5C,GAA4CA,GAAEjB,OAA9C,KAAyD,KAAKD,MAAL,CAAYC;QAFjE,CADV;QAKLkB,WAAW,EAAE,KAAKnB,MAAL,CAAYmB;MALpB,CAAP;IAQD;;;WAED,iCAAqB;MAAA;;MACnB,KAAKnB,MAAL;MACA,OAAO,KAAKA,MAAL,CAAYoB,cAAnB;MACA,IAAMC,SAAS,GAAG,KAAKrB,MAAL,CAAYC,OAAZ,GAAsB,SAAtB,GAAkC,eAApD;MACA,IAAIqB,aAAa,GAAGX,MAAM,CAACY,IAAP,CAAY,KAAKvB,MAAjB,EAAyBwB,MAAzB,CAAgC,kBAAQ;QAAA,OAAIC,QAAQ,KAAKJ,SAAjB;MAAA,CAAxC,CAApB;MACA,OAAOC,aAAa,CAACI,MAAd,CAAqB,UAAC1B,MAAD,EAASyB,QAAT;QAAA,OAAsBd,gCAAKX,MAAL,uBAAcyB,QAAd,EAAyB,KAAI,CAACzB,MAAL,CAAYyB,QAAZ,CAAzB,EAAtB;MAAA,CAArB,EAA6F,EAA7F,CAAP;IACD;;;;EAvD0CE,U;;AACpC5B,uBAAe,gBAAf,GAAkB,2BAAlB","names":["SelectEnrollmentChannel","values","channel","authenticator","id","authClient","context","common","options","getChannels","currentAuthenticator","value","Object","getAuthenticatorFromRemediation","remediation","remediationValue","form","find","name","_a","stateHandle","authenticators","filterKey","trimmedValues","keys","filter","valueKey","reduce","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\SelectEnrollmentChannel.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxOption, IdxRemediationValue, IdxContext } from '../types/idx-js';\nimport { Authenticator } from '../types';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { OktaAuthIdxInterface } from '../../types';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const options = this.getChannels();\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      // TODO: remove options field in the next major version - OKTA-491236\n      ...(options && { options }),\n      authenticator,\n    };\n  }\n\n  private getChannels(): IdxOption[] | undefined {\n    const authenticator: IdxRemediationValue = getAuthenticatorFromRemediation(this.remediation);\n    const remediationValue = authenticator.value as IdxRemediationValueForm;\n    return remediationValue.form.value.find(({ name }) => name === 'channel')?.options;\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}