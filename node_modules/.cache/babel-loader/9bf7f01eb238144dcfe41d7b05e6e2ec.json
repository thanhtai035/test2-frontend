{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { BroadcastChannel, createLeaderElection } from 'broadcast-channel';\nimport { isBrowser } from '../features.js';\n\nvar LeaderElectionService = /*#__PURE__*/function () {\n  function LeaderElectionService() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, LeaderElectionService);\n\n    this.started = false;\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  _createClass(LeaderElectionService, [{\n    key: \"onLeaderDuplicate\",\n    value: function onLeaderDuplicate() {}\n  }, {\n    key: \"onLeader\",\n    value: function () {\n      var _onLeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a, _b;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return (_b = (_a = this.options).onLeader) === null || _b === void 0 ? void 0 : _b.call(_a);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onLeader() {\n        return _onLeader.apply(this, arguments);\n      }\n\n      return onLeader;\n    }()\n  }, {\n    key: \"isLeader\",\n    value: function isLeader() {\n      var _a;\n\n      return !!((_a = this.elector) === null || _a === void 0 ? void 0 : _a.isLeader);\n    }\n  }, {\n    key: \"hasLeader\",\n    value: function hasLeader() {\n      var _a;\n\n      return !!((_a = this.elector) === null || _a === void 0 ? void 0 : _a.hasLeader);\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var electionChannelName;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.stop();\n\n              case 2:\n                if (this.canStart()) {\n                  electionChannelName = this.options.electionChannelName;\n                  this.channel = new BroadcastChannel(electionChannelName);\n                  this.elector = createLeaderElection(this.channel);\n                  this.elector.onduplicate = this.onLeaderDuplicate;\n                  this.elector.awaitLeadership().then(this.onLeader);\n                  this.started = true;\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.started) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                if (!this.elector) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 4;\n                return this.elector.die();\n\n              case 4:\n                this.elector = undefined;\n\n              case 5:\n                if (!this.channel) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                this.channel.postInternal = function () {\n                  return Promise.resolve();\n                };\n\n                _context3.next = 9;\n                return this.channel.close();\n\n              case 9:\n                this.channel = undefined;\n\n              case 10:\n                this.started = false;\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"requiresLeadership\",\n    value: function requiresLeadership() {\n      return false;\n    }\n  }, {\n    key: \"isStarted\",\n    value: function isStarted() {\n      return this.started;\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      return isBrowser();\n    }\n  }]);\n\n  return LeaderElectionService;\n}();\n\nexport { LeaderElectionService };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;IA0BaA,qB;EAMX,iCAAwC;IAAA,IAA5BC,OAA4B,uEAAF,EAAE;;IAAA;;IAFhC,KAAOC,OAAP,GAAU,KAAV;IAGN,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;EACD;;;;WAEO,6BAAiB,CACxB;;;;iFAEO;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,iBAAKH,OAAL,EAAaI,QAAb,MAAyB,IAAzB,IAAyBC,aAAzB,GAAyB,MAAzB,GAAyBA,WADzB;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAIR,oBAAQ;;;MACN,OAAO,CAAC,EAAC,WAAKC,OAAL,MAAY,IAAZ,IAAYC,aAAZ,GAAY,MAAZ,GAAYA,GAAEC,QAAf,CAAR;IACD;;;WAED,qBAAS;;;MACP,OAAO,CAAC,EAAC,WAAKF,OAAL,MAAY,IAAZ,IAAYC,aAAZ,GAAY,MAAZ,GAAYA,GAAEE,SAAf,CAAR;IACD;;;;8EAED;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACQ,KAAKC,IAAL,EADR;;cAAA;gBAEE,IAAI,KAAKC,QAAL,EAAJ,EAAqB;kBACXC,mBADW,GACa,KAAKZ,OADlB,CACXY,mBADW;kBAEnB,KAAKC,OAAL,GAAe,IAAIC,gBAAJ,CAAqBF,mBAArB,CAAf;kBACA,KAAKN,OAAL,GAAeS,oBAAoB,CAAC,KAAKF,OAAN,CAAnC;kBACA,KAAKP,OAAL,CAAaU,WAAb,GAA2B,KAAKd,iBAAhC;kBACA,KAAKI,OAAL,CAAaW,eAAb,GAA+BC,IAA/B,CAAoC,KAAKd,QAAzC;kBACA,KAAKH,OAAL,GAAe,IAAf;gBACD;;cATH;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;6EAYA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACM,KAAKA,OADX;kBAAA;kBAAA;gBAAA;;gBAAA,KAEQ,KAAKK,OAFb;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAGY,KAAKA,OAAL,CAAaa,GAAb,EAHZ;;cAAA;gBAIM,KAAKb,OAAL,GAAec,SAAf;;cAJN;gBAAA,KAMQ,KAAKP,OANb;kBAAA;kBAAA;gBAAA;;gBAQO,KAAKA,OAAL,CAAqBQ,YAArB,GAAoC;kBAAA,OAAMC,OAAO,CAACC,OAAR,EAAN;gBAAA,CAApC;;gBARP;gBAAA,OASY,KAAKV,OAAL,CAAaW,KAAb,EATZ;;cAAA;gBAUM,KAAKX,OAAL,GAAeO,SAAf;;cAVN;gBAYI,KAAKnB,OAAL,GAAe,KAAf;;cAZJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;WAgBA,8BAAkB;MAChB,OAAO,KAAP;IACD;;;WAED,qBAAS;MACP,OAAO,KAAKA,OAAZ;IACD;;;WAED,oBAAQ;MACN,OAAOwB,SAAS,EAAhB;IACD","names":["LeaderElectionService","options","started","onLeaderDuplicate","bind","onLeader","_b","elector","_a","isLeader","hasLeader","stop","canStart","electionChannelName","channel","BroadcastChannel","createLeaderElection","onduplicate","awaitLeadership","then","die","undefined","postInternal","Promise","resolve","close","isBrowser"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\services\\LeaderElectionService.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    await this.stop();\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}