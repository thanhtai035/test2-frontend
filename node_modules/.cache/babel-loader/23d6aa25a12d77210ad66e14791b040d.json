{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport BaseTransaction from './Base.js';\n\nclass EmailStatusTransaction extends BaseTransaction {\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n    const {\n      res\n    } = options;\n    const {\n      id,\n      profile,\n      expiresAt,\n      status\n    } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n\n}\n\nexport { EmailStatusTransaction as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAGqB,qCAA+BA,eAA/B,CAA8C;EAMjEC,WAAY,WAAUC,OAAV,EAAiB;IAC3B,MAAMC,QAAN,EAAgBD,OAAhB;IAEA,MAAM;MAAEE;IAAF,IAAUF,OAAhB;IAEA,MAAM;MAAEG,EAAF;MAAMC,OAAN;MAAeC,SAAf;MAA0BC;IAA1B,IAAqCJ,GAA3C;IACA,KAAKC,EAAL,GAAUA,EAAV;IACA,KAAKE,SAAL,GAAiBA,SAAjB;IACA,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKE,MAAL,GAAcA,MAAd;EACD;;AAhBgE","names":["BaseTransaction","constructor","options","oktaAuth","res","id","profile","expiresAt","status"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2-s3760615\\node_modules\\@okta\\lib\\myaccount\\transactions\\EmailStatusTransaction.ts"],"sourcesContent":["import { EmailProfile, Status } from '../types';\nimport BaseTransaction from './Base';\n\nexport default class EmailStatusTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res } = options;\n    // assign required fields from res\n    const { id, profile, expiresAt, status } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}