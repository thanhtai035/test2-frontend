{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AuthenticatorKey } from './types/api.js';\nimport '../myaccount/types.js';\nimport { run } from './run.js';\n\nfunction authenticate(_x) {\n  return _authenticate.apply(this, arguments);\n}\n\nfunction _authenticate() {\n  _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authClient) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (options.password && !options.authenticator) {\n              options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n            }\n\n            return _context.abrupt(\"return\", run(authClient, Object.assign(Object.assign({}, options), {\n              flow: 'authenticate'\n            })));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _authenticate.apply(this, arguments);\n}\n\nexport { authenticate };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;SAqBsBA,Y;;;;;6EAAf,iBACLC,UADK;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;YAC6BC,OAD7B,2DAC8D,EAD9D;;YAGL,IAAIA,OAAO,CAACC,QAAR,IAAoB,CAACD,OAAO,CAACE,aAAjC,EAAgD;cAC9CF,OAAO,CAACE,aAAR,GAAwBC,gBAAgB,CAACC,aAAzC;YACD;;YALI,iCAMEC,GAAG,CAACN,UAAD,EACLO,0CAAO;cACVC,IAAI,EAAE;YADI,CAAP,CADK,CANL;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["authenticate","authClient","options","password","authenticator","AuthenticatorKey","OKTA_PASSWORD","run","Object","flow"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\authenticate.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from '../types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n"]},"metadata":{},"sourceType":"module"}