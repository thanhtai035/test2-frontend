{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\n\nvar SelectAuthenticatorUnlockAccount = /*#__PURE__*/function (_SelectAuthenticator) {\n  _inherits(SelectAuthenticatorUnlockAccount, _SelectAuthenticator);\n\n  var _super = _createSuper(SelectAuthenticatorUnlockAccount);\n\n  function SelectAuthenticatorUnlockAccount() {\n    var _this;\n\n    _classCallCheck(this, SelectAuthenticatorUnlockAccount);\n\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      identifier: ['username']\n    };\n    return _this;\n  }\n\n  _createClass(SelectAuthenticatorUnlockAccount, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var identifier = this.getData('identifier');\n      return !!identifier && _get(_getPrototypeOf(SelectAuthenticatorUnlockAccount.prototype), \"canRemediate\", this).call(this);\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _a, _b, _c;\n\n      var authenticatorMap = _get(_getPrototypeOf(SelectAuthenticatorUnlockAccount.prototype), \"mapAuthenticator\", this).call(this, remediationValue);\n\n      var methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'methodType';\n      });\n      var methodTypeValue = this.values.methodType || (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n\n      if (methodTypeValue) {\n        return Object.assign(Object.assign({}, authenticatorMap), {\n          methodType: methodTypeValue\n        });\n      }\n\n      return authenticatorMap;\n    }\n  }, {\n    key: \"getInputUsername\",\n    value: function getInputUsername() {\n      return {\n        name: 'username',\n        type: 'string'\n      };\n    }\n  }]);\n\n  return SelectAuthenticatorUnlockAccount;\n}(SelectAuthenticator);\n\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\nexport { SelectAuthenticatorUnlockAccount };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;IAuBaA,gC;;;;;EAAb;IAAA;;IAAA;;;IAIE,YAAM;MACJC,UAAU,EAAE,CAAC,UAAD;IADR,CAAN;IAJF;EAqCC;;;;WA7BC,wBAAY;MACV,IAAMA,UAAU,GAAG,KAAKC,OAAL,CAAa,YAAb,CAAnB;MACA,OAAO,CAAC,CAACD,UAAF,sGAAP;IACD;;;WAED,0BAAiBE,gBAAjB,EAAsD;;;MACpD,IAAMC,gBAAgB,0GAA0BD,gBAA1B,CAAtB;;MACA,IAAME,gBAAgB,GAAG,WAAKC,cAAL,MAAmB,IAAnB,IAAmBC,aAAnB,GAAmB,MAAnB,GAAmBA,GAAEC,KAAF,CAAQC,IAAR,CAAaD,KAAb,CAAmBE,IAAnB,CAAwB;QAAA,IAAGC,IAAH,QAAGA,IAAH;QAAA,OAAcA,IAAI,KAAK,YAAvB;MAAA,CAAxB,CAA5C;MAKA,IAAMC,eAAe,GAAG,KAAKC,MAAL,CAAYC,UAAZ,KACtBT,gBAAgB,SAAhB,oBAAgB,KAAhB,kCAAgB,CAAEG,KADI,MACe,4BAAgB,SAAhB,oBAAgB,WAAhB,GAAgB,MAAhB,mBAAgB,CAAEO,OAAlB,MAAyB,IAAzB,IAAyBC,aAAzB,GAAyB,MAAzB,GAAyBA,GAAG,CAAH,CAAzB,MAA8B,IAA9B,IAA8BC,aAA9B,GAA8B,MAA9B,GAA8BA,GAAET,KAD/C,CAAxB;;MAGA,IAAII,eAAJ,EAAqB;QACnB,uCACKR,gBADL,GACqB;UACnBU,UAAU,EAAEF;QADO,CADrB;MAID;;MAED,OAAOR,gBAAP;IACD;;;WAED,4BAAgB;MACd,OAAO;QAAEO,IAAI,EAAE,UAAR;QAAoBO,IAAI,EAAE;MAA1B,CAAP;IACD;;;;EAnCmDC,mB;;AAC7CnB,gCAAe,gBAAf,GAAkB,qCAAlB","names":["SelectAuthenticatorUnlockAccount","identifier","getData","remediationValue","authenticatorMap","methodTypeOption","selectedOption","_a","value","form","find","name","methodTypeValue","values","methodType","options","_b","_c","type","SelectAuthenticator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\SelectAuthenticatorUnlockAccount.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}