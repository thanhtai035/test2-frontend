{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { __rest } from '../../../_virtual/_tslib.js';\nimport { Remediator } from '../Base/Remediator.js';\nimport { unwrapFormValue } from './util.js';\n\nvar GenericRemediator = /*#__PURE__*/function (_Remediator) {\n  _inherits(GenericRemediator, _Remediator);\n\n  var _super = _createSuper(GenericRemediator);\n\n  function GenericRemediator() {\n    _classCallCheck(this, GenericRemediator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GenericRemediator, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      if (typeof this.remediation.action !== 'function') {\n        return false;\n      }\n\n      if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n        return true;\n      }\n\n      if (this.options.step) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this = this;\n\n      var data = this.getInputs().reduce(function (acc, _ref) {\n        var name = _ref.name;\n        acc[name] = _this.values[name];\n        return acc;\n      }, {});\n      return data;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient, _context) {\n      var name = this.getName();\n      var inputs = this.getInputs();\n\n      var _a = this.remediation,\n          href = _a.href,\n          method = _a.method,\n          rel = _a.rel,\n          accepts = _a.accepts,\n          produces = _a.produces,\n          value = _a.value,\n          action = _a.action,\n          rest = __rest(_a, [\"href\", \"method\", \"rel\", \"accepts\", \"produces\", \"value\", \"action\"]);\n\n      if (action) {\n        return Object.assign(Object.assign(Object.assign({}, rest), !!inputs.length && {\n          inputs: inputs\n        }), {\n          action: function () {\n            var _action = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n              return _regeneratorRuntime().wrap(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      return _context2.abrupt(\"return\", authClient.idx.proceed(Object.assign({\n                        step: name\n                      }, params)));\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function action(_x) {\n              return _action.apply(this, arguments);\n            }\n\n            return action;\n          }()\n        });\n      }\n\n      return Object.assign({}, this.remediation);\n    }\n  }, {\n    key: \"getInputs\",\n    value: function getInputs() {\n      return (this.remediation.value || []).filter(function (_ref2) {\n        var name = _ref2.name;\n        return name !== 'stateHandle';\n      }).map(unwrapFormValue).map(function (input) {\n        input.type = input.type || 'string';\n        return input;\n      });\n    }\n  }]);\n\n  return GenericRemediator;\n}(Remediator);\n\nexport { GenericRemediator };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;IAKaA,iB;;;;;;;;;;;;;WACX,wBAAY;MAEV,IAAI,OAAO,KAAKC,WAAL,CAAiBC,MAAxB,KAAmC,UAAvC,EAAmD;QACjD,OAAO,KAAP;MACD;;MASD,IAAI,KAAKD,WAAL,CAAiBE,IAAjB,KAA0B,MAA1B,IAAoC,KAAKF,WAAL,CAAiBE,IAAjB,CAAsBC,QAAtB,CAA+B,OAA/B,CAAxC,EAAiF;QAC/E,OAAO,IAAP;MACD;;MAED,IAAI,KAAKC,OAAL,CAAaC,IAAjB,EAAuB;QACrB,OAAO,IAAP;MACD;;MAGD,OAAO,KAAP;IACD;;;WAED,mBAAO;MAAA;;MACL,IAAMC,IAAI,GAAG,KAAKC,SAAL,GAAiBC,MAAjB,CAAwB,UAACC,GAAD,QAAkB;QAAA,IAAVP,IAAU,QAAVA,IAAU;QACrDO,GAAG,CAACP,IAAD,CAAH,GAAY,KAAI,CAACQ,MAAL,CAAYR,IAAZ,CAAZ;QACA,OAAOO,GAAP;MACD,CAHY,EAGV,EAHU,CAAb;MAIA,OAAOH,IAAP;IACD;;;WAED,qBAAYK,UAAZ,EAA8CC,QAA9C,EAAmE;MACjE,IAAMV,IAAI,GAAG,KAAKW,OAAL,EAAb;MACA,IAAMC,MAAM,GAAG,KAAKP,SAAL,EAAf;;MAIM,MAYF,QAAKP,WAZH;MAAA,IAEJe,IAFI,GAUEC,EAVF,CAEJD,IAFI;MAAA,IAGJE,MAHI,GAUED,EAVF,CAGJC,MAHI;MAAA,IAIJC,GAJI,GAUEF,EAVF,CAIJE,GAJI;MAAA,IAKJC,OALI,GAUEH,EAVF,CAKJG,OALI;MAAA,IAMJC,QANI,GAUEJ,EAVF,CAMJI,QANI;MAAA,IAQJC,KARI,GAUEL,EAVF,CAQJK,KARI;MAAA,IAUJpB,MAVI,GAUEe,EAVF,CAUJf,MAVI;MAAA,IAWDqB,IAXC;;MAgBN,IAAIrB,MAAJ,EAAY;QACV,OACKsB,qDACC,CAAC,CAACT,MAAM,CAACU,MAAT,IAAmB;UAAEV,MAAM,EAANA;QAAF,CADpB,GAC8B;UACjCb,MAAM;YAAA,yEAAE,iBAAOwB,MAAP;cAAA;gBAAA;kBAAA;oBAAA;sBAAA,kCACCd,UAAU,CAACe,GAAX,CAAeC,OAAf,CAAsBJ;wBAC3BlB,IAAI,EAAEH;sBADqB,GAExBuB,MAFwB,CAAtB,CADD;;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA;YAAA,CAAF;;YAAA;cAAA;YAAA;;YAAA;UAAA;QAD2B,CAD9B,CADL;MAUD;;MAGD,OAAOF,MAAK,OAAL,CAAK,EAAL,EAAK,KAAKvB,WAAV,CAAP;IAED;;;WAED,qBAAS;MACP,OAAO,CAAC,KAAKA,WAAL,CAAiBqB,KAAjB,IAA0B,EAA3B,EACJO,MADI,CACG;QAAA,IAAG1B,IAAH,SAAGA,IAAH;QAAA,OAAcA,IAAI,KAAK,aAAvB;MAAA,CADH,EAEJ2B,GAFI,CAEAC,eAFA,EAGJD,GAHI,CAGA,eAAK,EAAG;QAEXE,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,IAAc,QAA3B;QACA,OAAOD,KAAP;MACD,CAPI,CAAP;IAQD;;;;EAnFoCE,U","names":["GenericRemediator","remediation","action","name","endsWith","options","step","data","getInputs","reduce","acc","values","authClient","_context","getName","inputs","href","_a","method","rel","accepts","produces","value","rest","Object","length","params","idx","proceed","filter","map","unwrapFormValue","input","type","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\GenericRemediator\\GenericRemediator.ts"],"sourcesContent":["import { IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}