{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { removeNils } from '../util/object.js';\nimport { removeTrailingSlash } from '../util/url.js';\nimport { assertValidConfig } from '../builderUtil.js';\nimport fetchRequest from '../fetch/fetchRequest.js';\nimport { getCookieSettings, getStorage, STORAGE_MANAGER_OPTIONS, enableSharedStorage } from './browser.js';\nimport { isHTTPS } from '../features.js';\n\nfunction getDefaultOptions() {\n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args) {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager)\n  });\n}\n\nfunction buildOptions() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a, _b;\n\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true,\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n    httpRequestClient: args.httpRequestClient,\n    httpRequestInterceptors: args.httpRequestInterceptors,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n    idx: {\n      useGenericRemediator: !!((_a = args.idx) === null || _a === void 0 ? void 0 : _a.useGenericRemediator),\n      exchangeCodeForTokens: ((_b = args.idx) === null || _b === void 0 ? void 0 : _b.exchangeCodeForTokens) !== false\n    },\n    ignoreSignature: !!args.ignoreSignature,\n    clientSecret: args.clientSecret,\n    setLocation: args.setLocation\n  });\n}\n\nexport { buildOptions, getDefaultOptions };","map":{"version":3,"mappings":"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","names":["getDefaultOptions","options","devMode","httpRequestClient","fetchRequest","storageUtil","getStorage","storageManager","STORAGE_MANAGER_OPTIONS","transactionManager","enableSharedStorage","mergeOptions","args","Object","assign","removeNils","assertValidConfig","issuer","removeTrailingSlash","tokenUrl","authorizeUrl","userinfoUrl","revokeUrl","logoutUrl","clientId","redirectUri","state","scopes","postLogoutRedirectUri","responseMode","responseType","pkce","useInteractionCodeFlow","httpRequestInterceptors","transformErrorXHR","transformAuthState","restoreOriginalUri","headers","cookies","getCookieSettings","isHTTPS","flow","codeChallenge","codeChallengeMethod","recoveryToken","activationToken","idx","useGenericRemediator","_a","exchangeCodeForTokens","_b","ignoreSignature","clientSecret","setLocation"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\options\\index.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { removeTrailingSlash, removeNils } from '../util';\nimport { assertValidConfig } from '../builderUtil';\nimport { OktaAuthOptions } from '../types';\n\nimport fetchRequest from '../fetch/fetchRequest';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, enableSharedStorage, getCookieSettings } from './node';\nimport { isHTTPS } from '../features';\n\nexport function getDefaultOptions(): OktaAuthOptions {\n\n  \n  const options = {\n    devMode: false,\n    httpRequestClient: fetchRequest,\n    storageUtil: getStorage(),\n    storageManager: STORAGE_MANAGER_OPTIONS,\n    transactionManager: {\n      enableSharedStorage\n    }\n  };\n  return options;\n}\n\nfunction mergeOptions(options, args): OktaAuthOptions {\n  return Object.assign({}, options, removeNils(args), {\n    storageManager: Object.assign({}, options.storageManager, args.storageManager),\n    transactionManager: Object.assign({}, options.transactionManager, args.transactionManager),\n  });\n}\n\nexport function buildOptions(args: OktaAuthOptions = {}): OktaAuthOptions {\n  assertValidConfig(args);\n  args = mergeOptions(getDefaultOptions(), args);\n  return removeNils({\n    // OIDC configuration\n    issuer: removeTrailingSlash(args.issuer),\n    tokenUrl: removeTrailingSlash(args.tokenUrl),\n    authorizeUrl: removeTrailingSlash(args.authorizeUrl),\n    userinfoUrl: removeTrailingSlash(args.userinfoUrl),\n    revokeUrl: removeTrailingSlash(args.revokeUrl),\n    logoutUrl: removeTrailingSlash(args.logoutUrl),\n    clientId: args.clientId,\n    redirectUri: args.redirectUri,\n    state: args.state,\n    scopes: args.scopes,\n    postLogoutRedirectUri: args.postLogoutRedirectUri,\n    responseMode: args.responseMode,\n    responseType: args.responseType,\n    pkce: args.pkce === false ? false : true, // PKCE defaults to true\n    useInteractionCodeFlow: args.useInteractionCodeFlow,\n\n    // Internal options\n    httpRequestClient: args.httpRequestClient,\n    httpRequestInterceptors: args.httpRequestInterceptors,\n    transformErrorXHR: args.transformErrorXHR,\n    transformAuthState: args.transformAuthState,\n    restoreOriginalUri: args.restoreOriginalUri,\n    storageUtil: args.storageUtil,\n    headers: args.headers,\n    devMode: !!args.devMode,\n    storageManager: args.storageManager,\n    transactionManager: args.transactionManager,\n    cookies: getCookieSettings(args, isHTTPS()),\n    flow: args.flow,\n    codeChallenge: args.codeChallenge,\n    codeChallengeMethod: args.codeChallengeMethod,\n    recoveryToken: args.recoveryToken,\n    activationToken: args.activationToken,\n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator: !!args.idx?.useGenericRemediator, // false by default\n      exchangeCodeForTokens: args.idx?.exchangeCodeForTokens !== false // true by default\n    },\n\n    // Give the developer the ability to disable token signature validation.\n    ignoreSignature: !!args.ignoreSignature,\n\n    // Server-side web applications\n    clientSecret: args.clientSecret,\n    setLocation: args.setLocation\n  });\n}\n"]},"metadata":{},"sourceType":"module"}