{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nclass ReEnrollAuthenticator extends Remediator {\n  mapCredentials() {\n    const {\n      newPassword\n    } = this.values;\n\n    if (!newPassword) {\n      return;\n    }\n\n    return {\n      passcode: newPassword\n    };\n  }\n\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return Object.assign(Object.assign({}, input.form.value[0]), {\n      name\n    });\n  }\n\n}\n\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nexport { ReEnrollAuthenticator };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAmBM,MAAOA,qBAAP,SAAqCC,UAArC,CAA4E;EAGhFC,cAAc;IACZ,MAAM;MAAEC;IAAF,IAAkB,KAAKC,MAA7B;;IACA,IAAI,CAACD,WAAL,EAAkB;MAChB;IACD;;IACD,OAAO;MACLE,QAAQ,EAAEF;IADL,CAAP;EAGD;;EAEDG,mBAAmB,CAACC,KAAD,EAAM;IAEvB,MAAMC,aAAa,GAAG,KAAKC,gBAAL,GAAyBC,IAA/C;IACA,MAAMC,IAAI,GAAGH,aAAa,KAAK,UAAlB,GAA+B,aAA/B,GAA+C,kBAA5D;IACA,OACKI,qCAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB,IACH;MAAAH;IAAA,CADG,CADL;EAID;;AArB+E;;AACzEX,qBAAe,gBAAf,GAAkB,wBAAlB","names":["ReEnrollAuthenticator","Remediator","mapCredentials","newPassword","values","passcode","getInputCredentials","input","challengeType","getAuthenticator","type","name","Object","form","value"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\ReEnrollAuthenticator.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}