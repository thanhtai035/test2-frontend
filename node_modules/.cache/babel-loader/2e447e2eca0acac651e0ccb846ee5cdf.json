{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport AuthSdkError from './errors/AuthSdkError.js';\n\nclass SavedObject {\n  constructor(storage, storageName) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  getItem(key) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key, value) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key) {\n    return this.clearStorage(key);\n  }\n\n  isSharedStorage() {\n    var _a, _b;\n\n    return typeof localStorage !== 'undefined' && this.storageProvider === localStorage || !!((_b = (_a = this.storageProvider).isSharedStorage) === null || _b === void 0 ? void 0 : _b.call(_a));\n  }\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n\n    try {\n      return JSON.parse(storageString);\n    } catch (e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch (e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key) {\n    if (!key) {\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n\n}\n\nexport { SavedObject as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAiBc,MAAOA,WAAP,CAAkB;EAI9BC,WAAY,UAAwBC,WAAxB,EAA2C;IACrD,IAAI,CAACC,OAAL,EAAc;MACZ,MAAM,IAAIC,YAAJ,CAAiB,uBAAjB,CAAN;IACD;;IAED,IAAI,OAAOF,WAAP,KAAuB,QAAvB,IAAmC,CAACA,WAAW,CAACG,MAApD,EAA4D;MAC1D,MAAM,IAAID,YAAJ,CAAiB,2BAAjB,CAAN;IACD;;IAED,KAAKF,WAAL,GAAmBA,WAAnB;IACA,KAAKI,eAAL,GAAuBH,OAAvB;EACD;;EAMDI,OAAO,CAACC,GAAD,EAAY;IACjB,OAAO,KAAKC,UAAL,GAAkBD,GAAlB,CAAP;EACD;;EAEDE,OAAO,CAACF,GAAD,EAAcG,KAAd,EAAwB;IAC7B,OAAO,KAAKC,aAAL,CAAmBJ,GAAnB,EAAwBG,KAAxB,CAAP;EACD;;EAEDE,UAAU,CAACL,GAAD,EAAY;IACpB,OAAO,KAAKM,YAAL,CAAkBN,GAAlB,CAAP;EACD;;EAMDO,eAAe;;;IACb,OAAO,OAAOC,YAAP,KAAwB,WAAxB,IAAuC,KAAKV,eAAL,KAAyBU,YAAhE,IACF,CAAC,EAAC,iBAAKV,eAAL,EAAqBS,eAArB,MAAwC,IAAxC,IAAwCE,aAAxC,GAAwC,MAAxC,GAAwCA,WAAzC,CADN;EAED;;EAEDR,UAAU;IACR,IAAIS,aAAa,GAAG,KAAKZ,eAAL,CAAqBC,OAArB,CAA6B,KAAKL,WAAlC,CAApB;IACAgB,aAAa,GAAGA,aAAa,IAAI,IAAjC;;IACA,IAAI;MACF,OAAOC,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAP;IACD,CAFD,CAEE,OAAMG,CAAN,EAAS;MACT,MAAM,IAAIjB,YAAJ,CAAiB,qCAAqC,KAAKF,WAA3D,CAAN;IACD;EACF;;EAEDoB,UAAU,CAACC,GAAD,EAAU;IAClB,IAAI;MACF,IAAIL,aAAa,GAAGK,GAAG,GAAGJ,IAAI,CAACK,SAAL,CAAeD,GAAf,CAAH,GAAyB,IAAhD;MACA,KAAKjB,eAAL,CAAqBI,OAArB,CAA6B,KAAKR,WAAlC,EAA+CgB,aAA/C;IACD,CAHD,CAGE,OAAMG,CAAN,EAAS;MACT,MAAM,IAAIjB,YAAJ,CAAiB,4BAA4B,KAAKF,WAAlD,CAAN;IACD;EACF;;EAEDY,YAAY,CAACN,GAAD,EAAa;IACvB,IAAI,CAACA,GAAL,EAAU;MAER,IAAI,KAAKF,eAAL,CAAqBO,UAAzB,EAAqC;QACnC,KAAKP,eAAL,CAAqBO,UAArB,CAAgC,KAAKX,WAArC;MACD,CAFD,MAEO;QACL,KAAKoB,UAAL;MACD;;MACD;IACD;;IAED,IAAIC,GAAG,GAAG,KAAKd,UAAL,EAAV;IACA,OAAOc,GAAG,CAACf,GAAD,CAAV;IACA,KAAKc,UAAL,CAAgBC,GAAhB;EACD;;EAEDX,aAAa,CAACJ,GAAD,EAAMG,KAAN,EAAW;IACtB,IAAIY,GAAG,GAAG,KAAKd,UAAL,EAAV;IACAc,GAAG,CAACf,GAAD,CAAH,GAAWG,KAAX;IACA,KAAKW,UAAL,CAAgBC,GAAhB;EACD;;AAjF6B","names":["SavedObject","constructor","storageName","storage","AuthSdkError","length","storageProvider","getItem","key","getStorage","setItem","value","updateStorage","removeItem","clearStorage","isSharedStorage","localStorage","_b","storageString","JSON","parse","e","setStorage","obj","stringify"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2-s3760615\\node_modules\\@okta\\lib\\SavedObject.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from './errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport default class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  isSharedStorage() {\n    return typeof localStorage !== 'undefined' && this.storageProvider === localStorage as any \n      || !!this.storageProvider.isSharedStorage?.();\n  }\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}