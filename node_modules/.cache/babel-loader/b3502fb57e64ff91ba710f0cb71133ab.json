{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { isFunction } from '../util/types.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport OAuthError from '../errors/OAuthError.js';\nimport { httpRequest } from '../http/request.js';\nimport '../idx/types/api.js';\nimport { isAccessToken, isIDToken } from '../types/Token.js';\nimport '../myaccount/types.js';\n\nfunction getUserInfo(_x, _x2, _x3) {\n  return _getUserInfo.apply(this, arguments);\n}\n\nfunction _getUserInfo() {\n  _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(sdk, accessTokenObject, idTokenObject) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (accessTokenObject) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return sdk.tokenManager.getTokens();\n\n          case 3:\n            accessTokenObject = _context.sent.accessToken;\n\n          case 4:\n            if (idTokenObject) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return sdk.tokenManager.getTokens();\n\n          case 7:\n            idTokenObject = _context.sent.idToken;\n\n          case 8:\n            if (!(!accessTokenObject || !isAccessToken(accessTokenObject))) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an access token object')));\n\n          case 10:\n            if (!(!idTokenObject || !isIDToken(idTokenObject))) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.reject(new AuthSdkError('getUserInfo requires an ID token object')));\n\n          case 12:\n            return _context.abrupt(\"return\", httpRequest(sdk, {\n              url: accessTokenObject.userinfoUrl,\n              method: 'GET',\n              accessToken: accessTokenObject.accessToken\n            }).then(function (userInfo) {\n              if (userInfo.sub === idTokenObject.claims.sub) {\n                return userInfo;\n              }\n\n              return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n            }).catch(function (err) {\n              if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n                var authenticateHeader;\n\n                if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n                  authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n                } else if (isFunction(err.xhr.getResponseHeader)) {\n                  authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n                }\n\n                if (authenticateHeader) {\n                  var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n                  var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n                  var error = errorMatches[1];\n                  var errorDescription = errorDescriptionMatches[1];\n\n                  if (error && errorDescription) {\n                    err = new OAuthError(error, errorDescription);\n                  }\n                }\n              }\n\n              throw err;\n            }));\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getUserInfo.apply(this, arguments);\n}\n\nexport { getUserInfo };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;SAkBsBA,W;;;;;4EAAf,iBACLC,GADK,EACAC,iBADA,EAELC,aAFK;IAAA;MAAA;QAAA;UAAA;YAAA,IAKAD,iBALA;cAAA;cAAA;YAAA;;YAAA;YAAA,OAMwBD,GAAG,CAACG,YAAJ,CAAiBC,SAAjB,EANxB;;UAAA;YAMHH,iBANG,iBAMsDI,WANtD;;UAAA;YAAA,IAQAH,aARA;cAAA;cAAA;YAAA;;YAAA;YAAA,OASoBF,GAAG,CAACG,YAAJ,CAAiBC,SAAjB,EATpB;;UAAA;YASHF,aATG,iBASkDI,OATlD;;UAAA;YAAA,MAYD,CAACL,iBAAD,IAAsB,CAACM,aAAa,CAACN,iBAAD,CAZnC;cAAA;cAAA;YAAA;;YAAA,iCAaIO,OAAO,CAACC,MAAR,CAAe,IAAIC,YAAJ,CAAiB,6CAAjB,CAAf,CAbJ;;UAAA;YAAA,MAgBD,CAACR,aAAD,IAAkB,CAACS,SAAS,CAACT,aAAD,CAhB3B;cAAA;cAAA;YAAA;;YAAA,iCAiBIM,OAAO,CAACC,MAAR,CAAe,IAAIC,YAAJ,CAAiB,yCAAjB,CAAf,CAjBJ;;UAAA;YAAA,iCAoBEE,WAAW,CAACZ,GAAD,EAAM;cACtBa,GAAG,EAAEZ,iBAAiB,CAACa,WADD;cAEtBC,MAAM,EAAE,KAFc;cAGtBV,WAAW,EAAEJ,iBAAiB,CAACI;YAHT,CAAN,CAAX,CAKJW,IALI,CAKC,kBAAQ,EAAG;cAEf,IAAIC,QAAQ,CAACC,GAAT,KAAiBhB,aAAa,CAACiB,MAAd,CAAqBD,GAA1C,EAA+C;gBAC7C,OAAOD,QAAP;cACD;;cACD,OAAOT,OAAO,CAACC,MAAR,CAAe,IAAIC,YAAJ,CAAiB,wDAAjB,CAAf,CAAP;YACD,CAXI,EAYJU,KAZI,CAYE,UAAUC,GAAV,EAAa;cAClB,IAAIA,GAAG,CAACC,GAAJ,KAAYD,GAAG,CAACC,GAAJ,CAAQC,MAAR,KAAmB,GAAnB,IAA0BF,GAAG,CAACC,GAAJ,CAAQC,MAAR,KAAmB,GAAzD,CAAJ,EAAmE;gBACjE,IAAIC,kBAAJ;;gBACA,IAAIH,GAAG,CAACC,GAAJ,CAAQG,OAAR,IAAmBC,UAAU,CAACL,GAAG,CAACC,GAAJ,CAAQG,OAAR,CAAgBE,GAAjB,CAA7B,IAAsDN,GAAG,CAACC,GAAJ,CAAQG,OAAR,CAAgBE,GAAhB,CAAoB,kBAApB,CAA1D,EAAmG;kBACjGH,kBAAkB,GAAGH,GAAG,CAACC,GAAJ,CAAQG,OAAR,CAAgBE,GAAhB,CAAoB,kBAApB,CAArB;gBACD,CAFD,MAEO,IAAID,UAAU,CAACL,GAAG,CAACC,GAAJ,CAAQM,iBAAT,CAAd,EAA2C;kBAChDJ,kBAAkB,GAAGH,GAAG,CAACC,GAAJ,CAAQM,iBAAR,CAA0B,kBAA1B,CAArB;gBACD;;gBACD,IAAIJ,kBAAJ,EAAwB;kBACtB,IAAIK,YAAY,GAAGL,kBAAkB,CAACM,KAAnB,CAAyB,eAAzB,KAA6C,EAAhE;kBACA,IAAIC,uBAAuB,GAAGP,kBAAkB,CAACM,KAAnB,CAAyB,2BAAzB,KAAyD,EAAvF;kBACA,IAAIE,KAAK,GAAGH,YAAY,CAAC,CAAD,CAAxB;kBACA,IAAII,gBAAgB,GAAGF,uBAAuB,CAAC,CAAD,CAA9C;;kBACA,IAAIC,KAAK,IAAIC,gBAAb,EAA+B;oBAC7BZ,GAAG,GAAG,IAAIa,UAAJ,CAAeF,KAAf,EAAsBC,gBAAtB,CAAN;kBACD;gBACF;cACF;;cACD,MAAMZ,GAAN;YACD,CA/BI,CApBF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["getUserInfo","sdk","accessTokenObject","idTokenObject","tokenManager","getTokens","accessToken","idToken","isAccessToken","Promise","reject","AuthSdkError","isIDToken","httpRequest","url","userinfoUrl","method","then","userInfo","sub","claims","catch","err","xhr","status","authenticateHeader","headers","isFunction","get","getResponseHeader","errorMatches","match","errorDescriptionMatches","error","errorDescription","OAuthError"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\oidc\\getUserInfo.ts"],"sourcesContent":["/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from '../types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}