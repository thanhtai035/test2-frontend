{"ast":null,"code":"import _slicedToArray from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AutoRenewService } from './services/AutoRenewService.js';\nimport { SyncStorageService } from './services/SyncStorageService.js';\nimport { LeaderElectionService } from './services/LeaderElectionService.js';\nimport { removeNils } from './util/object.js';\nvar AUTO_RENEW = 'autoRenew';\nvar SYNC_STORAGE = 'syncStorage';\nvar LEADER_ELECTION = 'leaderElection';\n\nvar ServiceManager = /*#__PURE__*/function () {\n  function ServiceManager(sdk) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ServiceManager);\n\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    var _sdk$tokenManager$get = sdk.tokenManager.getOptions(),\n        autoRenew = _sdk$tokenManager$get.autoRenew,\n        autoRemove = _sdk$tokenManager$get.autoRemove,\n        syncStorage = _sdk$tokenManager$get.syncStorage;\n\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, ServiceManager.defaultOptions, {\n      autoRenew: autoRenew,\n      autoRemove: autoRemove,\n      syncStorage: syncStorage\n    }, {\n      electionChannelName: \"\".concat(sdk.options.clientId, \"-election\"),\n      syncChannelName: \"\".concat(sdk.options.clientId, \"-sync\")\n    }, removeNils(options));\n    this.started = false;\n    this.services = new Map();\n    ServiceManager.knownServices.forEach(function (name) {\n      var svc = _this.createService(name);\n\n      if (svc) {\n        _this.services.set(name, svc);\n      }\n    });\n  }\n\n  _createClass(ServiceManager, [{\n    key: \"onLeader\",\n    value: function () {\n      var _onLeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.started) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.startServices();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onLeader() {\n        return _onLeader.apply(this, arguments);\n      }\n\n      return onLeader;\n    }()\n  }, {\n    key: \"isLeader\",\n    value: function isLeader() {\n      var _a;\n\n      return (_a = this.getService(LEADER_ELECTION)) === null || _a === void 0 ? void 0 : _a.isLeader();\n    }\n  }, {\n    key: \"isLeaderRequired\",\n    value: function isLeaderRequired() {\n      return _toConsumableArray(this.services.values()).some(function (srv) {\n        return srv.canStart() && srv.requiresLeadership();\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.startServices();\n\n              case 4:\n                this.started = true;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.stopServices();\n\n              case 2:\n                this.started = false;\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"getService\",\n    value: function getService(name) {\n      return this.services.get(name);\n    }\n  }, {\n    key: \"startServices\",\n    value: function () {\n      var _startServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _iterator, _step, _step$value, name, srv;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _iterator = _createForOfIteratorHelper(this.services.entries());\n                _context4.prev = 1;\n\n                _iterator.s();\n\n              case 3:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                _step$value = _slicedToArray(_step.value, 2), name = _step$value[0], srv = _step$value[1];\n\n                if (!this.canStartService(name, srv)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 8;\n                return srv.start();\n\n              case 8:\n                _context4.next = 3;\n                break;\n\n              case 10:\n                _context4.next = 15;\n                break;\n\n              case 12:\n                _context4.prev = 12;\n                _context4.t0 = _context4[\"catch\"](1);\n\n                _iterator.e(_context4.t0);\n\n              case 15:\n                _context4.prev = 15;\n\n                _iterator.f();\n\n                return _context4.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 12, 15, 18]]);\n      }));\n\n      function startServices() {\n        return _startServices.apply(this, arguments);\n      }\n\n      return startServices;\n    }()\n  }, {\n    key: \"stopServices\",\n    value: function () {\n      var _stopServices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _iterator2, _step2, srv;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(this.services.values());\n                _context5.prev = 1;\n\n                _iterator2.s();\n\n              case 3:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                srv = _step2.value;\n                _context5.next = 7;\n                return srv.stop();\n\n              case 7:\n                _context5.next = 3;\n                break;\n\n              case 9:\n                _context5.next = 14;\n                break;\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                _iterator2.e(_context5.t0);\n\n              case 14:\n                _context5.prev = 14;\n\n                _iterator2.f();\n\n                return _context5.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 11, 14, 17]]);\n      }));\n\n      function stopServices() {\n        return _stopServices.apply(this, arguments);\n      }\n\n      return stopServices;\n    }()\n  }, {\n    key: \"canStartService\",\n    value: function canStartService(name, srv) {\n      var canStart = srv.canStart() && !srv.isStarted();\n\n      if (name === LEADER_ELECTION) {\n        canStart && (canStart = this.isLeaderRequired());\n      } else if (srv.requiresLeadership()) {\n        canStart && (canStart = this.isLeader());\n      }\n\n      return canStart;\n    }\n  }, {\n    key: \"createService\",\n    value: function createService(name) {\n      var tokenManager = this.sdk.tokenManager;\n      var service;\n\n      switch (name) {\n        case LEADER_ELECTION:\n          service = new LeaderElectionService(Object.assign(Object.assign({}, this.options), {\n            onLeader: this.onLeader\n          }));\n          break;\n\n        case AUTO_RENEW:\n          service = new AutoRenewService(tokenManager, Object.assign({}, this.options));\n          break;\n\n        case SYNC_STORAGE:\n          service = new SyncStorageService(tokenManager, Object.assign({}, this.options));\n          break;\n\n        default:\n          throw new Error(\"Unknown service \".concat(name));\n      }\n\n      return service;\n    }\n  }]);\n\n  return ServiceManager;\n}();\n\nServiceManager.knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\nServiceManager.defaultOptions = {\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true\n};\nexport { ServiceManager };","map":{"version":3,"mappings":"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","names":["AUTO_RENEW","SYNC_STORAGE","LEADER_ELECTION","ServiceManager","sdk","options","onLeader","bind","tokenManager","getOptions","autoRenew","autoRemove","syncStorage","electionChannelName","broadcastChannelName","Object","assign","defaultOptions","clientId","syncChannelName","removeNils","started","services","Map","knownServices","forEach","svc","createService","name","set","startServices","getService","_a","isLeader","values","some","srv","canStart","requiresLeadership","stopServices","get","entries","canStartService","start","stop","isStarted","isLeaderRequired","service","LeaderElectionService","AutoRenewService","SyncStorageService","Error"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\ServiceManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions\n} from './types';\nimport { OktaAuth } from '.';\nimport { AutoRenewService, SyncStorageService, LeaderElectionService } from './services';\nimport { removeNils } from './util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\n\nexport class ServiceManager implements ServiceManagerInterface {\n  private sdk: OktaAuth;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuth, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}