{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AuthenticatorData } from './Base/AuthenticatorData.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\n\nvar AuthenticatorEnrollmentData = /*#__PURE__*/function (_AuthenticatorData) {\n  _inherits(AuthenticatorEnrollmentData, _AuthenticatorData);\n\n  var _super = _createSuper(AuthenticatorEnrollmentData);\n\n  function AuthenticatorEnrollmentData() {\n    _classCallCheck(this, AuthenticatorEnrollmentData);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthenticatorEnrollmentData, [{\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator() {\n      var authenticatorData = this.getAuthenticatorData();\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      return {\n        id: authenticatorFromRemediation.form.value.find(function (_ref) {\n          var name = _ref.name;\n          return name === 'id';\n        }).value,\n        methodType: authenticatorData.methodType,\n        phoneNumber: authenticatorData.phoneNumber\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator(remediation) {\n      return [{\n        name: 'methodType',\n        type: 'string'\n      }, {\n        name: 'phoneNumber',\n        label: 'Phone Number',\n        type: 'string'\n      }].map(function (item) {\n        var value = remediation.form.value.find(function (val) {\n          return val.name === item.name;\n        });\n        return Object.assign(Object.assign({}, value), item);\n      });\n    }\n  }, {\n    key: \"mapAuthenticatorDataFromValues\",\n    value: function mapAuthenticatorDataFromValues(data) {\n      data = _get(_getPrototypeOf(AuthenticatorEnrollmentData.prototype), \"mapAuthenticatorDataFromValues\", this).call(this, data);\n      var phoneNumber = this.values.phoneNumber;\n\n      if (!data && !phoneNumber) {\n        return;\n      }\n\n      return Object.assign(Object.assign({}, data && data), phoneNumber && {\n        phoneNumber: phoneNumber\n      });\n    }\n  }]);\n\n  return AuthenticatorEnrollmentData;\n}(AuthenticatorData);\n\nAuthenticatorEnrollmentData.remediationName = 'authenticator-enrollment-data';\nexport { AuthenticatorEnrollmentData };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;IAqBaA,2B;;;;;;;;;;;;;WAGX,4BAAgB;MACd,IAAMC,iBAAiB,GAAG,KAAKC,oBAAL,EAA1B;MACA,IAAMC,4BAA4B,GAAGC,+BAA+B,CAAC,KAAKC,WAAN,CAApE;MACA,OAAO;QACLC,EAAE,EAAEH,4BAA4B,CAACI,IAA7B,CAAmCC,KAAnC,CACDC,IADC,CACI;UAAA,IAAGC,IAAH,QAAGA,IAAH;UAAA,OAAcA,IAAI,KAAK,IAAvB;QAAA,CADJ,EACkCF,KAFjC;QAGLG,UAAU,EAAEV,iBAAkB,CAACU,UAH1B;QAILC,WAAW,EAAEX,iBAAkB,CAACW;MAJ3B,CAAP;IAMD;;;WAED,+BAAsBP,WAAtB,EAAiC;MAC/B,OAAO,CACL;QAAEK,IAAI,EAAE,YAAR;QAAsBG,IAAI,EAAE;MAA5B,CADK,EAEL;QAAEH,IAAI,EAAE,aAAR;QAAuBI,KAAK,EAAE,cAA9B;QAA8CD,IAAI,EAAE;MAApD,CAFK,EAGLE,GAHK,CAGD,cAAI,EAAG;QACX,IAAMP,KAAK,GAAGH,WAAW,CAACE,IAAZ,CAAiBC,KAAjB,CAAuBC,IAAvB,CAA4B,aAAG;UAAA,OAAIO,GAAG,CAACN,IAAJ,KAAaO,IAAI,CAACP,IAAtB;QAAA,CAA/B,CAAd;QACA,OAAYQ,wCAAUD,IAAV,CAAZ;MACD,CANM,CAAP;IAOD;;;WAES,wCAA+BE,IAA/B,EAAoC;MAE5CA,IAAI,mHAAwCA,IAAxC,CAAJ;MAEA,IAAQP,WAAR,GAAwB,KAAKQ,MAA7B,CAAQR,WAAR;;MACA,IAAI,CAACO,IAAD,IAAS,CAACP,WAAd,EAA2B;QACzB;MACD;;MAED,uCACMO,IAAI,IAAIA,IADd,GAEMP,WAAW,IAAI;QAAEA,WAAW,EAAXA;MAAF,CAFrB;IAID;;;;EArC8CS,iB;;AACxCrB,2BAAe,gBAAf,GAAkB,+BAAlB","names":["AuthenticatorEnrollmentData","authenticatorData","getAuthenticatorData","authenticatorFromRemediation","getAuthenticatorFromRemediation","remediation","id","form","value","find","name","methodType","phoneNumber","type","label","map","val","item","Object","data","values","AuthenticatorData"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\AuthenticatorEnrollmentData.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}