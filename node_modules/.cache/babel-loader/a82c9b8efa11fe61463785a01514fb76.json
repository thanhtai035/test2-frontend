{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass WebauthnEnrollment extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n    const obj = credentials || values;\n    const {\n      clientData,\n      attestation\n    } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      clientData,\n      attestation\n    } = values;\n\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n\n    return credentials || {\n      clientData,\n      attestation\n    };\n  }\n\n  getInputs() {\n    return [{\n      name: 'clientData',\n      type: 'string',\n      required: true,\n      visible: false,\n      label: 'Client Data'\n    }, {\n      name: 'attestation',\n      type: 'string',\n      required: true,\n      visible: false,\n      label: 'Attestation'\n    }];\n  }\n\n}\n\nexport { WebauthnEnrollment };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAQM,MAAOA,kBAAP,SAAkCC,aAAlC,CAAqE;EACzEC,SAAS,CAACC,MAAD,EAA6B;IACpC,MAAM;MAAEC;IAAF,IAAkBD,MAAxB;IACA,MAAME,GAAG,GAAGD,WAAW,IAAID,MAA3B;IACA,MAAM;MAAEG,UAAF;MAAcC;IAAd,IAA8BF,GAApC;IACA,OAAO,CAAC,EAAEC,UAAU,IAAIC,WAAhB,CAAR;EACD;;EAEDC,cAAc,CAACL,MAAD,EAA6B;IACzC,MAAM;MAAEC,WAAF;MAAeE,UAAf;MAA2BC;IAA3B,IAA2CJ,MAAjD;;IACA,IAAI,CAACC,WAAD,IAAgB,CAACE,UAAjB,IAA+B,CAACC,WAApC,EAAiD;MAC/C;IACD;;IACD,OAAOH,WAAW,IAAK;MACrBE,UADqB;MAErBC;IAFqB,CAAvB;EAID;;EAEDE,SAAS;IACP,OAAO,CACL;MAAEC,IAAI,EAAE,YAAR;MAAsBC,IAAI,EAAE,QAA5B;MAAsCC,QAAQ,EAAE,IAAhD;MAAsDC,OAAO,EAAE,KAA/D;MAAsEC,KAAK,EAAE;IAA7E,CADK,EAEL;MAAEJ,IAAI,EAAE,aAAR;MAAuBC,IAAI,EAAE,QAA7B;MAAuCC,QAAQ,EAAE,IAAjD;MAAuDC,OAAO,EAAE,KAAhE;MAAuEC,KAAK,EAAE;IAA9E,CAFK,CAAP;EAID;;AAxBwE","names":["WebauthnEnrollment","Authenticator","canVerify","values","credentials","obj","clientData","attestation","mapCredentials","getInputs","name","type","required","visible","label"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\idx\\authenticator\\WebauthnEnrollment.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}