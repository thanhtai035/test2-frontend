{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nclass Identify extends Remediator {\n  constructor() {\n    super(...arguments);\n    this.map = {\n      'identifier': ['username']\n    };\n  }\n\n  canRemediate() {\n    const {\n      identifier\n    } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const {\n      credentials,\n      password\n    } = this.values;\n\n    if (!credentials && !password) {\n      return;\n    }\n\n    return credentials || {\n      passcode: password\n    };\n  }\n\n  getInputCredentials(input) {\n    return Object.assign(Object.assign({}, input.form.value[0]), {\n      name: 'password',\n      required: input.required\n    });\n  }\n\n}\n\nIdentify.remediationName = 'identify';\nexport { Identify };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAsBM,MAAOA,QAAP,SAAwBC,UAAxB,CAAkD;EAAxDC;;IAGE,WAAM;MACJ,cAAc,CAAC,UAAD;IADV,CAAN;EAyBD;;EArBCC,YAAY;IACV,MAAM;MAAEC;IAAF,IAAiB,KAAKC,OAAL,EAAvB;IACA,OAAO,CAAC,CAACD,UAAT;EACD;;EAEDE,cAAc;IACZ,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAA4B,KAAKC,MAAvC;;IACA,IAAI,CAACF,WAAD,IAAgB,CAACC,QAArB,EAA+B;MAC7B;IACD;;IACD,OAAOD,WAAW,IAAI;MAAEG,QAAQ,EAAEF;IAAZ,CAAtB;EACD;;EAEDG,mBAAmB,CAACC,KAAD,EAAM;IACvB,uCACKA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB,CADL,GACwB;MACtBC,IAAI,EAAE,UADgB;MAEtBC,QAAQ,EAAEJ,KAAK,CAACI;IAFM,CADxB;EAKD;;AA1BqD;;AAC/ChB,QAAe,gBAAf,GAAkB,UAAlB","names":["Identify","Remediator","constructor","canRemediate","identifier","getData","mapCredentials","credentials","password","values","passcode","getInputCredentials","input","form","value","name","required"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2-s3760615\\node_modules\\@okta\\lib\\idx\\remediators\\Identify.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}