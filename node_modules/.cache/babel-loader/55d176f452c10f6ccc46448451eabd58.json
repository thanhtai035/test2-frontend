{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass OktaPassword extends Authenticator {\n  canVerify(values) {\n    return !!(values.credentials || values.password);\n  }\n\n  mapCredentials(values) {\n    const {\n      credentials,\n      password\n    } = values;\n\n    if (!credentials && !password) {\n      return;\n    }\n\n    return credentials || {\n      passcode: password\n    };\n  }\n\n  getInputs(idxRemediationValue) {\n    var _a;\n\n    return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    });\n  }\n\n}\n\nexport { OktaPassword };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAOM,MAAOA,YAAP,SAA4BC,aAA5B,CAAkE;EACtEC,SAAS,CAACC,MAAD,EAAgC;IACvC,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,QAA/B,CAAR;EACD;;EAEDC,cAAc,CAACH,MAAD,EAAgC;IAC5C,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAA4BF,MAAlC;;IACA,IAAI,CAACC,WAAD,IAAgB,CAACC,QAArB,EAA+B;MAC7B;IACD;;IACD,OAAOD,WAAW,IAAI;MAAEG,QAAQ,EAAEF;IAAZ,CAAtB;EACD;;EAEDG,SAAS,CAACC,mBAAD,EAAoB;;;IAC3B,OACKC,yDAAmB,CAACC,IAApB,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwB,MAAxB,GAAwBA,GAAEC,KAAF,CAAQ,CAAR,CAAxB,GACH;MAAAC,IAAI,EAAE,UAAN;MACAC,IAAI,EAAE,QADN;MAEAC,QAAQ,EAAEP,mBAAmB,CAACO;IAF9B,CADG,CADL;EAMD;;AApBqE","names":["OktaPassword","Authenticator","canVerify","values","credentials","password","mapCredentials","passcode","getInputs","idxRemediationValue","Object","form","_a","value","name","type","required"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2-s3760615\\node_modules\\@okta\\lib\\idx\\authenticator\\OktaPassword.ts"],"sourcesContent":["import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password } = values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}