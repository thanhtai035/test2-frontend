{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Remediator.js';\nimport { getAuthenticatorFromRemediation } from '../util.js';\nimport { isAuthenticator } from '../../types/api.js';\nimport { findMatchedOption, compareAuthenticators } from '../../authenticator/util.js';\n\nvar SelectAuthenticator = /*#__PURE__*/function (_Remediator) {\n  _inherits(SelectAuthenticator, _Remediator);\n\n  var _super = _createSuper(SelectAuthenticator);\n\n  function SelectAuthenticator() {\n    _classCallCheck(this, SelectAuthenticator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectAuthenticator, [{\n    key: \"findMatchedOption\",\n    value: function findMatchedOption(authenticators, options) {\n      var option;\n\n      var _iterator = _createForOfIteratorHelper(authenticators),\n          _step;\n\n      try {\n        var _loop = function _loop() {\n          var authenticator = _step.value;\n          option = options.find(function (_ref) {\n            var relatesTo = _ref.relatesTo;\n            return relatesTo.key === authenticator.key;\n          });\n\n          if (option) {\n            return \"break\";\n          }\n        };\n\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _ret = _loop();\n\n          if (_ret === \"break\") break;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return option;\n    }\n  }, {\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$values = this.values,\n          authenticators = _this$values.authenticators,\n          authenticator = _this$values.authenticator;\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options;\n\n      if (!authenticators || !authenticators.length) {\n        return false;\n      }\n\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        return true;\n      }\n\n      var matchedOption = this.findMatchedOption(authenticators, options);\n\n      if (matchedOption) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getNextStep\",\n    value: function getNextStep(authClient) {\n      var common = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getNextStep\", this).call(this, authClient);\n\n      var authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n      var options = authenticatorFromRemediation.options.map(function (option) {\n        var label = option.label,\n            relatesTo = option.relatesTo;\n        var key = relatesTo.key;\n        return {\n          label: label,\n          value: key\n        };\n      });\n      return Object.assign(Object.assign({}, common), {\n        options: options\n      });\n    }\n  }, {\n    key: \"mapAuthenticator\",\n    value: function mapAuthenticator(remediationValue) {\n      var _this$values2 = this.values,\n          authenticators = _this$values2.authenticators,\n          authenticator = _this$values2.authenticator;\n\n      if (isAuthenticator(authenticator) && authenticator.id) {\n        this.selectedAuthenticator = authenticator;\n        return authenticator;\n      }\n\n      var options = remediationValue.options;\n      var selectedOption = findMatchedOption(authenticators, options);\n      this.selectedAuthenticator = selectedOption.relatesTo;\n      this.selectedOption = selectedOption;\n      return {\n        id: selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value.form.value.find(function (_ref2) {\n          var name = _ref2.name;\n          return name === 'id';\n        }).value\n      };\n    }\n  }, {\n    key: \"getInputAuthenticator\",\n    value: function getInputAuthenticator(remediation) {\n      var options = remediation.options.map(function (_ref3) {\n        var label = _ref3.label,\n            relatesTo = _ref3.relatesTo;\n        return {\n          label: label,\n          value: relatesTo.key\n        };\n      });\n      return {\n        name: 'authenticator',\n        type: 'string',\n        options: options\n      };\n    }\n  }, {\n    key: \"getValuesAfterProceed\",\n    value: function getValuesAfterProceed() {\n      var _this = this;\n\n      this.values = _get(_getPrototypeOf(SelectAuthenticator.prototype), \"getValuesAfterProceed\", this).call(this);\n      var authenticators = this.values.authenticators.filter(function (authenticator) {\n        return compareAuthenticators(authenticator, _this.selectedAuthenticator) !== true;\n      });\n      return Object.assign(Object.assign({}, this.values), {\n        authenticators: authenticators\n      });\n    }\n  }]);\n\n  return SelectAuthenticator;\n}(Remediator);\n\nexport { SelectAuthenticator };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IA0BaA,mB;;;;;;;;;;;;;WAMX,2BAAkBC,cAAlB,EAAkCC,OAAlC,EAAyC;MACvC,IAAIC,MAAJ;;MADuC,2CAEbF,cAFa;MAAA;;MAAA;QAAA;UAAA,IAE9BG,aAF8B;UAGrCD,MAAM,GAAGD,OAAO,CACbG,IADM,CACD;YAAA,IAAGC,SAAH,QAAGA,SAAH;YAAA,OAAmBA,SAAS,CAACC,GAAV,KAAkBH,aAAa,CAACG,GAAnD;UAAA,CADC,CAAT;;UAEA,IAAIJ,MAAJ,EAAY;YACV;UACD;QAPoC;;QAEvC,oDAA0C;UAAA;;UAAA,sBAItC;QAEH;MARsC;QAAA;MAAA;QAAA;MAAA;;MASvC,OAAOA,MAAP;IACD;;;WAED,wBAAY;MACV,mBAA0C,KAAKK,MAA/C;MAAA,IAAQP,cAAR,gBAAQA,cAAR;MAAA,IAAwBG,aAAxB,gBAAwBA,aAAxB;MACA,IAAMK,4BAA4B,GAAGC,+BAA+B,CAAC,KAAKC,WAAN,CAApE;MACA,IAAQT,OAAR,GAAoBO,4BAApB,CAAQP,OAAR;;MAEA,IAAI,CAACD,cAAD,IAAmB,CAACA,cAAc,CAACW,MAAvC,EAA+C;QAC7C,OAAO,KAAP;MACD;;MAGD,IAAIC,eAAe,CAACT,aAAD,CAAf,IAAkCA,aAAa,CAACU,EAApD,EAAwD;QACtD,OAAO,IAAP;MACD;;MAGD,IAAMC,aAAa,GAAG,KAAKC,iBAAL,CAAuBf,cAAvB,EAAuCC,OAAvC,CAAtB;;MACA,IAAIa,aAAJ,EAAmB;QACjB,OAAO,IAAP;MACD;;MAED,OAAO,KAAP;IACD;;;WAGD,qBAAYE,UAAZ,EAA4C;MAC1C,IAAMC,MAAM,wFAAqBD,UAArB,CAAZ;;MACA,IAAMR,4BAA4B,GAAGC,+BAA+B,CAAC,KAAKC,WAAN,CAApE;MACA,IAAMT,OAAO,GAAGO,4BAA4B,CAACP,OAA7B,CAAsCiB,GAAtC,CAA0C,gBAAM,EAAG;QACjE,IACEC,KADF,GAGIjB,MAHJ,CACEiB,KADF;QAAA,IAEEd,SAFF,GAGIH,MAHJ,CAEEG,SAFF;QAIA,IAAMC,GAAG,GAAGD,SAAU,CAACC,GAAvB;QACA,OAAO;UAAEa,KAAK,EAALA,KAAF;UAASC,KAAK,EAAEd;QAAhB,CAAP;MACD,CAPe,CAAhB;MAQA,OAAYe,yCAAQ;QAAApB,OAAO,EAAPA;MAAA,CAAR,CAAZ;IACD;;;WAED,0BAAiBqB,gBAAjB,EAAsD;MACpD,oBAA0C,KAAKf,MAA/C;MAAA,IAAQP,cAAR,iBAAQA,cAAR;MAAA,IAAwBG,aAAxB,iBAAwBA,aAAxB;;MAGA,IAAIS,eAAe,CAACT,aAAD,CAAf,IAAkCA,aAAa,CAACU,EAApD,EAAwD;QACtD,KAAKU,qBAAL,GAA6BpB,aAA7B;QACA,OAAOA,aAAP;MACD;;MAED,IAAQF,OAAR,GAAoBqB,gBAApB,CAAQrB,OAAR;MACA,IAAMuB,cAAc,GAAGT,iBAAiB,CAACf,cAAD,EAAiBC,OAAjB,CAAxC;MACA,KAAKsB,qBAAL,GAA6BC,cAAc,CAACnB,SAA5C;MACA,KAAKmB,cAAL,GAAsBA,cAAtB;MACA,OAAO;QACLX,EAAE,EAAEW,cAAc,SAAd,kBAAc,WAAd,GAAc,MAAd,iBAAc,CAAEJ,KAAhB,CAAsBK,IAAtB,CAA2BL,KAA3B,CAAiChB,IAAjC,CAAsC;UAAA,IAAGsB,IAAH,SAAGA,IAAH;UAAA,OAAcA,IAAI,KAAK,IAAvB;QAAA,CAAtC,EAAmEN;MADlE,CAAP;IAGD;;;WAED,+BAAsBV,WAAtB,EAAiC;MAC/B,IAAMT,OAAO,GAAGS,WAAW,CAACT,OAAZ,CAAoBiB,GAApB,CAAwB,iBAAyB;QAAA,IAAtBC,KAAsB,SAAtBA,KAAsB;QAAA,IAAfd,SAAe,SAAfA,SAAe;QAC/D,OAAO;UACLc,KAAK,EAALA,KADK;UAELC,KAAK,EAAEf,SAAS,CAACC;QAFZ,CAAP;MAID,CALe,CAAhB;MAMA,OAAO;QAAEoB,IAAI,EAAE,eAAR;QAAyBC,IAAI,EAAE,QAA/B;QAAyC1B,OAAO,EAAPA;MAAzC,CAAP;IACD;;;WAED,iCAAqB;MAAA;;MACnB,KAAKM,MAAL;MAEA,IAAMP,cAAc,GAAI,KAAKO,MAAL,CAAYP,cAAZ,CACrB4B,MADqB,CACd,uBAAa,EAAG;QACtB,OAAOC,qBAAqB,CAAC1B,aAAD,EAAgB,KAAI,CAACoB,qBAArB,CAArB,KAAqE,IAA5E;MACD,CAHqB,CAAxB;MAIA,uCAAY,KAAKhB,MAAjB,GAAuB;QAAEP,cAAc,EAAdA;MAAF,CAAvB;IACD;;;;EA3FO8B,U","names":["SelectAuthenticator","authenticators","options","option","authenticator","find","relatesTo","key","values","authenticatorFromRemediation","getAuthenticatorFromRemediation","remediation","length","isAuthenticator","id","matchedOption","findMatchedOption","authClient","common","map","label","value","Object","remediationValue","selectedAuthenticator","selectedOption","form","name","type","filter","compareAuthenticators","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\Base\\SelectAuthenticator.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxOption, IdxRemediationValue } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\nimport { OktaAuthIdxInterface } from '../../../types';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  canRemediate() {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options);\n    if (matchedOption) {\n      return true;\n    }\n    \n    return false;\n  }\n\n  // TODO: remove this override method in the next major version - OKTA-491236\n  getNextStep(authClient: OktaAuthIdxInterface) {\n    const common = super.getNextStep(authClient);\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const options = authenticatorFromRemediation.options!.map(option => {\n      const { \n        label, \n        relatesTo\n      } = option as IdxOption;\n      const key = relatesTo!.key!;\n      return { label, value: key };\n    });\n    return { ...common, options };\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}