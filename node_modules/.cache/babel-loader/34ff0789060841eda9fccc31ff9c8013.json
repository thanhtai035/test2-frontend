{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Authenticator } from './Authenticator.js';\n\nclass SecurityQuestionVerification extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n\n    if (credentials && credentials.answer) {\n      return true;\n    }\n\n    const {\n      answer\n    } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values) {\n    const {\n      answer\n    } = values;\n\n    if (!answer) {\n      return;\n    }\n\n    return {\n      questionKey: this.meta.contextualData.enrolledQuestion.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [{\n      name: 'answer',\n      type: 'string',\n      label: 'Answer',\n      required: true\n    }];\n  }\n\n}\n\nexport { SecurityQuestionVerification };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAQM,MAAOA,4BAAP,SAA4CC,aAA5C,CAA6F;EACjGC,SAAS,CAACC,MAAD,EAA2C;IAClD,MAAM;MAAEC;IAAF,IAAkBD,MAAxB;;IACA,IAAIC,WAAW,IAAIA,WAAW,CAACC,MAA/B,EAAuC;MACrC,OAAO,IAAP;IACD;;IACD,MAAM;MAAEA;IAAF,IAAaF,MAAnB;IACA,OAAO,CAAC,CAACE,MAAT;EACD;;EAEDC,cAAc,CAACH,MAAD,EAA2C;IACvD,MAAM;MAAEE;IAAF,IAAaF,MAAnB;;IACA,IAAI,CAACE,MAAL,EAAa;MACX;IACD;;IACD,OAAO;MACLE,WAAW,EAAE,KAAKC,IAAL,CAAUC,cAAV,CAA0BC,gBAA1B,CAA4CH,WADpD;MAELF;IAFK,CAAP;EAID;;EAEDM,SAAS;IACP,OAAO,CACL;MAAEC,IAAI,EAAE,QAAR;MAAkBC,IAAI,EAAE,QAAxB;MAAkCC,KAAK,EAAE,QAAzC;MAAmDC,QAAQ,EAAE;IAA7D,CADK,CAAP;EAGD;;AAzBgG","names":["SecurityQuestionVerification","Authenticator","canVerify","values","credentials","answer","mapCredentials","questionKey","meta","contextualData","enrolledQuestion","getInputs","name","type","label","required"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\idx\\authenticator\\SecurityQuestionVerification.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}