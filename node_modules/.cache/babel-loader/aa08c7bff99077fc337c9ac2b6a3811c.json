{"ast":null,"code":"import _classCallCheck from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { Remediator } from './Base/Remediator.js';\n\nvar Identify = /*#__PURE__*/function (_Remediator) {\n  _inherits(Identify, _Remediator);\n\n  var _super = _createSuper(Identify);\n\n  function Identify() {\n    var _this;\n\n    _classCallCheck(this, Identify);\n\n    _this = _super.apply(this, arguments);\n    _this.map = {\n      'identifier': ['username']\n    };\n    return _this;\n  }\n\n  _createClass(Identify, [{\n    key: \"canRemediate\",\n    value: function canRemediate() {\n      var _this$getData = this.getData(),\n          identifier = _this$getData.identifier;\n\n      return !!identifier;\n    }\n  }, {\n    key: \"mapCredentials\",\n    value: function mapCredentials() {\n      var _this$values = this.values,\n          credentials = _this$values.credentials,\n          password = _this$values.password;\n\n      if (!credentials && !password) {\n        return;\n      }\n\n      return credentials || {\n        passcode: password\n      };\n    }\n  }, {\n    key: \"getInputCredentials\",\n    value: function getInputCredentials(input) {\n      return Object.assign(Object.assign({}, input.form.value[0]), {\n        name: 'password',\n        required: input.required\n      });\n    }\n  }]);\n\n  return Identify;\n}(Remediator);\n\nIdentify.remediationName = 'identify';\nexport { Identify };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;IAsBaA,Q;;;;;EAAb;IAAA;;IAAA;;;IAGE,YAAM;MACJ,cAAc,CAAC,UAAD;IADV,CAAN;IAHF;EA4BC;;;;WArBC,wBAAY;MACV,oBAAuB,KAAKC,OAAL,EAAvB;MAAA,IAAQC,UAAR,iBAAQA,UAAR;;MACA,OAAO,CAAC,CAACA,UAAT;IACD;;;WAED,0BAAc;MACZ,mBAAkC,KAAKC,MAAvC;MAAA,IAAQC,WAAR,gBAAQA,WAAR;MAAA,IAAqBC,QAArB,gBAAqBA,QAArB;;MACA,IAAI,CAACD,WAAD,IAAgB,CAACC,QAArB,EAA+B;QAC7B;MACD;;MACD,OAAOD,WAAW,IAAI;QAAEE,QAAQ,EAAED;MAAZ,CAAtB;IACD;;;WAED,6BAAoBE,KAApB,EAAyB;MACvB,uCACKA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAjB,CADL,GACwB;QACtBC,IAAI,EAAE,UADgB;QAEtBC,QAAQ,EAAEJ,KAAK,CAACI;MAFM,CADxB;IAKD;;;;EA1B2BC,U;;AACrBZ,QAAe,gBAAf,GAAkB,UAAlB","names":["Identify","getData","identifier","values","credentials","password","passcode","input","form","value","name","required","Remediator"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\remediators\\Identify.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}