{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\n\nfunction getFlowSpecification(oktaAuth) {\n  let flow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n  let remediators,\n      actions,\n      withCredentials = true;\n\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      withCredentials = false;\n      break;\n\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = ['unlock-account'];\n      break;\n\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n\n    default:\n      remediators = AuthenticationFlow;\n      break;\n  }\n\n  return {\n    flow,\n    remediators,\n    actions,\n    withCredentials\n  };\n}\n\nexport { getFlowSpecification };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;SAegBA,qBACdC,UACgC;EAAA,IAAhCC,IAAgC,uEAAT,SAAS;EAEhC,IAAIC,WAAJ;EAAA,IAAiBC,OAAjB;EAAA,IAA0BC,eAAe,GAAG,IAA5C;;EACA,QAAQH,IAAR;IACE,KAAK,UAAL;IACA,KAAK,QAAL;IACA,KAAK,eAAL;MACEC,WAAW,GAAGG,gBAAd;MACAD,eAAe,GAAG,KAAlB;MACA;;IACF,KAAK,iBAAL;IACA,KAAK,eAAL;MACEF,WAAW,GAAGI,oBAAd;MACAH,OAAO,GAAG,CACR,8BADQ,EAER,wCAFQ,CAAV;MAIAC,eAAe,GAAG,KAAlB;MACA;;IACF,KAAK,eAAL;MACEF,WAAW,GAAGK,iBAAd;MACAH,eAAe,GAAG,KAAlB;MACAD,OAAO,GAAG,CACR,gBADQ,CAAV;MAGA;;IACF,KAAK,cAAL;IACA,KAAK,OAAL;IACA,KAAK,QAAL;MACED,WAAW,GAAGM,kBAAd;MACA;;IACF;MAEEN,WAAW,GAAGM,kBAAd;MACA;EA/BJ;;EAiCA,OAAO;IAAEP,IAAF;IAAQC,WAAR;IAAqBC,OAArB;IAA8BC;EAA9B,CAAP;AACF","names":["getFlowSpecification","oktaAuth","flow","remediators","actions","withCredentials","RegistrationFlow","PasswordRecoveryFlow","AccountUnlockFlow","AuthenticationFlow"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\jobs-ui\\node_modules\\@okta\\lib\\idx\\flow\\FlowSpecification.ts"],"sourcesContent":["import { OktaAuthIdxInterface, FlowIdentifier } from '../../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\nimport { RemediationFlow } from './RemediationFlow';\n\nexport interface FlowSpecification {\n  flow: FlowIdentifier;\n  remediators: RemediationFlow;\n  actions?: string[];\n  withCredentials?: boolean;\n}\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n"]},"metadata":{},"sourceType":"module"}