{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/ADMIN/Downloads/okta-springboot-react-master/okta-springboot-react-master/test2/test2-s3760615-front-end/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar isFieldMutable = function isFieldMutable(field) {\n  return field.mutable !== false;\n};\n\nvar divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability(action) {\n  var _a, _b;\n\n  var defaultParamsForAction = {};\n  var neededParamsForAction = [];\n  var immutableParamsForAction = {};\n\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return {\n      defaultParamsForAction: defaultParamsForAction,\n      neededParamsForAction: neededParamsForAction,\n      immutableParamsForAction: immutableParamsForAction\n    };\n  }\n\n  var _iterator = _createForOfIteratorHelper(action.value),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var field = _step.value;\n\n      if (isFieldMutable(field)) {\n        neededParamsForAction.push(field);\n\n        if ((_a = field.value) !== null && _a !== void 0 ? _a : false) {\n          defaultParamsForAction[field.name] = field.value;\n        }\n      } else {\n        immutableParamsForAction[field.name] = (_b = field.value) !== null && _b !== void 0 ? _b : '';\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    defaultParamsForAction: defaultParamsForAction,\n    neededParamsForAction: neededParamsForAction,\n    immutableParamsForAction: immutableParamsForAction\n  };\n};\n\nvar divideActionParamsByMutability = function divideActionParamsByMutability(actionList) {\n  actionList = Array.isArray(actionList) ? actionList : [actionList];\n  var neededParams = [];\n  var defaultParams = {};\n  var immutableParams = {};\n\n  var _iterator2 = _createForOfIteratorHelper(actionList),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var action = _step2.value;\n\n      var _divideSingleActionPa = divideSingleActionParamsByMutability(action),\n          defaultParamsForAction = _divideSingleActionPa.defaultParamsForAction,\n          neededParamsForAction = _divideSingleActionPa.neededParamsForAction,\n          immutableParamsForAction = _divideSingleActionPa.immutableParamsForAction;\n\n      neededParams.push(neededParamsForAction);\n      defaultParams[action.name] = defaultParamsForAction;\n      immutableParams[action.name] = immutableParamsForAction;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return {\n    defaultParams: defaultParams,\n    neededParams: neededParams,\n    immutableParams: immutableParams\n  };\n};\n\nexport { divideActionParamsByMutability };","map":{"version":3,"mappings":";;;;;;;;;;;;;AAcA,IAAMA,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA6B;EAElD,OAASA,KAAK,CAACC,OAAN,KAAkB,KAA3B;AACD,CAHD;;AAKA,IAAMC,oCAAoC,GAAG,SAASA,oCAAT,CAA+CC,MAA/C,EAAqD;;;EAChG,IAAMC,sBAAsB,GAAG,EAA/B;EACA,IAAMC,qBAAqB,GAAG,EAA9B;EACA,IAAMC,wBAAwB,GAAG,EAAjC;;EAIA,IAAI,CAACH,MAAM,CAACI,KAAZ,EAAmB;IACjBF,qBAAqB,CAACG,IAAtB,CAA2BL,MAA3B;IACA,OAAO;MAAEC,sBAAsB,EAAtBA,sBAAF;MAA0BC,qBAAqB,EAArBA,qBAA1B;MAAiDC,wBAAwB,EAAxBA;IAAjD,CAAP;EACD;;EAV+F,2CAY7EH,MAAM,CAACI,KAZsE;EAAA;;EAAA;IAYhG,oDAAkC;MAAA,IAAxBP,KAAwB;;MAEhC,IAAKD,cAAc,CAAEC,KAAF,CAAnB,EAA+B;QAE7BK,qBAAqB,CAACG,IAAtB,CAA2BR,KAA3B;;QAEA,IAAK,WAAK,CAACO,KAAN,MAAW,IAAX,IAAWE,aAAX,GAAWA,EAAX,GAAe,KAApB,EAA4B;UAC1BL,sBAAsB,CAACJ,KAAK,CAACU,IAAP,CAAtB,GAAqCV,KAAK,CAACO,KAA3C;QACD;MAEF,CARD,MAQO;QACLD,wBAAwB,CAACN,KAAK,CAACU,IAAP,CAAxB,GAAuC,WAAK,CAACH,KAAN,MAAe,IAAf,IAAeI,aAAf,GAAeA,EAAf,GAAe,EAAtD;MACD;IACF;EAzB+F;IAAA;EAAA;IAAA;EAAA;;EA0BhG,OAAO;IAAEP,sBAAsB,EAAtBA,sBAAF;IAA0BC,qBAAqB,EAArBA,qBAA1B;IAAiDC,wBAAwB,EAAxBA;EAAjD,CAAP;AACD,CA3BD;;AA6Ba,kCAA8B,GAAG,SAASM,8BAAT,CAAyCC,UAAzC,EAAmD;EAE/FA,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAcF,UAAd,IAA4BA,UAA5B,GAAyC,CAAEA,UAAF,CAAtD;EACA,IAAMG,YAAY,GAAG,EAArB;EACA,IAAMC,aAAa,GAAG,EAAtB;EACA,IAAMC,eAAe,GAAG,EAAxB;;EAL+F,4CAO3EL,UAP2E;EAAA;;EAAA;IAO/F,uDAAiC;MAAA,IAAvBV,MAAuB;;MAC/B,4BAIID,oCAAoC,CAACC,MAAD,CAJxC;MAAA,IACEC,sBADF,yBACEA,sBADF;MAAA,IAEEC,qBAFF,yBAEEA,qBAFF;MAAA,IAGEC,wBAHF,yBAGEA,wBAHF;;MAKAU,YAAY,CAACR,IAAb,CAAkBH,qBAAlB;MACAY,aAAa,CAACd,MAAM,CAACO,IAAR,CAAb,GAA6BN,sBAA7B;MACAc,eAAe,CAACf,MAAM,CAACO,IAAR,CAAf,GAA+BJ,wBAA/B;IACD;EAhB8F;IAAA;EAAA;IAAA;EAAA;;EAkB/F,OAAO;IAAEW,aAAa,EAAbA,aAAF;IAAiBD,YAAY,EAAZA,YAAjB;IAA+BE,eAAe,EAAfA;EAA/B,CAAP;AACF,CAnBa","names":["isFieldMutable","field","mutable","divideSingleActionParamsByMutability","action","defaultParamsForAction","neededParamsForAction","immutableParamsForAction","value","push","_a","name","_b","divideActionParamsByMutability","actionList","Array","isArray","neededParams","defaultParams","immutableParams"],"sources":["C:\\Users\\ADMIN\\Downloads\\okta-springboot-react-master\\okta-springboot-react-master\\test2\\test2-s3760615-front-end\\node_modules\\@okta\\lib\\idx\\idxState\\v1\\actionParser.ts"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n"]},"metadata":{},"sourceType":"module"}