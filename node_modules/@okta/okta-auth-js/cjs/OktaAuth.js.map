{"version":3,"file":"OktaAuth.js","names":["OktaAuth","constructor","args","features","options","storageManager","StorageManager","cookies","storageUtil","transactionManager","TransactionManager","_oktaUserAgent","OktaUserAgent","tx","status","transactionStatus","bind","resume","resumeTransaction","exists","transactionExists","_get","name","storage","get","introspect","introspectAuthn","createTransaction","res","AuthTransaction","postToTransaction","url","pkce","DEFAULT_CODE_CHALLENGE_METHOD","PKCE","generateVerifier","computeChallenge","getPKCEStorage","getLegacyPKCEStorage","getHttpCache","_pending","handleLogin","redirectUri","window","location","origin","maxClockSkew","DEFAULT_MAX_CLOCK_SKEW","ignoreLifetime","session","close","closeSession","sessionExists","getSession","refresh","refreshSession","setCookieAndRedirect","_tokenQueue","PromiseQueue","useQueue","method","prototype","push","getWithRedirectFn","getWithRedirect","getWithRedirectApi","_setLocation","setLocation","parseFromUrlFn","parseFromUrl","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","document","token","prepareTokenParams","exchangeCodeForTokens","getWithoutPrompt","getWithPopup","decode","decodeToken","revoke","revokeToken","renew","renewToken","renewTokensWithRefresh","renewTokens","getUserInfo","accessTokenObject","idTokenObject","verify","verifyToken","isLoginRedirect","toWrap","forEach","key","boundStartTransaction","startTransaction","idx","interact","makeIdxResponse","makeIdxState","authenticate","register","start","poll","proceed","cancel","recoverPassword","handleInteractionCodeRedirect","isInteractionRequired","isInteractionRequiredError","handleEmailVerifyCallback","isEmailVerifyCallback","parseEmailVerifyCallback","isEmailVerifyCallbackError","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","setFlow","flow","getFlow","canProceed","unlockAccount","http","setRequestHeader","fingerprint","emitter","Emitter","tokenManager","TokenManager","authStateManager","AuthStateManager","hasSharedStorage","services","syncStorage","serviceManager","ServiceManager","updateAuthState","stop","setHeaders","headers","signIn","opts","signInWithCredentials","_postToTransaction","sendFingerprint","then","signInWithRedirect","originalUri","additionalParams","setOriginalUri","params","scopes","clear","catch","e","errorCode","revokeAccessToken","accessToken","getTokens","accessTokenKey","getStorageKeyByType","remove","resolve","revokeRefreshToken","refreshToken","refreshTokenKey","getSignOutRedirectUrl","idToken","postLogoutRedirectUri","state","getTokensSync","logoutUrl","idTokenHint","logoutUri","encodeURIComponent","signOut","defaultUri","currentUri","href","reload","assign","clearTokensBeforeRedirect","addPendingRemoveFlags","webfinger","isAuthenticated","autoRenew","autoRemove","getOptions","shouldRenew","onExpiredToken","shouldRemove","hasExpired","undefined","getUser","getIdToken","getAccessToken","getRefreshToken","storeTokensFromRedirect","tokens","setTokens","sessionStorage","browserStorage","getSessionStorage","setItem","REFERRER_PATH_STORAGE_KEY","sharedStorage","getOriginalUriStorage","getOriginalUri","getItem","removeOriginalUri","removeItem","handleLoginRedirect","oAuthResponse","restoreOriginalUri","replace","isPKCE","hasResponseType","responseType","Array","isArray","length","isAuthorizationCodeFlow","getIssuerOrigin","issuer","split","forgotPassword","verifyRecoveryToken","invokeApiMethod","crypto","webauthn","constants"],"sources":["../../lib/OktaAuth.ts"],"sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuthInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  CryptoAPI,\n  WebauthnAPI,\n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n  FlowIdentifier,\n  GetWithRedirectAPI,\n  ParseFromUrlInterface,\n  GetWithRedirectFunction,\n  RequestOptions,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  CustomUserClaims,\n  RequestData,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspectAuthn,\n  postToTransaction,\n  AuthTransaction,\n  TransactionState\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport * as crypto from './crypto';\nimport * as webauthn from './crypto/webauthn';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n} from './util';\nimport { TokenManager } from './TokenManager';\nimport { ServiceManager } from './ServiceManager';\nimport { get, httpRequest, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport { StorageManager } from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect,\n  authenticate,\n  cancel,\n  poll,\n  proceed,\n  register,\n  recoverPassword,\n  unlockAccount,\n  startTransaction,\n  handleInteractionCodeRedirect,\n  canProceed,\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  parseEmailVerifyCallback,\n  isEmailVerifyCallbackError\n} from './idx';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\nimport {\n  getSavedTransactionMeta,\n  createTransactionMeta,\n  getTransactionMeta,\n  saveTransactionMeta,\n  clearTransactionMeta,\n  isTransactionMetaValid\n} from './idx/transactionMeta';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState';\n\nclass OktaAuth implements OktaAuthInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI = features;\n  static crypto: CryptoAPI = crypto;\n  static webauthn: WebauthnAPI = webauthn;\n  features: FeaturesAPI = features;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: any;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  serviceManager: ServiceManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.storageManager = new StorageManager(options.storageManager!, options.cookies!, options.storageUtil!);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const storage = options.storageUtil!.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this),\n      createTransaction: (res?: TransactionState) => {\n        return new AuthTransaction(this, res);\n      },\n      postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n        return postToTransaction(this, url, args, options);\n      }\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil || {}, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = (method) => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n\n    // eslint-disable-next-line max-len\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this)) as GetWithRedirectFunction;\n    const getWithRedirectApi: GetWithRedirectAPI = Object.assign(getWithRedirectFn, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        if (options.setLocation) {\n          options.setLocation(url);\n        } else {\n          window.location = url;\n        }\n      }\n    });\n    // eslint-disable-next-line max-len\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this)) as ParseFromUrlInterface;\n    const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n        accessTokenObject: AccessToken,\n        idTokenObject: IDToken\n      ): Promise<UserClaims<C>> => {\n        return getUserInfo(this, accessTokenObject, idTokenObject);\n      },\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n    // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n    const toWrap = [\n      'getWithoutPrompt',\n      'getWithPopup',\n      'revoke',\n      'renew',\n      'renewTokensWithRefresh',\n      'renewTokens'\n    ];\n    toWrap.forEach(key => {\n      this.token[key] = useQueue(this.token[key]);\n    });\n\n    // IDX\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      makeIdxResponse: makeIdxState.bind(null, this),\n      \n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n\n      // oauth redirect callback\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n\n      // interaction required callback\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n\n      // email verify callback\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      \n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: (flow: FlowIdentifier) => {\n        this.options.flow = flow;\n      },\n      getFlow: (): FlowIdentifier | undefined => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this),\n    };\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n\n    // Enable `syncStorage` only if token storage is shared across tabs (type is `localStorage` or `cookie`)\n    if (!this.tokenManager.hasSharedStorage()) {\n      args.services = { ...args.services, syncStorage: false };\n    }\n\n    // ServiceManager\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n\n  async start() {\n    await this.serviceManager.start();\n    // TODO: review tokenManager.start\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      await this.authStateManager.updateAuthState();\n    }\n  }\n\n  async stop() {\n    // TODO: review tokenManager.stop\n    this.tokenManager.stop();\n    await this.serviceManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n\n  // Authn  V1\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  // Authn  V1\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n\n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<unknown> {\n    return this.session.close() // DELETE /api/v1/sessions/me\n    .then(async () => {\n      // Clear all local tokens\n      this.tokenManager.clear();\n    })\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      // local tokens are cleared once session is closed\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      if (options.clearTokensBeforeRedirect) {\n        // Clear all local tokens\n        this.tokenManager.clear();\n      } else {\n        this.tokenManager.addPendingRemoveFlags();\n      }\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n    // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n    const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n    let { accessToken } = this.tokenManager.getTokensSync();\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = undefined;\n      if (shouldRenew) {\n        try {\n          accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    let { idToken } = this.tokenManager.getTokensSync();\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = undefined;\n      if (shouldRenew) {\n        try {\n          idToken = await this.tokenManager.renew('idToken') as IDToken;\n        } catch {\n          // Renew errors will emit an \"error\" event \n        }\n      } else if (shouldRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string | undefined {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      try {\n        // For redirect flow, get state from the URL and use it to retrieve the originalUri\n        const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n        state = oAuthResponse.state;\n        originalUri = originalUri || this.getOriginalUri(state);\n        await this.storeTokensFromRedirect();\n      } catch(e) {\n        // auth state should be updated\n        await this.authStateManager.updateAuthState();\n        throw e;\n      }\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else if (originalUri) {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: OAuthResponseType): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.options.issuer!.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n\n  // Escape hatch method to make arbitrary OKTA API call\n  async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n    if (!options.accessToken) {\n      const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      options.accessToken = accessToken?.accessToken;\n    }\n    return httpRequest(this, options);\n  }\n}\n\n// Hoist feature detection functions to prototype & static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist constants for CommonJS users\nObject.assign(OktaAuth, {\n  constants\n});\n\nexport default OktaAuth;"],"mappings":"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"}