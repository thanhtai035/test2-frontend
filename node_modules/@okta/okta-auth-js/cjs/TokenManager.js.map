{"version":3,"file":"TokenManager.js","names":["DEFAULT_OPTIONS","autoRenew","autoRemove","syncStorage","clearPendingRemoveTokens","storage","undefined","expireEarlySeconds","storageKey","TOKEN_STORAGE_NAME","defaultState","expireTimeouts","renewPromise","TokenManager","on","event","handler","context","emitter","off","constructor","sdk","options","AuthSdkError","storageOptions","secure","storageProvider","storageType","storageManager","getTokenStorage","useSeparateCookies","clock","SdkClock","create","state","hasSharedStorage","isSharedStorage","start","setExpireEventTimeoutAll","stop","clearExpireEventTimeoutAll","getOptions","getExpireTime","token","expireTime","expiresAt","hasExpired","now","emitExpired","key","emit","EVENT_EXPIRED","emitRenewed","freshToken","oldToken","EVENT_RENEWED","emitAdded","EVENT_ADDED","emitRemoved","EVENT_REMOVED","emitError","error","EVENT_ERROR","clearExpireEventTimeout","clearTimeout","Object","prototype","hasOwnProperty","call","setExpireEventTimeout","expireEventWait","Math","max","expireEventTimeout","setTimeout","tokenStorage","getStorage","resetExpireEventTimeoutAll","add","setStorage","emitSetStorageEvent","getSync","get","getTokensSync","tokens","forEach","accessToken","idToken","refreshToken","getTokens","getStorageKeyByType","type","getTokenType","EVENT_SET_STORAGE","setTokens","accessTokenCb","idTokenCb","refreshTokenCb","handleTokenCallback","handleAdded","handleRenewed","handleRemoved","types","existingTokens","newToken","existingToken","remove","removedToken","renewToken","renew","validateToken","e","reject","renewTokens","then","tokenType","catch","err","tokenKey","finally","clear","clearStorage","removedTokens","pendingRemove","updateRefreshToken","REFRESH_TOKEN_STORAGE_KEY","removeRefreshToken","addPendingRemoveFlags"],"sources":["../../lib/TokenManager.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuthInterface,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from './constants';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  hasSharedStorage() {\n    return this.storage.isSharedStorage();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return this.state.renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n"],"mappings":"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"}